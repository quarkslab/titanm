// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nugget/app/protoapi/header.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_nugget_2fapp_2fprotoapi_2fheader_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_nugget_2fapp_2fprotoapi_2fheader_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_nugget_2fapp_2fprotoapi_2fheader_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_nugget_2fapp_2fprotoapi_2fheader_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_nugget_2fapp_2fprotoapi_2fheader_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_nugget_2fapp_2fprotoapi_2fheader_2eproto_metadata_getter(int index);
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE
namespace nugget {
namespace app {
namespace protoapi {

enum APImessageID : int {
  AMID_RESERVED = 0,
  API_REVISION_ONE = 1,
  SEND_SEQUENCE = 2,
  ECHO_THIS = 3,
  NOTICE = 4,
  CONTROL_REQUEST = 5,
  TESTING_API_CALL = 6,
  TESTING_API_RESPONSE = 7,
  APImessageID_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  APImessageID_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool APImessageID_IsValid(int value);
constexpr APImessageID APImessageID_MIN = AMID_RESERVED;
constexpr APImessageID APImessageID_MAX = TESTING_API_RESPONSE;
constexpr int APImessageID_ARRAYSIZE = APImessageID_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* APImessageID_descriptor();
template<typename T>
inline const std::string& APImessageID_Name(T enum_t_value) {
  static_assert(::std::is_same<T, APImessageID>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function APImessageID_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    APImessageID_descriptor(), enum_t_value);
}
inline bool APImessageID_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, APImessageID* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<APImessageID>(
    APImessageID_descriptor(), name, value);
}
enum APIcallResult : int {
  SUCCESS = 0,
  FAIL = 1,
  APIcallResult_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  APIcallResult_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool APIcallResult_IsValid(int value);
constexpr APIcallResult APIcallResult_MIN = SUCCESS;
constexpr APIcallResult APIcallResult_MAX = FAIL;
constexpr int APIcallResult_ARRAYSIZE = APIcallResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* APIcallResult_descriptor();
template<typename T>
inline const std::string& APIcallResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, APIcallResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function APIcallResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    APIcallResult_descriptor(), enum_t_value);
}
inline bool APIcallResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, APIcallResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<APIcallResult>(
    APIcallResult_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protoapi
}  // namespace app
}  // namespace nugget

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::nugget::app::protoapi::APImessageID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nugget::app::protoapi::APImessageID>() {
  return ::nugget::app::protoapi::APImessageID_descriptor();
}
template <> struct is_proto_enum< ::nugget::app::protoapi::APIcallResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nugget::app::protoapi::APIcallResult>() {
  return ::nugget::app::protoapi::APIcallResult_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_nugget_2fapp_2fprotoapi_2fheader_2eproto
