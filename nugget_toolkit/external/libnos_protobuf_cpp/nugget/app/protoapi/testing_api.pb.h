// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nugget/app/protoapi/testing_api.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[37]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(int index);
namespace nugget {
namespace app {
namespace protoapi {
class AesCavpTest;
struct AesCavpTestDefaultTypeInternal;
extern AesCavpTestDefaultTypeInternal _AesCavpTest_default_instance_;
class AesCavpTestResult;
struct AesCavpTestResultDefaultTypeInternal;
extern AesCavpTestResultDefaultTypeInternal _AesCavpTestResult_default_instance_;
class AesCbcEncryptTest;
struct AesCbcEncryptTestDefaultTypeInternal;
extern AesCbcEncryptTestDefaultTypeInternal _AesCbcEncryptTest_default_instance_;
class AesCbcEncryptTestResult;
struct AesCbcEncryptTestResultDefaultTypeInternal;
extern AesCbcEncryptTestResultDefaultTypeInternal _AesCbcEncryptTestResult_default_instance_;
class AesCmacTest;
struct AesCmacTestDefaultTypeInternal;
extern AesCmacTestDefaultTypeInternal _AesCmacTest_default_instance_;
class AesCmacTestResult;
struct AesCmacTestResultDefaultTypeInternal;
extern AesCmacTestResultDefaultTypeInternal _AesCmacTestResult_default_instance_;
class AesGcmEncryptTest;
struct AesGcmEncryptTestDefaultTypeInternal;
extern AesGcmEncryptTestDefaultTypeInternal _AesGcmEncryptTest_default_instance_;
class AesGcmEncryptTestResult;
struct AesGcmEncryptTestResultDefaultTypeInternal;
extern AesGcmEncryptTestResultDefaultTypeInternal _AesGcmEncryptTestResult_default_instance_;
class CavpAesGcmTest;
struct CavpAesGcmTestDefaultTypeInternal;
extern CavpAesGcmTestDefaultTypeInternal _CavpAesGcmTest_default_instance_;
class CavpAesGcmTestResult;
struct CavpAesGcmTestResultDefaultTypeInternal;
extern CavpAesGcmTestResultDefaultTypeInternal _CavpAesGcmTestResult_default_instance_;
class CavpCkdfTest;
struct CavpCkdfTestDefaultTypeInternal;
extern CavpCkdfTestDefaultTypeInternal _CavpCkdfTest_default_instance_;
class CavpCkdfTestResult;
struct CavpCkdfTestResultDefaultTypeInternal;
extern CavpCkdfTestResultDefaultTypeInternal _CavpCkdfTestResult_default_instance_;
class CavpCmacGenTest;
struct CavpCmacGenTestDefaultTypeInternal;
extern CavpCmacGenTestDefaultTypeInternal _CavpCmacGenTest_default_instance_;
class CavpCmacGenTestResult;
struct CavpCmacGenTestResultDefaultTypeInternal;
extern CavpCmacGenTestResultDefaultTypeInternal _CavpCmacGenTestResult_default_instance_;
class CavpDrbgTest;
struct CavpDrbgTestDefaultTypeInternal;
extern CavpDrbgTestDefaultTypeInternal _CavpDrbgTest_default_instance_;
class CavpDrbgTestResult;
struct CavpDrbgTestResultDefaultTypeInternal;
extern CavpDrbgTestResultDefaultTypeInternal _CavpDrbgTestResult_default_instance_;
class CavpEcdsaKeyPairTest;
struct CavpEcdsaKeyPairTestDefaultTypeInternal;
extern CavpEcdsaKeyPairTestDefaultTypeInternal _CavpEcdsaKeyPairTest_default_instance_;
class CavpEcdsaKeyPairTestResult;
struct CavpEcdsaKeyPairTestResultDefaultTypeInternal;
extern CavpEcdsaKeyPairTestResultDefaultTypeInternal _CavpEcdsaKeyPairTestResult_default_instance_;
class CavpEcdsaPkvTest;
struct CavpEcdsaPkvTestDefaultTypeInternal;
extern CavpEcdsaPkvTestDefaultTypeInternal _CavpEcdsaPkvTest_default_instance_;
class CavpEcdsaPkvTestResult;
struct CavpEcdsaPkvTestResultDefaultTypeInternal;
extern CavpEcdsaPkvTestResultDefaultTypeInternal _CavpEcdsaPkvTestResult_default_instance_;
class CavpEcdsaSigGenTest;
struct CavpEcdsaSigGenTestDefaultTypeInternal;
extern CavpEcdsaSigGenTestDefaultTypeInternal _CavpEcdsaSigGenTest_default_instance_;
class CavpEcdsaSigGenTestResult;
struct CavpEcdsaSigGenTestResultDefaultTypeInternal;
extern CavpEcdsaSigGenTestResultDefaultTypeInternal _CavpEcdsaSigGenTestResult_default_instance_;
class CavpEcdsaSigVerTest;
struct CavpEcdsaSigVerTestDefaultTypeInternal;
extern CavpEcdsaSigVerTestDefaultTypeInternal _CavpEcdsaSigVerTest_default_instance_;
class CavpEcdsaSigVerTestResult;
struct CavpEcdsaSigVerTestResultDefaultTypeInternal;
extern CavpEcdsaSigVerTestResultDefaultTypeInternal _CavpEcdsaSigVerTestResult_default_instance_;
class CavpHmacTest;
struct CavpHmacTestDefaultTypeInternal;
extern CavpHmacTestDefaultTypeInternal _CavpHmacTest_default_instance_;
class CavpHmacTestResult;
struct CavpHmacTestResultDefaultTypeInternal;
extern CavpHmacTestResultDefaultTypeInternal _CavpHmacTestResult_default_instance_;
class CavpRsaKeyGenTest;
struct CavpRsaKeyGenTestDefaultTypeInternal;
extern CavpRsaKeyGenTestDefaultTypeInternal _CavpRsaKeyGenTest_default_instance_;
class CavpRsaKeyGenTestResult;
struct CavpRsaKeyGenTestResultDefaultTypeInternal;
extern CavpRsaKeyGenTestResultDefaultTypeInternal _CavpRsaKeyGenTestResult_default_instance_;
class CavpRsaSigGenTest;
struct CavpRsaSigGenTestDefaultTypeInternal;
extern CavpRsaSigGenTestDefaultTypeInternal _CavpRsaSigGenTest_default_instance_;
class CavpRsaSigGenTestResult;
struct CavpRsaSigGenTestResultDefaultTypeInternal;
extern CavpRsaSigGenTestResultDefaultTypeInternal _CavpRsaSigGenTestResult_default_instance_;
class CavpRsaSigVerTest;
struct CavpRsaSigVerTestDefaultTypeInternal;
extern CavpRsaSigVerTestDefaultTypeInternal _CavpRsaSigVerTest_default_instance_;
class CavpRsaSigVerTestResult;
struct CavpRsaSigVerTestResultDefaultTypeInternal;
extern CavpRsaSigVerTestResultDefaultTypeInternal _CavpRsaSigVerTestResult_default_instance_;
class CavpShaMctTest;
struct CavpShaMctTestDefaultTypeInternal;
extern CavpShaMctTestDefaultTypeInternal _CavpShaMctTest_default_instance_;
class CavpShaMsgTest;
struct CavpShaMsgTestDefaultTypeInternal;
extern CavpShaMsgTestDefaultTypeInternal _CavpShaMsgTest_default_instance_;
class CavpShaTestResult;
struct CavpShaTestResultDefaultTypeInternal;
extern CavpShaTestResultDefaultTypeInternal _CavpShaTestResult_default_instance_;
class TrngTest;
struct TrngTestDefaultTypeInternal;
extern TrngTestDefaultTypeInternal _TrngTest_default_instance_;
class TrngTestResult;
struct TrngTestResultDefaultTypeInternal;
extern TrngTestResultDefaultTypeInternal _TrngTestResult_default_instance_;
}  // namespace protoapi
}  // namespace app
}  // namespace nugget
PROTOBUF_NAMESPACE_OPEN
template<> ::nugget::app::protoapi::AesCavpTest* Arena::CreateMaybeMessage<::nugget::app::protoapi::AesCavpTest>(Arena*);
template<> ::nugget::app::protoapi::AesCavpTestResult* Arena::CreateMaybeMessage<::nugget::app::protoapi::AesCavpTestResult>(Arena*);
template<> ::nugget::app::protoapi::AesCbcEncryptTest* Arena::CreateMaybeMessage<::nugget::app::protoapi::AesCbcEncryptTest>(Arena*);
template<> ::nugget::app::protoapi::AesCbcEncryptTestResult* Arena::CreateMaybeMessage<::nugget::app::protoapi::AesCbcEncryptTestResult>(Arena*);
template<> ::nugget::app::protoapi::AesCmacTest* Arena::CreateMaybeMessage<::nugget::app::protoapi::AesCmacTest>(Arena*);
template<> ::nugget::app::protoapi::AesCmacTestResult* Arena::CreateMaybeMessage<::nugget::app::protoapi::AesCmacTestResult>(Arena*);
template<> ::nugget::app::protoapi::AesGcmEncryptTest* Arena::CreateMaybeMessage<::nugget::app::protoapi::AesGcmEncryptTest>(Arena*);
template<> ::nugget::app::protoapi::AesGcmEncryptTestResult* Arena::CreateMaybeMessage<::nugget::app::protoapi::AesGcmEncryptTestResult>(Arena*);
template<> ::nugget::app::protoapi::CavpAesGcmTest* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpAesGcmTest>(Arena*);
template<> ::nugget::app::protoapi::CavpAesGcmTestResult* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpAesGcmTestResult>(Arena*);
template<> ::nugget::app::protoapi::CavpCkdfTest* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpCkdfTest>(Arena*);
template<> ::nugget::app::protoapi::CavpCkdfTestResult* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpCkdfTestResult>(Arena*);
template<> ::nugget::app::protoapi::CavpCmacGenTest* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpCmacGenTest>(Arena*);
template<> ::nugget::app::protoapi::CavpCmacGenTestResult* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpCmacGenTestResult>(Arena*);
template<> ::nugget::app::protoapi::CavpDrbgTest* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpDrbgTest>(Arena*);
template<> ::nugget::app::protoapi::CavpDrbgTestResult* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpDrbgTestResult>(Arena*);
template<> ::nugget::app::protoapi::CavpEcdsaKeyPairTest* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpEcdsaKeyPairTest>(Arena*);
template<> ::nugget::app::protoapi::CavpEcdsaKeyPairTestResult* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpEcdsaKeyPairTestResult>(Arena*);
template<> ::nugget::app::protoapi::CavpEcdsaPkvTest* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpEcdsaPkvTest>(Arena*);
template<> ::nugget::app::protoapi::CavpEcdsaPkvTestResult* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpEcdsaPkvTestResult>(Arena*);
template<> ::nugget::app::protoapi::CavpEcdsaSigGenTest* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpEcdsaSigGenTest>(Arena*);
template<> ::nugget::app::protoapi::CavpEcdsaSigGenTestResult* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpEcdsaSigGenTestResult>(Arena*);
template<> ::nugget::app::protoapi::CavpEcdsaSigVerTest* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpEcdsaSigVerTest>(Arena*);
template<> ::nugget::app::protoapi::CavpEcdsaSigVerTestResult* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpEcdsaSigVerTestResult>(Arena*);
template<> ::nugget::app::protoapi::CavpHmacTest* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpHmacTest>(Arena*);
template<> ::nugget::app::protoapi::CavpHmacTestResult* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpHmacTestResult>(Arena*);
template<> ::nugget::app::protoapi::CavpRsaKeyGenTest* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpRsaKeyGenTest>(Arena*);
template<> ::nugget::app::protoapi::CavpRsaKeyGenTestResult* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpRsaKeyGenTestResult>(Arena*);
template<> ::nugget::app::protoapi::CavpRsaSigGenTest* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpRsaSigGenTest>(Arena*);
template<> ::nugget::app::protoapi::CavpRsaSigGenTestResult* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpRsaSigGenTestResult>(Arena*);
template<> ::nugget::app::protoapi::CavpRsaSigVerTest* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpRsaSigVerTest>(Arena*);
template<> ::nugget::app::protoapi::CavpRsaSigVerTestResult* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpRsaSigVerTestResult>(Arena*);
template<> ::nugget::app::protoapi::CavpShaMctTest* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpShaMctTest>(Arena*);
template<> ::nugget::app::protoapi::CavpShaMsgTest* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpShaMsgTest>(Arena*);
template<> ::nugget::app::protoapi::CavpShaTestResult* Arena::CreateMaybeMessage<::nugget::app::protoapi::CavpShaTestResult>(Arena*);
template<> ::nugget::app::protoapi::TrngTest* Arena::CreateMaybeMessage<::nugget::app::protoapi::TrngTest>(Arena*);
template<> ::nugget::app::protoapi::TrngTestResult* Arena::CreateMaybeMessage<::nugget::app::protoapi::TrngTestResult>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace nugget {
namespace app {
namespace protoapi {

enum KeySize : int {
  KS_RESERVED = 0,
  s128b = 16,
  s192b = 24,
  s256b = 32,
  KeySize_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  KeySize_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool KeySize_IsValid(int value);
constexpr KeySize KeySize_MIN = KS_RESERVED;
constexpr KeySize KeySize_MAX = s256b;
constexpr int KeySize_ARRAYSIZE = KeySize_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* KeySize_descriptor();
template<typename T>
inline const std::string& KeySize_Name(T enum_t_value) {
  static_assert(::std::is_same<T, KeySize>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function KeySize_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    KeySize_descriptor(), enum_t_value);
}
inline bool KeySize_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, KeySize* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<KeySize>(
    KeySize_descriptor(), name, value);
}
enum DcryptError : int {
  DE_RESERVED = 0,
  DE_NO_ERROR = 1,
  INVALID_PLAINTEXT = 2,
  MISSING_PARAMETER = 3,
  KEYSIZE_MISMATCH = 4,
  INVALID_TEST = 5,
  KEYGEN_ERROR = 6,
  DcryptError_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  DcryptError_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool DcryptError_IsValid(int value);
constexpr DcryptError DcryptError_MIN = DE_RESERVED;
constexpr DcryptError DcryptError_MAX = KEYGEN_ERROR;
constexpr int DcryptError_ARRAYSIZE = DcryptError_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DcryptError_descriptor();
template<typename T>
inline const std::string& DcryptError_Name(T enum_t_value) {
  static_assert(::std::is_same<T, DcryptError>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function DcryptError_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    DcryptError_descriptor(), enum_t_value);
}
inline bool DcryptError_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, DcryptError* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<DcryptError>(
    DcryptError_descriptor(), name, value);
}
enum OneofTestParametersCase : int {
  TPC_RESERVED = 0,
  kTrngTest = 1,
  kAesCbcEncryptTest = 2,
  kAesGcmEncryptTest = 3,
  kAesCmacTest = 4,
  kFullStressTest = 5,
  kAesCavpCbcTest = 6,
  kAesCavpEcbTest = 7,
  kAesCavpCtrTest = 8,
  kAesCavpMctCbcTest = 9,
  kAesCavpMctEcbTest = 10,
  kAesCavpMctCtrTest = 11,
  kCavpAesGcmTest = 12,
  kCavpHmacTest = 13,
  kCavpShaMsgTest = 14,
  kCavpShaMctTest = 15,
  kCavpRsaKeyGenTest = 16,
  kCavpRsaSigGenTest = 17,
  kCavpRsaSigVerTest = 18,
  kCavpDrbgTest = 19,
  kCavpCkdfTest = 20,
  kCavpEcdsaKeyPairTest = 21,
  kCavpEcdsaPkvTest = 22,
  kCavpEcdsaSigGenTest = 23,
  kCavpEcdsaSigVerTest = 24,
  kCavpCmacGenTest = 25,
  OneofTestParametersCase_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  OneofTestParametersCase_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool OneofTestParametersCase_IsValid(int value);
constexpr OneofTestParametersCase OneofTestParametersCase_MIN = TPC_RESERVED;
constexpr OneofTestParametersCase OneofTestParametersCase_MAX = kCavpCmacGenTest;
constexpr int OneofTestParametersCase_ARRAYSIZE = OneofTestParametersCase_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* OneofTestParametersCase_descriptor();
template<typename T>
inline const std::string& OneofTestParametersCase_Name(T enum_t_value) {
  static_assert(::std::is_same<T, OneofTestParametersCase>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function OneofTestParametersCase_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    OneofTestParametersCase_descriptor(), enum_t_value);
}
inline bool OneofTestParametersCase_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, OneofTestParametersCase* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<OneofTestParametersCase>(
    OneofTestParametersCase_descriptor(), name, value);
}
enum OneofTestResultsCase : int {
  ONEOF_NAME_NOT_SET = 0,
  kTrngTestResult = 1,
  kAesCbcEncryptTestResult = 2,
  kAesGcmEncryptTestResult = 3,
  kAesCmacTestResult = 4,
  kFullStressResult = 5,
  kAesCavpTestResult = 6,
  kCavpAesGcmTestResult = 7,
  kCavpHmacTestResult = 8,
  kCavpShaTestResult = 9,
  kCavpRsaKeyGenTestResult = 10,
  kCavpRsaSigGenTestResult = 11,
  kCavpRsaSigVerTestResult = 12,
  kCavpDrbgTestResult = 13,
  kCavpCkdfTestResult = 14,
  kCavpEcdsaKeyPairTestResult = 15,
  kCavpEcdsaPkvTestResult = 16,
  kCavpEcdsaSigGenTestResult = 17,
  kCavpEcdsaSigVerTestResult = 18,
  kCavpCmacGenTestResult = 19,
  OneofTestResultsCase_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  OneofTestResultsCase_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool OneofTestResultsCase_IsValid(int value);
constexpr OneofTestResultsCase OneofTestResultsCase_MIN = ONEOF_NAME_NOT_SET;
constexpr OneofTestResultsCase OneofTestResultsCase_MAX = kCavpCmacGenTestResult;
constexpr int OneofTestResultsCase_ARRAYSIZE = OneofTestResultsCase_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* OneofTestResultsCase_descriptor();
template<typename T>
inline const std::string& OneofTestResultsCase_Name(T enum_t_value) {
  static_assert(::std::is_same<T, OneofTestResultsCase>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function OneofTestResultsCase_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    OneofTestResultsCase_descriptor(), enum_t_value);
}
inline bool OneofTestResultsCase_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, OneofTestResultsCase* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<OneofTestResultsCase>(
    OneofTestResultsCase_descriptor(), name, value);
}
enum CavpEncryptMode : int {
  ENCRYPT = 0,
  DECRYPT = 1,
  CavpEncryptMode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  CavpEncryptMode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool CavpEncryptMode_IsValid(int value);
constexpr CavpEncryptMode CavpEncryptMode_MIN = ENCRYPT;
constexpr CavpEncryptMode CavpEncryptMode_MAX = DECRYPT;
constexpr int CavpEncryptMode_ARRAYSIZE = CavpEncryptMode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CavpEncryptMode_descriptor();
template<typename T>
inline const std::string& CavpEncryptMode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CavpEncryptMode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CavpEncryptMode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CavpEncryptMode_descriptor(), enum_t_value);
}
inline bool CavpEncryptMode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CavpEncryptMode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CavpEncryptMode>(
    CavpEncryptMode_descriptor(), name, value);
}
enum CavpShaAlgorithm : int {
  INVALID = 0,
  SHA1 = 1,
  SHA256 = 2,
  CavpShaAlgorithm_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  CavpShaAlgorithm_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool CavpShaAlgorithm_IsValid(int value);
constexpr CavpShaAlgorithm CavpShaAlgorithm_MIN = INVALID;
constexpr CavpShaAlgorithm CavpShaAlgorithm_MAX = SHA256;
constexpr int CavpShaAlgorithm_ARRAYSIZE = CavpShaAlgorithm_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CavpShaAlgorithm_descriptor();
template<typename T>
inline const std::string& CavpShaAlgorithm_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CavpShaAlgorithm>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CavpShaAlgorithm_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CavpShaAlgorithm_descriptor(), enum_t_value);
}
inline bool CavpShaAlgorithm_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CavpShaAlgorithm* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CavpShaAlgorithm>(
    CavpShaAlgorithm_descriptor(), name, value);
}
enum CavpRsaMRTable : int {
  C_2 = 0,
  C_3 = 1,
  CavpRsaMRTable_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  CavpRsaMRTable_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool CavpRsaMRTable_IsValid(int value);
constexpr CavpRsaMRTable CavpRsaMRTable_MIN = C_2;
constexpr CavpRsaMRTable CavpRsaMRTable_MAX = C_3;
constexpr int CavpRsaMRTable_ARRAYSIZE = CavpRsaMRTable_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CavpRsaMRTable_descriptor();
template<typename T>
inline const std::string& CavpRsaMRTable_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CavpRsaMRTable>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CavpRsaMRTable_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CavpRsaMRTable_descriptor(), enum_t_value);
}
inline bool CavpRsaMRTable_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CavpRsaMRTable* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CavpRsaMRTable>(
    CavpRsaMRTable_descriptor(), name, value);
}
enum CavpRsaPaddingType : int {
  INVALID_PADDING = 0,
  PKCS1 = 1,
  PSS = 2,
  OAEP = 3,
  CavpRsaPaddingType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  CavpRsaPaddingType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool CavpRsaPaddingType_IsValid(int value);
constexpr CavpRsaPaddingType CavpRsaPaddingType_MIN = INVALID_PADDING;
constexpr CavpRsaPaddingType CavpRsaPaddingType_MAX = OAEP;
constexpr int CavpRsaPaddingType_ARRAYSIZE = CavpRsaPaddingType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CavpRsaPaddingType_descriptor();
template<typename T>
inline const std::string& CavpRsaPaddingType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CavpRsaPaddingType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CavpRsaPaddingType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CavpRsaPaddingType_descriptor(), enum_t_value);
}
inline bool CavpRsaPaddingType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CavpRsaPaddingType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CavpRsaPaddingType>(
    CavpRsaPaddingType_descriptor(), name, value);
}
enum CavpRsaSigVerResult : int {
  Pass = 0,
  Fail_MessageChanged = 1,
  Fail_General = 2,
  Fail_SigChanged = 3,
  Fail_EMHashMovedLeft = 4,
  Fail_EMModPayload = 5,
  CavpRsaSigVerResult_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  CavpRsaSigVerResult_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool CavpRsaSigVerResult_IsValid(int value);
constexpr CavpRsaSigVerResult CavpRsaSigVerResult_MIN = Pass;
constexpr CavpRsaSigVerResult CavpRsaSigVerResult_MAX = Fail_EMModPayload;
constexpr int CavpRsaSigVerResult_ARRAYSIZE = CavpRsaSigVerResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CavpRsaSigVerResult_descriptor();
template<typename T>
inline const std::string& CavpRsaSigVerResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CavpRsaSigVerResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CavpRsaSigVerResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CavpRsaSigVerResult_descriptor(), enum_t_value);
}
inline bool CavpRsaSigVerResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CavpRsaSigVerResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CavpRsaSigVerResult>(
    CavpRsaSigVerResult_descriptor(), name, value);
}
enum CavpEcdsaKeyGenTable : int {
  B_4_1 = 0,
  B_4_2 = 1,
  CavpEcdsaKeyGenTable_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  CavpEcdsaKeyGenTable_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool CavpEcdsaKeyGenTable_IsValid(int value);
constexpr CavpEcdsaKeyGenTable CavpEcdsaKeyGenTable_MIN = B_4_1;
constexpr CavpEcdsaKeyGenTable CavpEcdsaKeyGenTable_MAX = B_4_2;
constexpr int CavpEcdsaKeyGenTable_ARRAYSIZE = CavpEcdsaKeyGenTable_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CavpEcdsaKeyGenTable_descriptor();
template<typename T>
inline const std::string& CavpEcdsaKeyGenTable_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CavpEcdsaKeyGenTable>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CavpEcdsaKeyGenTable_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CavpEcdsaKeyGenTable_descriptor(), enum_t_value);
}
inline bool CavpEcdsaKeyGenTable_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CavpEcdsaKeyGenTable* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CavpEcdsaKeyGenTable>(
    CavpEcdsaKeyGenTable_descriptor(), name, value);
}
// ===================================================================

class AesCbcEncryptTest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.AesCbcEncryptTest) */ {
 public:
  inline AesCbcEncryptTest() : AesCbcEncryptTest(nullptr) {}
  virtual ~AesCbcEncryptTest();
  explicit constexpr AesCbcEncryptTest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AesCbcEncryptTest(const AesCbcEncryptTest& from);
  AesCbcEncryptTest(AesCbcEncryptTest&& from) noexcept
    : AesCbcEncryptTest() {
    *this = ::std::move(from);
  }

  inline AesCbcEncryptTest& operator=(const AesCbcEncryptTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AesCbcEncryptTest& operator=(AesCbcEncryptTest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AesCbcEncryptTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AesCbcEncryptTest* internal_default_instance() {
    return reinterpret_cast<const AesCbcEncryptTest*>(
               &_AesCbcEncryptTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AesCbcEncryptTest& a, AesCbcEncryptTest& b) {
    a.Swap(&b);
  }
  inline void Swap(AesCbcEncryptTest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AesCbcEncryptTest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AesCbcEncryptTest* New() const final {
    return CreateMaybeMessage<AesCbcEncryptTest>(nullptr);
  }

  AesCbcEncryptTest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AesCbcEncryptTest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AesCbcEncryptTest& from);
  void MergeFrom(const AesCbcEncryptTest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AesCbcEncryptTest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.AesCbcEncryptTest";
  }
  protected:
  explicit AesCbcEncryptTest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 3,
    kInitializationVectorFieldNumber = 4,
    kPlainTextFieldNumber = 5,
    kKeySizeFieldNumber = 1,
    kNumberOfBlocksFieldNumber = 2,
  };
  // bytes key = 3;
  void clear_key();
  const std::string& key() const;
  void set_key(const std::string& value);
  void set_key(std::string&& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  std::string* mutable_key();
  std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // bytes initialization_vector = 4;
  void clear_initialization_vector();
  const std::string& initialization_vector() const;
  void set_initialization_vector(const std::string& value);
  void set_initialization_vector(std::string&& value);
  void set_initialization_vector(const char* value);
  void set_initialization_vector(const void* value, size_t size);
  std::string* mutable_initialization_vector();
  std::string* release_initialization_vector();
  void set_allocated_initialization_vector(std::string* initialization_vector);
  private:
  const std::string& _internal_initialization_vector() const;
  void _internal_set_initialization_vector(const std::string& value);
  std::string* _internal_mutable_initialization_vector();
  public:

  // bytes plain_text = 5;
  void clear_plain_text();
  const std::string& plain_text() const;
  void set_plain_text(const std::string& value);
  void set_plain_text(std::string&& value);
  void set_plain_text(const char* value);
  void set_plain_text(const void* value, size_t size);
  std::string* mutable_plain_text();
  std::string* release_plain_text();
  void set_allocated_plain_text(std::string* plain_text);
  private:
  const std::string& _internal_plain_text() const;
  void _internal_set_plain_text(const std::string& value);
  std::string* _internal_mutable_plain_text();
  public:

  // .nugget.app.protoapi.KeySize key_size = 1;
  void clear_key_size();
  ::nugget::app::protoapi::KeySize key_size() const;
  void set_key_size(::nugget::app::protoapi::KeySize value);
  private:
  ::nugget::app::protoapi::KeySize _internal_key_size() const;
  void _internal_set_key_size(::nugget::app::protoapi::KeySize value);
  public:

  // uint32 number_of_blocks = 2;
  void clear_number_of_blocks();
  ::PROTOBUF_NAMESPACE_ID::uint32 number_of_blocks() const;
  void set_number_of_blocks(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_number_of_blocks() const;
  void _internal_set_number_of_blocks(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.AesCbcEncryptTest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr initialization_vector_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr plain_text_;
  int key_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 number_of_blocks_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class AesCbcEncryptTestResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.AesCbcEncryptTestResult) */ {
 public:
  inline AesCbcEncryptTestResult() : AesCbcEncryptTestResult(nullptr) {}
  virtual ~AesCbcEncryptTestResult();
  explicit constexpr AesCbcEncryptTestResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AesCbcEncryptTestResult(const AesCbcEncryptTestResult& from);
  AesCbcEncryptTestResult(AesCbcEncryptTestResult&& from) noexcept
    : AesCbcEncryptTestResult() {
    *this = ::std::move(from);
  }

  inline AesCbcEncryptTestResult& operator=(const AesCbcEncryptTestResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline AesCbcEncryptTestResult& operator=(AesCbcEncryptTestResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AesCbcEncryptTestResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const AesCbcEncryptTestResult* internal_default_instance() {
    return reinterpret_cast<const AesCbcEncryptTestResult*>(
               &_AesCbcEncryptTestResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AesCbcEncryptTestResult& a, AesCbcEncryptTestResult& b) {
    a.Swap(&b);
  }
  inline void Swap(AesCbcEncryptTestResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AesCbcEncryptTestResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AesCbcEncryptTestResult* New() const final {
    return CreateMaybeMessage<AesCbcEncryptTestResult>(nullptr);
  }

  AesCbcEncryptTestResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AesCbcEncryptTestResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AesCbcEncryptTestResult& from);
  void MergeFrom(const AesCbcEncryptTestResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AesCbcEncryptTestResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.AesCbcEncryptTestResult";
  }
  protected:
  explicit AesCbcEncryptTestResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInitializationVectorFieldNumber = 2,
    kCipherTextFieldNumber = 3,
    kResultCodeFieldNumber = 1,
  };
  // bytes initialization_vector = 2;
  void clear_initialization_vector();
  const std::string& initialization_vector() const;
  void set_initialization_vector(const std::string& value);
  void set_initialization_vector(std::string&& value);
  void set_initialization_vector(const char* value);
  void set_initialization_vector(const void* value, size_t size);
  std::string* mutable_initialization_vector();
  std::string* release_initialization_vector();
  void set_allocated_initialization_vector(std::string* initialization_vector);
  private:
  const std::string& _internal_initialization_vector() const;
  void _internal_set_initialization_vector(const std::string& value);
  std::string* _internal_mutable_initialization_vector();
  public:

  // bytes cipher_text = 3;
  void clear_cipher_text();
  const std::string& cipher_text() const;
  void set_cipher_text(const std::string& value);
  void set_cipher_text(std::string&& value);
  void set_cipher_text(const char* value);
  void set_cipher_text(const void* value, size_t size);
  std::string* mutable_cipher_text();
  std::string* release_cipher_text();
  void set_allocated_cipher_text(std::string* cipher_text);
  private:
  const std::string& _internal_cipher_text() const;
  void _internal_set_cipher_text(const std::string& value);
  std::string* _internal_mutable_cipher_text();
  public:

  // .nugget.app.protoapi.DcryptError result_code = 1;
  void clear_result_code();
  ::nugget::app::protoapi::DcryptError result_code() const;
  void set_result_code(::nugget::app::protoapi::DcryptError value);
  private:
  ::nugget::app::protoapi::DcryptError _internal_result_code() const;
  void _internal_set_result_code(::nugget::app::protoapi::DcryptError value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.AesCbcEncryptTestResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr initialization_vector_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cipher_text_;
  int result_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class AesGcmEncryptTest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.AesGcmEncryptTest) */ {
 public:
  inline AesGcmEncryptTest() : AesGcmEncryptTest(nullptr) {}
  virtual ~AesGcmEncryptTest();
  explicit constexpr AesGcmEncryptTest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AesGcmEncryptTest(const AesGcmEncryptTest& from);
  AesGcmEncryptTest(AesGcmEncryptTest&& from) noexcept
    : AesGcmEncryptTest() {
    *this = ::std::move(from);
  }

  inline AesGcmEncryptTest& operator=(const AesGcmEncryptTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AesGcmEncryptTest& operator=(AesGcmEncryptTest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AesGcmEncryptTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AesGcmEncryptTest* internal_default_instance() {
    return reinterpret_cast<const AesGcmEncryptTest*>(
               &_AesGcmEncryptTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AesGcmEncryptTest& a, AesGcmEncryptTest& b) {
    a.Swap(&b);
  }
  inline void Swap(AesGcmEncryptTest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AesGcmEncryptTest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AesGcmEncryptTest* New() const final {
    return CreateMaybeMessage<AesGcmEncryptTest>(nullptr);
  }

  AesGcmEncryptTest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AesGcmEncryptTest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AesGcmEncryptTest& from);
  void MergeFrom(const AesGcmEncryptTest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AesGcmEncryptTest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.AesGcmEncryptTest";
  }
  protected:
  explicit AesGcmEncryptTest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kIvFieldNumber = 2,
    kPlainTextFieldNumber = 3,
    kAadFieldNumber = 4,
    kTagLenFieldNumber = 5,
  };
  // bytes key = 1;
  void clear_key();
  const std::string& key() const;
  void set_key(const std::string& value);
  void set_key(std::string&& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  std::string* mutable_key();
  std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // bytes iv = 2;
  void clear_iv();
  const std::string& iv() const;
  void set_iv(const std::string& value);
  void set_iv(std::string&& value);
  void set_iv(const char* value);
  void set_iv(const void* value, size_t size);
  std::string* mutable_iv();
  std::string* release_iv();
  void set_allocated_iv(std::string* iv);
  private:
  const std::string& _internal_iv() const;
  void _internal_set_iv(const std::string& value);
  std::string* _internal_mutable_iv();
  public:

  // bytes plain_text = 3;
  void clear_plain_text();
  const std::string& plain_text() const;
  void set_plain_text(const std::string& value);
  void set_plain_text(std::string&& value);
  void set_plain_text(const char* value);
  void set_plain_text(const void* value, size_t size);
  std::string* mutable_plain_text();
  std::string* release_plain_text();
  void set_allocated_plain_text(std::string* plain_text);
  private:
  const std::string& _internal_plain_text() const;
  void _internal_set_plain_text(const std::string& value);
  std::string* _internal_mutable_plain_text();
  public:

  // bytes aad = 4;
  void clear_aad();
  const std::string& aad() const;
  void set_aad(const std::string& value);
  void set_aad(std::string&& value);
  void set_aad(const char* value);
  void set_aad(const void* value, size_t size);
  std::string* mutable_aad();
  std::string* release_aad();
  void set_allocated_aad(std::string* aad);
  private:
  const std::string& _internal_aad() const;
  void _internal_set_aad(const std::string& value);
  std::string* _internal_mutable_aad();
  public:

  // uint32 tag_len = 5;
  void clear_tag_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 tag_len() const;
  void set_tag_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tag_len() const;
  void _internal_set_tag_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.AesGcmEncryptTest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr iv_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr plain_text_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr aad_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tag_len_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class AesGcmEncryptTestResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.AesGcmEncryptTestResult) */ {
 public:
  inline AesGcmEncryptTestResult() : AesGcmEncryptTestResult(nullptr) {}
  virtual ~AesGcmEncryptTestResult();
  explicit constexpr AesGcmEncryptTestResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AesGcmEncryptTestResult(const AesGcmEncryptTestResult& from);
  AesGcmEncryptTestResult(AesGcmEncryptTestResult&& from) noexcept
    : AesGcmEncryptTestResult() {
    *this = ::std::move(from);
  }

  inline AesGcmEncryptTestResult& operator=(const AesGcmEncryptTestResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline AesGcmEncryptTestResult& operator=(AesGcmEncryptTestResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AesGcmEncryptTestResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const AesGcmEncryptTestResult* internal_default_instance() {
    return reinterpret_cast<const AesGcmEncryptTestResult*>(
               &_AesGcmEncryptTestResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AesGcmEncryptTestResult& a, AesGcmEncryptTestResult& b) {
    a.Swap(&b);
  }
  inline void Swap(AesGcmEncryptTestResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AesGcmEncryptTestResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AesGcmEncryptTestResult* New() const final {
    return CreateMaybeMessage<AesGcmEncryptTestResult>(nullptr);
  }

  AesGcmEncryptTestResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AesGcmEncryptTestResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AesGcmEncryptTestResult& from);
  void MergeFrom(const AesGcmEncryptTestResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AesGcmEncryptTestResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.AesGcmEncryptTestResult";
  }
  protected:
  explicit AesGcmEncryptTestResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCipherTextFieldNumber = 2,
    kTagFieldNumber = 3,
    kResultCodeFieldNumber = 1,
  };
  // bytes cipher_text = 2;
  void clear_cipher_text();
  const std::string& cipher_text() const;
  void set_cipher_text(const std::string& value);
  void set_cipher_text(std::string&& value);
  void set_cipher_text(const char* value);
  void set_cipher_text(const void* value, size_t size);
  std::string* mutable_cipher_text();
  std::string* release_cipher_text();
  void set_allocated_cipher_text(std::string* cipher_text);
  private:
  const std::string& _internal_cipher_text() const;
  void _internal_set_cipher_text(const std::string& value);
  std::string* _internal_mutable_cipher_text();
  public:

  // bytes tag = 3;
  void clear_tag();
  const std::string& tag() const;
  void set_tag(const std::string& value);
  void set_tag(std::string&& value);
  void set_tag(const char* value);
  void set_tag(const void* value, size_t size);
  std::string* mutable_tag();
  std::string* release_tag();
  void set_allocated_tag(std::string* tag);
  private:
  const std::string& _internal_tag() const;
  void _internal_set_tag(const std::string& value);
  std::string* _internal_mutable_tag();
  public:

  // .nugget.app.protoapi.DcryptError result_code = 1;
  void clear_result_code();
  ::nugget::app::protoapi::DcryptError result_code() const;
  void set_result_code(::nugget::app::protoapi::DcryptError value);
  private:
  ::nugget::app::protoapi::DcryptError _internal_result_code() const;
  void _internal_set_result_code(::nugget::app::protoapi::DcryptError value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.AesGcmEncryptTestResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cipher_text_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_;
  int result_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class AesCavpTest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.AesCavpTest) */ {
 public:
  inline AesCavpTest() : AesCavpTest(nullptr) {}
  virtual ~AesCavpTest();
  explicit constexpr AesCavpTest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AesCavpTest(const AesCavpTest& from);
  AesCavpTest(AesCavpTest&& from) noexcept
    : AesCavpTest() {
    *this = ::std::move(from);
  }

  inline AesCavpTest& operator=(const AesCavpTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AesCavpTest& operator=(AesCavpTest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AesCavpTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AesCavpTest* internal_default_instance() {
    return reinterpret_cast<const AesCavpTest*>(
               &_AesCavpTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(AesCavpTest& a, AesCavpTest& b) {
    a.Swap(&b);
  }
  inline void Swap(AesCavpTest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AesCavpTest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AesCavpTest* New() const final {
    return CreateMaybeMessage<AesCavpTest>(nullptr);
  }

  AesCavpTest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AesCavpTest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AesCavpTest& from);
  void MergeFrom(const AesCavpTest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AesCavpTest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.AesCavpTest";
  }
  protected:
  explicit AesCavpTest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 5,
    kIvFieldNumber = 6,
    kTextFieldNumber = 7,
    kCountFieldNumber = 1,
    kKeySizeFieldNumber = 3,
    kEncryptModeFieldNumber = 4,
  };
  // bytes key = 5;
  void clear_key();
  const std::string& key() const;
  void set_key(const std::string& value);
  void set_key(std::string&& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  std::string* mutable_key();
  std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // bytes iv = 6;
  void clear_iv();
  const std::string& iv() const;
  void set_iv(const std::string& value);
  void set_iv(std::string&& value);
  void set_iv(const char* value);
  void set_iv(const void* value, size_t size);
  std::string* mutable_iv();
  std::string* release_iv();
  void set_allocated_iv(std::string* iv);
  private:
  const std::string& _internal_iv() const;
  void _internal_set_iv(const std::string& value);
  std::string* _internal_mutable_iv();
  public:

  // bytes text = 7;
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // uint32 count = 1;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 key_size = 3;
  void clear_key_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 key_size() const;
  void set_key_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_key_size() const;
  void _internal_set_key_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .nugget.app.protoapi.CavpEncryptMode encrypt_mode = 4;
  void clear_encrypt_mode();
  ::nugget::app::protoapi::CavpEncryptMode encrypt_mode() const;
  void set_encrypt_mode(::nugget::app::protoapi::CavpEncryptMode value);
  private:
  ::nugget::app::protoapi::CavpEncryptMode _internal_encrypt_mode() const;
  void _internal_set_encrypt_mode(::nugget::app::protoapi::CavpEncryptMode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.AesCavpTest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr iv_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 key_size_;
  int encrypt_mode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class AesCavpTestResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.AesCavpTestResult) */ {
 public:
  inline AesCavpTestResult() : AesCavpTestResult(nullptr) {}
  virtual ~AesCavpTestResult();
  explicit constexpr AesCavpTestResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AesCavpTestResult(const AesCavpTestResult& from);
  AesCavpTestResult(AesCavpTestResult&& from) noexcept
    : AesCavpTestResult() {
    *this = ::std::move(from);
  }

  inline AesCavpTestResult& operator=(const AesCavpTestResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline AesCavpTestResult& operator=(AesCavpTestResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AesCavpTestResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const AesCavpTestResult* internal_default_instance() {
    return reinterpret_cast<const AesCavpTestResult*>(
               &_AesCavpTestResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(AesCavpTestResult& a, AesCavpTestResult& b) {
    a.Swap(&b);
  }
  inline void Swap(AesCavpTestResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AesCavpTestResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AesCavpTestResult* New() const final {
    return CreateMaybeMessage<AesCavpTestResult>(nullptr);
  }

  AesCavpTestResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AesCavpTestResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AesCavpTestResult& from);
  void MergeFrom(const AesCavpTestResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AesCavpTestResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.AesCavpTestResult";
  }
  protected:
  explicit AesCavpTestResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 2,
    kResultCodeFieldNumber = 1,
  };
  // bytes text = 2;
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // .nugget.app.protoapi.DcryptError result_code = 1;
  void clear_result_code();
  ::nugget::app::protoapi::DcryptError result_code() const;
  void set_result_code(::nugget::app::protoapi::DcryptError value);
  private:
  ::nugget::app::protoapi::DcryptError _internal_result_code() const;
  void _internal_set_result_code(::nugget::app::protoapi::DcryptError value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.AesCavpTestResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  int result_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpAesGcmTest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpAesGcmTest) */ {
 public:
  inline CavpAesGcmTest() : CavpAesGcmTest(nullptr) {}
  virtual ~CavpAesGcmTest();
  explicit constexpr CavpAesGcmTest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpAesGcmTest(const CavpAesGcmTest& from);
  CavpAesGcmTest(CavpAesGcmTest&& from) noexcept
    : CavpAesGcmTest() {
    *this = ::std::move(from);
  }

  inline CavpAesGcmTest& operator=(const CavpAesGcmTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpAesGcmTest& operator=(CavpAesGcmTest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpAesGcmTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpAesGcmTest* internal_default_instance() {
    return reinterpret_cast<const CavpAesGcmTest*>(
               &_CavpAesGcmTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CavpAesGcmTest& a, CavpAesGcmTest& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpAesGcmTest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpAesGcmTest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpAesGcmTest* New() const final {
    return CreateMaybeMessage<CavpAesGcmTest>(nullptr);
  }

  CavpAesGcmTest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpAesGcmTest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpAesGcmTest& from);
  void MergeFrom(const CavpAesGcmTest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpAesGcmTest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpAesGcmTest";
  }
  protected:
  explicit CavpAesGcmTest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 5,
    kIvFieldNumber = 6,
    kTextFieldNumber = 7,
    kAadFieldNumber = 8,
    kTagFieldNumber = 9,
    kCountFieldNumber = 1,
    kKeyLenFieldNumber = 2,
    kTagLenFieldNumber = 3,
    kEncryptModeFieldNumber = 4,
  };
  // bytes key = 5;
  void clear_key();
  const std::string& key() const;
  void set_key(const std::string& value);
  void set_key(std::string&& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  std::string* mutable_key();
  std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // bytes iv = 6;
  void clear_iv();
  const std::string& iv() const;
  void set_iv(const std::string& value);
  void set_iv(std::string&& value);
  void set_iv(const char* value);
  void set_iv(const void* value, size_t size);
  std::string* mutable_iv();
  std::string* release_iv();
  void set_allocated_iv(std::string* iv);
  private:
  const std::string& _internal_iv() const;
  void _internal_set_iv(const std::string& value);
  std::string* _internal_mutable_iv();
  public:

  // bytes text = 7;
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // bytes aad = 8;
  void clear_aad();
  const std::string& aad() const;
  void set_aad(const std::string& value);
  void set_aad(std::string&& value);
  void set_aad(const char* value);
  void set_aad(const void* value, size_t size);
  std::string* mutable_aad();
  std::string* release_aad();
  void set_allocated_aad(std::string* aad);
  private:
  const std::string& _internal_aad() const;
  void _internal_set_aad(const std::string& value);
  std::string* _internal_mutable_aad();
  public:

  // bytes tag = 9;
  void clear_tag();
  const std::string& tag() const;
  void set_tag(const std::string& value);
  void set_tag(std::string&& value);
  void set_tag(const char* value);
  void set_tag(const void* value, size_t size);
  std::string* mutable_tag();
  std::string* release_tag();
  void set_allocated_tag(std::string* tag);
  private:
  const std::string& _internal_tag() const;
  void _internal_set_tag(const std::string& value);
  std::string* _internal_mutable_tag();
  public:

  // uint32 count = 1;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 key_len = 2;
  void clear_key_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 key_len() const;
  void set_key_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_key_len() const;
  void _internal_set_key_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 tag_len = 3;
  void clear_tag_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 tag_len() const;
  void set_tag_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tag_len() const;
  void _internal_set_tag_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .nugget.app.protoapi.CavpEncryptMode encrypt_mode = 4;
  void clear_encrypt_mode();
  ::nugget::app::protoapi::CavpEncryptMode encrypt_mode() const;
  void set_encrypt_mode(::nugget::app::protoapi::CavpEncryptMode value);
  private:
  ::nugget::app::protoapi::CavpEncryptMode _internal_encrypt_mode() const;
  void _internal_set_encrypt_mode(::nugget::app::protoapi::CavpEncryptMode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpAesGcmTest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr iv_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr aad_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 key_len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tag_len_;
  int encrypt_mode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpAesGcmTestResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpAesGcmTestResult) */ {
 public:
  inline CavpAesGcmTestResult() : CavpAesGcmTestResult(nullptr) {}
  virtual ~CavpAesGcmTestResult();
  explicit constexpr CavpAesGcmTestResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpAesGcmTestResult(const CavpAesGcmTestResult& from);
  CavpAesGcmTestResult(CavpAesGcmTestResult&& from) noexcept
    : CavpAesGcmTestResult() {
    *this = ::std::move(from);
  }

  inline CavpAesGcmTestResult& operator=(const CavpAesGcmTestResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpAesGcmTestResult& operator=(CavpAesGcmTestResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpAesGcmTestResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpAesGcmTestResult* internal_default_instance() {
    return reinterpret_cast<const CavpAesGcmTestResult*>(
               &_CavpAesGcmTestResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CavpAesGcmTestResult& a, CavpAesGcmTestResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpAesGcmTestResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpAesGcmTestResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpAesGcmTestResult* New() const final {
    return CreateMaybeMessage<CavpAesGcmTestResult>(nullptr);
  }

  CavpAesGcmTestResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpAesGcmTestResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpAesGcmTestResult& from);
  void MergeFrom(const CavpAesGcmTestResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpAesGcmTestResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpAesGcmTestResult";
  }
  protected:
  explicit CavpAesGcmTestResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 2,
    kTagFieldNumber = 3,
    kResultCodeFieldNumber = 1,
    kSuccessFieldNumber = 4,
  };
  // bytes text = 2;
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // bytes tag = 3;
  void clear_tag();
  const std::string& tag() const;
  void set_tag(const std::string& value);
  void set_tag(std::string&& value);
  void set_tag(const char* value);
  void set_tag(const void* value, size_t size);
  std::string* mutable_tag();
  std::string* release_tag();
  void set_allocated_tag(std::string* tag);
  private:
  const std::string& _internal_tag() const;
  void _internal_set_tag(const std::string& value);
  std::string* _internal_mutable_tag();
  public:

  // .nugget.app.protoapi.DcryptError result_code = 1;
  void clear_result_code();
  ::nugget::app::protoapi::DcryptError result_code() const;
  void set_result_code(::nugget::app::protoapi::DcryptError value);
  private:
  ::nugget::app::protoapi::DcryptError _internal_result_code() const;
  void _internal_set_result_code(::nugget::app::protoapi::DcryptError value);
  public:

  // uint32 success = 4;
  void clear_success();
  ::PROTOBUF_NAMESPACE_ID::uint32 success() const;
  void set_success(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_success() const;
  void _internal_set_success(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpAesGcmTestResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_;
  int result_code_;
  ::PROTOBUF_NAMESPACE_ID::uint32 success_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpHmacTest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpHmacTest) */ {
 public:
  inline CavpHmacTest() : CavpHmacTest(nullptr) {}
  virtual ~CavpHmacTest();
  explicit constexpr CavpHmacTest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpHmacTest(const CavpHmacTest& from);
  CavpHmacTest(CavpHmacTest&& from) noexcept
    : CavpHmacTest() {
    *this = ::std::move(from);
  }

  inline CavpHmacTest& operator=(const CavpHmacTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpHmacTest& operator=(CavpHmacTest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpHmacTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpHmacTest* internal_default_instance() {
    return reinterpret_cast<const CavpHmacTest*>(
               &_CavpHmacTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CavpHmacTest& a, CavpHmacTest& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpHmacTest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpHmacTest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpHmacTest* New() const final {
    return CreateMaybeMessage<CavpHmacTest>(nullptr);
  }

  CavpHmacTest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpHmacTest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpHmacTest& from);
  void MergeFrom(const CavpHmacTest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpHmacTest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpHmacTest";
  }
  protected:
  explicit CavpHmacTest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 4,
    kMsgFieldNumber = 5,
    kKeyLenFieldNumber = 1,
    kTextLenFieldNumber = 2,
    kAlgoFieldNumber = 3,
  };
  // bytes key = 4;
  void clear_key();
  const std::string& key() const;
  void set_key(const std::string& value);
  void set_key(std::string&& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  std::string* mutable_key();
  std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // bytes msg = 5;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const void* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // uint32 key_len = 1;
  void clear_key_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 key_len() const;
  void set_key_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_key_len() const;
  void _internal_set_key_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 text_len = 2;
  void clear_text_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 text_len() const;
  void set_text_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_text_len() const;
  void _internal_set_text_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .nugget.app.protoapi.CavpShaAlgorithm algo = 3;
  void clear_algo();
  ::nugget::app::protoapi::CavpShaAlgorithm algo() const;
  void set_algo(::nugget::app::protoapi::CavpShaAlgorithm value);
  private:
  ::nugget::app::protoapi::CavpShaAlgorithm _internal_algo() const;
  void _internal_set_algo(::nugget::app::protoapi::CavpShaAlgorithm value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpHmacTest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  ::PROTOBUF_NAMESPACE_ID::uint32 key_len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 text_len_;
  int algo_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpHmacTestResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpHmacTestResult) */ {
 public:
  inline CavpHmacTestResult() : CavpHmacTestResult(nullptr) {}
  virtual ~CavpHmacTestResult();
  explicit constexpr CavpHmacTestResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpHmacTestResult(const CavpHmacTestResult& from);
  CavpHmacTestResult(CavpHmacTestResult&& from) noexcept
    : CavpHmacTestResult() {
    *this = ::std::move(from);
  }

  inline CavpHmacTestResult& operator=(const CavpHmacTestResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpHmacTestResult& operator=(CavpHmacTestResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpHmacTestResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpHmacTestResult* internal_default_instance() {
    return reinterpret_cast<const CavpHmacTestResult*>(
               &_CavpHmacTestResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CavpHmacTestResult& a, CavpHmacTestResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpHmacTestResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpHmacTestResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpHmacTestResult* New() const final {
    return CreateMaybeMessage<CavpHmacTestResult>(nullptr);
  }

  CavpHmacTestResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpHmacTestResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpHmacTestResult& from);
  void MergeFrom(const CavpHmacTestResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpHmacTestResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpHmacTestResult";
  }
  protected:
  explicit CavpHmacTestResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMacFieldNumber = 2,
    kResultCodeFieldNumber = 1,
  };
  // bytes mac = 2;
  void clear_mac();
  const std::string& mac() const;
  void set_mac(const std::string& value);
  void set_mac(std::string&& value);
  void set_mac(const char* value);
  void set_mac(const void* value, size_t size);
  std::string* mutable_mac();
  std::string* release_mac();
  void set_allocated_mac(std::string* mac);
  private:
  const std::string& _internal_mac() const;
  void _internal_set_mac(const std::string& value);
  std::string* _internal_mutable_mac();
  public:

  // .nugget.app.protoapi.DcryptError result_code = 1;
  void clear_result_code();
  ::nugget::app::protoapi::DcryptError result_code() const;
  void set_result_code(::nugget::app::protoapi::DcryptError value);
  private:
  ::nugget::app::protoapi::DcryptError _internal_result_code() const;
  void _internal_set_result_code(::nugget::app::protoapi::DcryptError value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpHmacTestResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mac_;
  int result_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpShaMsgTest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpShaMsgTest) */ {
 public:
  inline CavpShaMsgTest() : CavpShaMsgTest(nullptr) {}
  virtual ~CavpShaMsgTest();
  explicit constexpr CavpShaMsgTest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpShaMsgTest(const CavpShaMsgTest& from);
  CavpShaMsgTest(CavpShaMsgTest&& from) noexcept
    : CavpShaMsgTest() {
    *this = ::std::move(from);
  }

  inline CavpShaMsgTest& operator=(const CavpShaMsgTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpShaMsgTest& operator=(CavpShaMsgTest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpShaMsgTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpShaMsgTest* internal_default_instance() {
    return reinterpret_cast<const CavpShaMsgTest*>(
               &_CavpShaMsgTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CavpShaMsgTest& a, CavpShaMsgTest& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpShaMsgTest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpShaMsgTest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpShaMsgTest* New() const final {
    return CreateMaybeMessage<CavpShaMsgTest>(nullptr);
  }

  CavpShaMsgTest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpShaMsgTest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpShaMsgTest& from);
  void MergeFrom(const CavpShaMsgTest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpShaMsgTest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpShaMsgTest";
  }
  protected:
  explicit CavpShaMsgTest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 4,
    kAlgoFieldNumber = 1,
    kTotalLenFieldNumber = 2,
    kOffsetFieldNumber = 3,
  };
  // bytes msg = 4;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const void* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // .nugget.app.protoapi.CavpShaAlgorithm algo = 1;
  void clear_algo();
  ::nugget::app::protoapi::CavpShaAlgorithm algo() const;
  void set_algo(::nugget::app::protoapi::CavpShaAlgorithm value);
  private:
  ::nugget::app::protoapi::CavpShaAlgorithm _internal_algo() const;
  void _internal_set_algo(::nugget::app::protoapi::CavpShaAlgorithm value);
  public:

  // uint32 total_len = 2;
  void clear_total_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_len() const;
  void set_total_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_len() const;
  void _internal_set_total_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 offset = 3;
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_offset() const;
  void _internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpShaMsgTest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  int algo_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 offset_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpShaMctTest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpShaMctTest) */ {
 public:
  inline CavpShaMctTest() : CavpShaMctTest(nullptr) {}
  virtual ~CavpShaMctTest();
  explicit constexpr CavpShaMctTest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpShaMctTest(const CavpShaMctTest& from);
  CavpShaMctTest(CavpShaMctTest&& from) noexcept
    : CavpShaMctTest() {
    *this = ::std::move(from);
  }

  inline CavpShaMctTest& operator=(const CavpShaMctTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpShaMctTest& operator=(CavpShaMctTest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpShaMctTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpShaMctTest* internal_default_instance() {
    return reinterpret_cast<const CavpShaMctTest*>(
               &_CavpShaMctTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CavpShaMctTest& a, CavpShaMctTest& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpShaMctTest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpShaMctTest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpShaMctTest* New() const final {
    return CreateMaybeMessage<CavpShaMctTest>(nullptr);
  }

  CavpShaMctTest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpShaMctTest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpShaMctTest& from);
  void MergeFrom(const CavpShaMctTest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpShaMctTest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpShaMctTest";
  }
  protected:
  explicit CavpShaMctTest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeedFieldNumber = 2,
    kAlgoFieldNumber = 1,
  };
  // bytes seed = 2;
  void clear_seed();
  const std::string& seed() const;
  void set_seed(const std::string& value);
  void set_seed(std::string&& value);
  void set_seed(const char* value);
  void set_seed(const void* value, size_t size);
  std::string* mutable_seed();
  std::string* release_seed();
  void set_allocated_seed(std::string* seed);
  private:
  const std::string& _internal_seed() const;
  void _internal_set_seed(const std::string& value);
  std::string* _internal_mutable_seed();
  public:

  // .nugget.app.protoapi.CavpShaAlgorithm algo = 1;
  void clear_algo();
  ::nugget::app::protoapi::CavpShaAlgorithm algo() const;
  void set_algo(::nugget::app::protoapi::CavpShaAlgorithm value);
  private:
  ::nugget::app::protoapi::CavpShaAlgorithm _internal_algo() const;
  void _internal_set_algo(::nugget::app::protoapi::CavpShaAlgorithm value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpShaMctTest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr seed_;
  int algo_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpShaTestResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpShaTestResult) */ {
 public:
  inline CavpShaTestResult() : CavpShaTestResult(nullptr) {}
  virtual ~CavpShaTestResult();
  explicit constexpr CavpShaTestResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpShaTestResult(const CavpShaTestResult& from);
  CavpShaTestResult(CavpShaTestResult&& from) noexcept
    : CavpShaTestResult() {
    *this = ::std::move(from);
  }

  inline CavpShaTestResult& operator=(const CavpShaTestResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpShaTestResult& operator=(CavpShaTestResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpShaTestResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpShaTestResult* internal_default_instance() {
    return reinterpret_cast<const CavpShaTestResult*>(
               &_CavpShaTestResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CavpShaTestResult& a, CavpShaTestResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpShaTestResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpShaTestResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpShaTestResult* New() const final {
    return CreateMaybeMessage<CavpShaTestResult>(nullptr);
  }

  CavpShaTestResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpShaTestResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpShaTestResult& from);
  void MergeFrom(const CavpShaTestResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpShaTestResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpShaTestResult";
  }
  protected:
  explicit CavpShaTestResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMdFieldNumber = 2,
    kResultCodeFieldNumber = 1,
  };
  // bytes md = 2;
  void clear_md();
  const std::string& md() const;
  void set_md(const std::string& value);
  void set_md(std::string&& value);
  void set_md(const char* value);
  void set_md(const void* value, size_t size);
  std::string* mutable_md();
  std::string* release_md();
  void set_allocated_md(std::string* md);
  private:
  const std::string& _internal_md() const;
  void _internal_set_md(const std::string& value);
  std::string* _internal_mutable_md();
  public:

  // .nugget.app.protoapi.DcryptError result_code = 1;
  void clear_result_code();
  ::nugget::app::protoapi::DcryptError result_code() const;
  void set_result_code(::nugget::app::protoapi::DcryptError value);
  private:
  ::nugget::app::protoapi::DcryptError _internal_result_code() const;
  void _internal_set_result_code(::nugget::app::protoapi::DcryptError value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpShaTestResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr md_;
  int result_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpRsaKeyGenTest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpRsaKeyGenTest) */ {
 public:
  inline CavpRsaKeyGenTest() : CavpRsaKeyGenTest(nullptr) {}
  virtual ~CavpRsaKeyGenTest();
  explicit constexpr CavpRsaKeyGenTest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpRsaKeyGenTest(const CavpRsaKeyGenTest& from);
  CavpRsaKeyGenTest(CavpRsaKeyGenTest&& from) noexcept
    : CavpRsaKeyGenTest() {
    *this = ::std::move(from);
  }

  inline CavpRsaKeyGenTest& operator=(const CavpRsaKeyGenTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpRsaKeyGenTest& operator=(CavpRsaKeyGenTest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpRsaKeyGenTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpRsaKeyGenTest* internal_default_instance() {
    return reinterpret_cast<const CavpRsaKeyGenTest*>(
               &_CavpRsaKeyGenTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CavpRsaKeyGenTest& a, CavpRsaKeyGenTest& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpRsaKeyGenTest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpRsaKeyGenTest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpRsaKeyGenTest* New() const final {
    return CreateMaybeMessage<CavpRsaKeyGenTest>(nullptr);
  }

  CavpRsaKeyGenTest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpRsaKeyGenTest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpRsaKeyGenTest& from);
  void MergeFrom(const CavpRsaKeyGenTest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpRsaKeyGenTest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpRsaKeyGenTest";
  }
  protected:
  explicit CavpRsaKeyGenTest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCountFieldNumber = 1,
    kModFieldNumber = 2,
    kTableFieldNumber = 3,
  };
  // uint32 count = 1;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 mod = 2;
  void clear_mod();
  ::PROTOBUF_NAMESPACE_ID::uint32 mod() const;
  void set_mod(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mod() const;
  void _internal_set_mod(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .nugget.app.protoapi.CavpRsaMRTable table = 3;
  void clear_table();
  ::nugget::app::protoapi::CavpRsaMRTable table() const;
  void set_table(::nugget::app::protoapi::CavpRsaMRTable value);
  private:
  ::nugget::app::protoapi::CavpRsaMRTable _internal_table() const;
  void _internal_set_table(::nugget::app::protoapi::CavpRsaMRTable value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpRsaKeyGenTest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mod_;
  int table_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpRsaSigGenTest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpRsaSigGenTest) */ {
 public:
  inline CavpRsaSigGenTest() : CavpRsaSigGenTest(nullptr) {}
  virtual ~CavpRsaSigGenTest();
  explicit constexpr CavpRsaSigGenTest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpRsaSigGenTest(const CavpRsaSigGenTest& from);
  CavpRsaSigGenTest(CavpRsaSigGenTest&& from) noexcept
    : CavpRsaSigGenTest() {
    *this = ::std::move(from);
  }

  inline CavpRsaSigGenTest& operator=(const CavpRsaSigGenTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpRsaSigGenTest& operator=(CavpRsaSigGenTest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpRsaSigGenTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpRsaSigGenTest* internal_default_instance() {
    return reinterpret_cast<const CavpRsaSigGenTest*>(
               &_CavpRsaSigGenTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CavpRsaSigGenTest& a, CavpRsaSigGenTest& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpRsaSigGenTest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpRsaSigGenTest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpRsaSigGenTest* New() const final {
    return CreateMaybeMessage<CavpRsaSigGenTest>(nullptr);
  }

  CavpRsaSigGenTest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpRsaSigGenTest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpRsaSigGenTest& from);
  void MergeFrom(const CavpRsaSigGenTest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpRsaSigGenTest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpRsaSigGenTest";
  }
  protected:
  explicit CavpRsaSigGenTest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 4,
    kGenNFieldNumber = 1,
    kShaAlgFieldNumber = 2,
    kPaddingFieldNumber = 3,
  };
  // bytes msg = 4;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const void* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // bool gen_n = 1;
  void clear_gen_n();
  bool gen_n() const;
  void set_gen_n(bool value);
  private:
  bool _internal_gen_n() const;
  void _internal_set_gen_n(bool value);
  public:

  // .nugget.app.protoapi.CavpShaAlgorithm sha_alg = 2;
  void clear_sha_alg();
  ::nugget::app::protoapi::CavpShaAlgorithm sha_alg() const;
  void set_sha_alg(::nugget::app::protoapi::CavpShaAlgorithm value);
  private:
  ::nugget::app::protoapi::CavpShaAlgorithm _internal_sha_alg() const;
  void _internal_set_sha_alg(::nugget::app::protoapi::CavpShaAlgorithm value);
  public:

  // .nugget.app.protoapi.CavpRsaPaddingType padding = 3;
  void clear_padding();
  ::nugget::app::protoapi::CavpRsaPaddingType padding() const;
  void set_padding(::nugget::app::protoapi::CavpRsaPaddingType value);
  private:
  ::nugget::app::protoapi::CavpRsaPaddingType _internal_padding() const;
  void _internal_set_padding(::nugget::app::protoapi::CavpRsaPaddingType value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpRsaSigGenTest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  bool gen_n_;
  int sha_alg_;
  int padding_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpRsaSigVerTest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpRsaSigVerTest) */ {
 public:
  inline CavpRsaSigVerTest() : CavpRsaSigVerTest(nullptr) {}
  virtual ~CavpRsaSigVerTest();
  explicit constexpr CavpRsaSigVerTest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpRsaSigVerTest(const CavpRsaSigVerTest& from);
  CavpRsaSigVerTest(CavpRsaSigVerTest&& from) noexcept
    : CavpRsaSigVerTest() {
    *this = ::std::move(from);
  }

  inline CavpRsaSigVerTest& operator=(const CavpRsaSigVerTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpRsaSigVerTest& operator=(CavpRsaSigVerTest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpRsaSigVerTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpRsaSigVerTest* internal_default_instance() {
    return reinterpret_cast<const CavpRsaSigVerTest*>(
               &_CavpRsaSigVerTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CavpRsaSigVerTest& a, CavpRsaSigVerTest& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpRsaSigVerTest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpRsaSigVerTest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpRsaSigVerTest* New() const final {
    return CreateMaybeMessage<CavpRsaSigVerTest>(nullptr);
  }

  CavpRsaSigVerTest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpRsaSigVerTest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpRsaSigVerTest& from);
  void MergeFrom(const CavpRsaSigVerTest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpRsaSigVerTest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpRsaSigVerTest";
  }
  protected:
  explicit CavpRsaSigVerTest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNFieldNumber = 5,
    kMsgFieldNumber = 6,
    kSigFieldNumber = 7,
    kModFieldNumber = 1,
    kShaAlgFieldNumber = 2,
    kPaddingFieldNumber = 3,
    kEFieldNumber = 4,
  };
  // bytes n = 5;
  void clear_n();
  const std::string& n() const;
  void set_n(const std::string& value);
  void set_n(std::string&& value);
  void set_n(const char* value);
  void set_n(const void* value, size_t size);
  std::string* mutable_n();
  std::string* release_n();
  void set_allocated_n(std::string* n);
  private:
  const std::string& _internal_n() const;
  void _internal_set_n(const std::string& value);
  std::string* _internal_mutable_n();
  public:

  // bytes msg = 6;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const void* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // bytes sig = 7;
  void clear_sig();
  const std::string& sig() const;
  void set_sig(const std::string& value);
  void set_sig(std::string&& value);
  void set_sig(const char* value);
  void set_sig(const void* value, size_t size);
  std::string* mutable_sig();
  std::string* release_sig();
  void set_allocated_sig(std::string* sig);
  private:
  const std::string& _internal_sig() const;
  void _internal_set_sig(const std::string& value);
  std::string* _internal_mutable_sig();
  public:

  // uint32 mod = 1;
  void clear_mod();
  ::PROTOBUF_NAMESPACE_ID::uint32 mod() const;
  void set_mod(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mod() const;
  void _internal_set_mod(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .nugget.app.protoapi.CavpShaAlgorithm sha_alg = 2;
  void clear_sha_alg();
  ::nugget::app::protoapi::CavpShaAlgorithm sha_alg() const;
  void set_sha_alg(::nugget::app::protoapi::CavpShaAlgorithm value);
  private:
  ::nugget::app::protoapi::CavpShaAlgorithm _internal_sha_alg() const;
  void _internal_set_sha_alg(::nugget::app::protoapi::CavpShaAlgorithm value);
  public:

  // .nugget.app.protoapi.CavpRsaPaddingType padding = 3;
  void clear_padding();
  ::nugget::app::protoapi::CavpRsaPaddingType padding() const;
  void set_padding(::nugget::app::protoapi::CavpRsaPaddingType value);
  private:
  ::nugget::app::protoapi::CavpRsaPaddingType _internal_padding() const;
  void _internal_set_padding(::nugget::app::protoapi::CavpRsaPaddingType value);
  public:

  // uint32 e = 4;
  void clear_e();
  ::PROTOBUF_NAMESPACE_ID::uint32 e() const;
  void set_e(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_e() const;
  void _internal_set_e(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpRsaSigVerTest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr n_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sig_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mod_;
  int sha_alg_;
  int padding_;
  ::PROTOBUF_NAMESPACE_ID::uint32 e_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpRsaSigVerTestResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpRsaSigVerTestResult) */ {
 public:
  inline CavpRsaSigVerTestResult() : CavpRsaSigVerTestResult(nullptr) {}
  virtual ~CavpRsaSigVerTestResult();
  explicit constexpr CavpRsaSigVerTestResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpRsaSigVerTestResult(const CavpRsaSigVerTestResult& from);
  CavpRsaSigVerTestResult(CavpRsaSigVerTestResult&& from) noexcept
    : CavpRsaSigVerTestResult() {
    *this = ::std::move(from);
  }

  inline CavpRsaSigVerTestResult& operator=(const CavpRsaSigVerTestResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpRsaSigVerTestResult& operator=(CavpRsaSigVerTestResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpRsaSigVerTestResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpRsaSigVerTestResult* internal_default_instance() {
    return reinterpret_cast<const CavpRsaSigVerTestResult*>(
               &_CavpRsaSigVerTestResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CavpRsaSigVerTestResult& a, CavpRsaSigVerTestResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpRsaSigVerTestResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpRsaSigVerTestResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpRsaSigVerTestResult* New() const final {
    return CreateMaybeMessage<CavpRsaSigVerTestResult>(nullptr);
  }

  CavpRsaSigVerTestResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpRsaSigVerTestResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpRsaSigVerTestResult& from);
  void MergeFrom(const CavpRsaSigVerTestResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpRsaSigVerTestResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpRsaSigVerTestResult";
  }
  protected:
  explicit CavpRsaSigVerTestResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultCodeFieldNumber = 1,
    kVerifResultFieldNumber = 2,
  };
  // .nugget.app.protoapi.DcryptError result_code = 1;
  void clear_result_code();
  ::nugget::app::protoapi::DcryptError result_code() const;
  void set_result_code(::nugget::app::protoapi::DcryptError value);
  private:
  ::nugget::app::protoapi::DcryptError _internal_result_code() const;
  void _internal_set_result_code(::nugget::app::protoapi::DcryptError value);
  public:

  // .nugget.app.protoapi.CavpRsaSigVerResult verif_result = 2;
  void clear_verif_result();
  ::nugget::app::protoapi::CavpRsaSigVerResult verif_result() const;
  void set_verif_result(::nugget::app::protoapi::CavpRsaSigVerResult value);
  private:
  ::nugget::app::protoapi::CavpRsaSigVerResult _internal_verif_result() const;
  void _internal_set_verif_result(::nugget::app::protoapi::CavpRsaSigVerResult value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpRsaSigVerTestResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int result_code_;
  int verif_result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpRsaSigGenTestResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpRsaSigGenTestResult) */ {
 public:
  inline CavpRsaSigGenTestResult() : CavpRsaSigGenTestResult(nullptr) {}
  virtual ~CavpRsaSigGenTestResult();
  explicit constexpr CavpRsaSigGenTestResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpRsaSigGenTestResult(const CavpRsaSigGenTestResult& from);
  CavpRsaSigGenTestResult(CavpRsaSigGenTestResult&& from) noexcept
    : CavpRsaSigGenTestResult() {
    *this = ::std::move(from);
  }

  inline CavpRsaSigGenTestResult& operator=(const CavpRsaSigGenTestResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpRsaSigGenTestResult& operator=(CavpRsaSigGenTestResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpRsaSigGenTestResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpRsaSigGenTestResult* internal_default_instance() {
    return reinterpret_cast<const CavpRsaSigGenTestResult*>(
               &_CavpRsaSigGenTestResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CavpRsaSigGenTestResult& a, CavpRsaSigGenTestResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpRsaSigGenTestResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpRsaSigGenTestResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpRsaSigGenTestResult* New() const final {
    return CreateMaybeMessage<CavpRsaSigGenTestResult>(nullptr);
  }

  CavpRsaSigGenTestResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpRsaSigGenTestResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpRsaSigGenTestResult& from);
  void MergeFrom(const CavpRsaSigGenTestResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpRsaSigGenTestResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpRsaSigGenTestResult";
  }
  protected:
  explicit CavpRsaSigGenTestResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNFieldNumber = 3,
    kSigFieldNumber = 4,
    kResultCodeFieldNumber = 1,
    kEFieldNumber = 2,
  };
  // bytes n = 3;
  void clear_n();
  const std::string& n() const;
  void set_n(const std::string& value);
  void set_n(std::string&& value);
  void set_n(const char* value);
  void set_n(const void* value, size_t size);
  std::string* mutable_n();
  std::string* release_n();
  void set_allocated_n(std::string* n);
  private:
  const std::string& _internal_n() const;
  void _internal_set_n(const std::string& value);
  std::string* _internal_mutable_n();
  public:

  // bytes sig = 4;
  void clear_sig();
  const std::string& sig() const;
  void set_sig(const std::string& value);
  void set_sig(std::string&& value);
  void set_sig(const char* value);
  void set_sig(const void* value, size_t size);
  std::string* mutable_sig();
  std::string* release_sig();
  void set_allocated_sig(std::string* sig);
  private:
  const std::string& _internal_sig() const;
  void _internal_set_sig(const std::string& value);
  std::string* _internal_mutable_sig();
  public:

  // .nugget.app.protoapi.DcryptError result_code = 1;
  void clear_result_code();
  ::nugget::app::protoapi::DcryptError result_code() const;
  void set_result_code(::nugget::app::protoapi::DcryptError value);
  private:
  ::nugget::app::protoapi::DcryptError _internal_result_code() const;
  void _internal_set_result_code(::nugget::app::protoapi::DcryptError value);
  public:

  // uint32 e = 2;
  void clear_e();
  ::PROTOBUF_NAMESPACE_ID::uint32 e() const;
  void set_e(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_e() const;
  void _internal_set_e(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpRsaSigGenTestResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr n_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sig_;
  int result_code_;
  ::PROTOBUF_NAMESPACE_ID::uint32 e_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpRsaKeyGenTestResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpRsaKeyGenTestResult) */ {
 public:
  inline CavpRsaKeyGenTestResult() : CavpRsaKeyGenTestResult(nullptr) {}
  virtual ~CavpRsaKeyGenTestResult();
  explicit constexpr CavpRsaKeyGenTestResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpRsaKeyGenTestResult(const CavpRsaKeyGenTestResult& from);
  CavpRsaKeyGenTestResult(CavpRsaKeyGenTestResult&& from) noexcept
    : CavpRsaKeyGenTestResult() {
    *this = ::std::move(from);
  }

  inline CavpRsaKeyGenTestResult& operator=(const CavpRsaKeyGenTestResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpRsaKeyGenTestResult& operator=(CavpRsaKeyGenTestResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpRsaKeyGenTestResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpRsaKeyGenTestResult* internal_default_instance() {
    return reinterpret_cast<const CavpRsaKeyGenTestResult*>(
               &_CavpRsaKeyGenTestResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CavpRsaKeyGenTestResult& a, CavpRsaKeyGenTestResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpRsaKeyGenTestResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpRsaKeyGenTestResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpRsaKeyGenTestResult* New() const final {
    return CreateMaybeMessage<CavpRsaKeyGenTestResult>(nullptr);
  }

  CavpRsaKeyGenTestResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpRsaKeyGenTestResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpRsaKeyGenTestResult& from);
  void MergeFrom(const CavpRsaKeyGenTestResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpRsaKeyGenTestResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpRsaKeyGenTestResult";
  }
  protected:
  explicit CavpRsaKeyGenTestResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPFieldNumber = 3,
    kQFieldNumber = 4,
    kNFieldNumber = 5,
    kDFieldNumber = 6,
    kResultCodeFieldNumber = 1,
    kEFieldNumber = 2,
  };
  // bytes p = 3;
  void clear_p();
  const std::string& p() const;
  void set_p(const std::string& value);
  void set_p(std::string&& value);
  void set_p(const char* value);
  void set_p(const void* value, size_t size);
  std::string* mutable_p();
  std::string* release_p();
  void set_allocated_p(std::string* p);
  private:
  const std::string& _internal_p() const;
  void _internal_set_p(const std::string& value);
  std::string* _internal_mutable_p();
  public:

  // bytes q = 4;
  void clear_q();
  const std::string& q() const;
  void set_q(const std::string& value);
  void set_q(std::string&& value);
  void set_q(const char* value);
  void set_q(const void* value, size_t size);
  std::string* mutable_q();
  std::string* release_q();
  void set_allocated_q(std::string* q);
  private:
  const std::string& _internal_q() const;
  void _internal_set_q(const std::string& value);
  std::string* _internal_mutable_q();
  public:

  // bytes n = 5;
  void clear_n();
  const std::string& n() const;
  void set_n(const std::string& value);
  void set_n(std::string&& value);
  void set_n(const char* value);
  void set_n(const void* value, size_t size);
  std::string* mutable_n();
  std::string* release_n();
  void set_allocated_n(std::string* n);
  private:
  const std::string& _internal_n() const;
  void _internal_set_n(const std::string& value);
  std::string* _internal_mutable_n();
  public:

  // bytes d = 6;
  void clear_d();
  const std::string& d() const;
  void set_d(const std::string& value);
  void set_d(std::string&& value);
  void set_d(const char* value);
  void set_d(const void* value, size_t size);
  std::string* mutable_d();
  std::string* release_d();
  void set_allocated_d(std::string* d);
  private:
  const std::string& _internal_d() const;
  void _internal_set_d(const std::string& value);
  std::string* _internal_mutable_d();
  public:

  // .nugget.app.protoapi.DcryptError result_code = 1;
  void clear_result_code();
  ::nugget::app::protoapi::DcryptError result_code() const;
  void set_result_code(::nugget::app::protoapi::DcryptError value);
  private:
  ::nugget::app::protoapi::DcryptError _internal_result_code() const;
  void _internal_set_result_code(::nugget::app::protoapi::DcryptError value);
  public:

  // uint32 e = 2;
  void clear_e();
  ::PROTOBUF_NAMESPACE_ID::uint32 e() const;
  void set_e(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_e() const;
  void _internal_set_e(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpRsaKeyGenTestResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr p_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr q_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr n_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr d_;
  int result_code_;
  ::PROTOBUF_NAMESPACE_ID::uint32 e_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpDrbgTest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpDrbgTest) */ {
 public:
  inline CavpDrbgTest() : CavpDrbgTest(nullptr) {}
  virtual ~CavpDrbgTest();
  explicit constexpr CavpDrbgTest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpDrbgTest(const CavpDrbgTest& from);
  CavpDrbgTest(CavpDrbgTest&& from) noexcept
    : CavpDrbgTest() {
    *this = ::std::move(from);
  }

  inline CavpDrbgTest& operator=(const CavpDrbgTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpDrbgTest& operator=(CavpDrbgTest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpDrbgTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpDrbgTest* internal_default_instance() {
    return reinterpret_cast<const CavpDrbgTest*>(
               &_CavpDrbgTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CavpDrbgTest& a, CavpDrbgTest& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpDrbgTest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpDrbgTest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpDrbgTest* New() const final {
    return CreateMaybeMessage<CavpDrbgTest>(nullptr);
  }

  CavpDrbgTest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpDrbgTest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpDrbgTest& from);
  void MergeFrom(const CavpDrbgTest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpDrbgTest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpDrbgTest";
  }
  protected:
  explicit CavpDrbgTest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntropyInitFieldNumber = 4,
    kNonceFieldNumber = 5,
    kPersoStrFieldNumber = 6,
    kAddInput1FieldNumber = 7,
    kAddInput2FieldNumber = 8,
    kEntropyPr1FieldNumber = 10,
    kEntropyPr2FieldNumber = 11,
    kPredictionResistanceFieldNumber = 2,
    kRetLenFieldNumber = 3,
  };
  // bytes entropy_init = 4;
  void clear_entropy_init();
  const std::string& entropy_init() const;
  void set_entropy_init(const std::string& value);
  void set_entropy_init(std::string&& value);
  void set_entropy_init(const char* value);
  void set_entropy_init(const void* value, size_t size);
  std::string* mutable_entropy_init();
  std::string* release_entropy_init();
  void set_allocated_entropy_init(std::string* entropy_init);
  private:
  const std::string& _internal_entropy_init() const;
  void _internal_set_entropy_init(const std::string& value);
  std::string* _internal_mutable_entropy_init();
  public:

  // bytes nonce = 5;
  void clear_nonce();
  const std::string& nonce() const;
  void set_nonce(const std::string& value);
  void set_nonce(std::string&& value);
  void set_nonce(const char* value);
  void set_nonce(const void* value, size_t size);
  std::string* mutable_nonce();
  std::string* release_nonce();
  void set_allocated_nonce(std::string* nonce);
  private:
  const std::string& _internal_nonce() const;
  void _internal_set_nonce(const std::string& value);
  std::string* _internal_mutable_nonce();
  public:

  // bytes perso_str = 6;
  void clear_perso_str();
  const std::string& perso_str() const;
  void set_perso_str(const std::string& value);
  void set_perso_str(std::string&& value);
  void set_perso_str(const char* value);
  void set_perso_str(const void* value, size_t size);
  std::string* mutable_perso_str();
  std::string* release_perso_str();
  void set_allocated_perso_str(std::string* perso_str);
  private:
  const std::string& _internal_perso_str() const;
  void _internal_set_perso_str(const std::string& value);
  std::string* _internal_mutable_perso_str();
  public:

  // bytes add_input_1 = 7;
  void clear_add_input_1();
  const std::string& add_input_1() const;
  void set_add_input_1(const std::string& value);
  void set_add_input_1(std::string&& value);
  void set_add_input_1(const char* value);
  void set_add_input_1(const void* value, size_t size);
  std::string* mutable_add_input_1();
  std::string* release_add_input_1();
  void set_allocated_add_input_1(std::string* add_input_1);
  private:
  const std::string& _internal_add_input_1() const;
  void _internal_set_add_input_1(const std::string& value);
  std::string* _internal_mutable_add_input_1();
  public:

  // bytes add_input_2 = 8;
  void clear_add_input_2();
  const std::string& add_input_2() const;
  void set_add_input_2(const std::string& value);
  void set_add_input_2(std::string&& value);
  void set_add_input_2(const char* value);
  void set_add_input_2(const void* value, size_t size);
  std::string* mutable_add_input_2();
  std::string* release_add_input_2();
  void set_allocated_add_input_2(std::string* add_input_2);
  private:
  const std::string& _internal_add_input_2() const;
  void _internal_set_add_input_2(const std::string& value);
  std::string* _internal_mutable_add_input_2();
  public:

  // bytes entropy_pr_1 = 10;
  void clear_entropy_pr_1();
  const std::string& entropy_pr_1() const;
  void set_entropy_pr_1(const std::string& value);
  void set_entropy_pr_1(std::string&& value);
  void set_entropy_pr_1(const char* value);
  void set_entropy_pr_1(const void* value, size_t size);
  std::string* mutable_entropy_pr_1();
  std::string* release_entropy_pr_1();
  void set_allocated_entropy_pr_1(std::string* entropy_pr_1);
  private:
  const std::string& _internal_entropy_pr_1() const;
  void _internal_set_entropy_pr_1(const std::string& value);
  std::string* _internal_mutable_entropy_pr_1();
  public:

  // bytes entropy_pr_2 = 11;
  void clear_entropy_pr_2();
  const std::string& entropy_pr_2() const;
  void set_entropy_pr_2(const std::string& value);
  void set_entropy_pr_2(std::string&& value);
  void set_entropy_pr_2(const char* value);
  void set_entropy_pr_2(const void* value, size_t size);
  std::string* mutable_entropy_pr_2();
  std::string* release_entropy_pr_2();
  void set_allocated_entropy_pr_2(std::string* entropy_pr_2);
  private:
  const std::string& _internal_entropy_pr_2() const;
  void _internal_set_entropy_pr_2(const std::string& value);
  std::string* _internal_mutable_entropy_pr_2();
  public:

  // bool prediction_resistance = 2;
  void clear_prediction_resistance();
  bool prediction_resistance() const;
  void set_prediction_resistance(bool value);
  private:
  bool _internal_prediction_resistance() const;
  void _internal_set_prediction_resistance(bool value);
  public:

  // uint32 ret_len = 3;
  void clear_ret_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 ret_len() const;
  void set_ret_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ret_len() const;
  void _internal_set_ret_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpDrbgTest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr entropy_init_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nonce_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr perso_str_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr add_input_1_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr add_input_2_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr entropy_pr_1_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr entropy_pr_2_;
  bool prediction_resistance_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ret_len_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpDrbgTestResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpDrbgTestResult) */ {
 public:
  inline CavpDrbgTestResult() : CavpDrbgTestResult(nullptr) {}
  virtual ~CavpDrbgTestResult();
  explicit constexpr CavpDrbgTestResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpDrbgTestResult(const CavpDrbgTestResult& from);
  CavpDrbgTestResult(CavpDrbgTestResult&& from) noexcept
    : CavpDrbgTestResult() {
    *this = ::std::move(from);
  }

  inline CavpDrbgTestResult& operator=(const CavpDrbgTestResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpDrbgTestResult& operator=(CavpDrbgTestResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpDrbgTestResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpDrbgTestResult* internal_default_instance() {
    return reinterpret_cast<const CavpDrbgTestResult*>(
               &_CavpDrbgTestResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CavpDrbgTestResult& a, CavpDrbgTestResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpDrbgTestResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpDrbgTestResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpDrbgTestResult* New() const final {
    return CreateMaybeMessage<CavpDrbgTestResult>(nullptr);
  }

  CavpDrbgTestResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpDrbgTestResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpDrbgTestResult& from);
  void MergeFrom(const CavpDrbgTestResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpDrbgTestResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpDrbgTestResult";
  }
  protected:
  explicit CavpDrbgTestResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBitsFieldNumber = 2,
    kResultCodeFieldNumber = 1,
  };
  // bytes bits = 2;
  void clear_bits();
  const std::string& bits() const;
  void set_bits(const std::string& value);
  void set_bits(std::string&& value);
  void set_bits(const char* value);
  void set_bits(const void* value, size_t size);
  std::string* mutable_bits();
  std::string* release_bits();
  void set_allocated_bits(std::string* bits);
  private:
  const std::string& _internal_bits() const;
  void _internal_set_bits(const std::string& value);
  std::string* _internal_mutable_bits();
  public:

  // .nugget.app.protoapi.DcryptError result_code = 1;
  void clear_result_code();
  ::nugget::app::protoapi::DcryptError result_code() const;
  void set_result_code(::nugget::app::protoapi::DcryptError value);
  private:
  ::nugget::app::protoapi::DcryptError _internal_result_code() const;
  void _internal_set_result_code(::nugget::app::protoapi::DcryptError value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpDrbgTestResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bits_;
  int result_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpCkdfTest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpCkdfTest) */ {
 public:
  inline CavpCkdfTest() : CavpCkdfTest(nullptr) {}
  virtual ~CavpCkdfTest();
  explicit constexpr CavpCkdfTest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpCkdfTest(const CavpCkdfTest& from);
  CavpCkdfTest(CavpCkdfTest&& from) noexcept
    : CavpCkdfTest() {
    *this = ::std::move(from);
  }

  inline CavpCkdfTest& operator=(const CavpCkdfTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpCkdfTest& operator=(CavpCkdfTest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpCkdfTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpCkdfTest* internal_default_instance() {
    return reinterpret_cast<const CavpCkdfTest*>(
               &_CavpCkdfTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CavpCkdfTest& a, CavpCkdfTest& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpCkdfTest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpCkdfTest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpCkdfTest* New() const final {
    return CreateMaybeMessage<CavpCkdfTest>(nullptr);
  }

  CavpCkdfTest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpCkdfTest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpCkdfTest& from);
  void MergeFrom(const CavpCkdfTest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpCkdfTest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpCkdfTest";
  }
  protected:
  explicit CavpCkdfTest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 2,
    kKeyLenFieldNumber = 1,
  };
  // bytes key = 2;
  void clear_key();
  const std::string& key() const;
  void set_key(const std::string& value);
  void set_key(std::string&& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  std::string* mutable_key();
  std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // uint32 key_len = 1;
  void clear_key_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 key_len() const;
  void set_key_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_key_len() const;
  void _internal_set_key_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpCkdfTest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  ::PROTOBUF_NAMESPACE_ID::uint32 key_len_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpCkdfTestResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpCkdfTestResult) */ {
 public:
  inline CavpCkdfTestResult() : CavpCkdfTestResult(nullptr) {}
  virtual ~CavpCkdfTestResult();
  explicit constexpr CavpCkdfTestResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpCkdfTestResult(const CavpCkdfTestResult& from);
  CavpCkdfTestResult(CavpCkdfTestResult&& from) noexcept
    : CavpCkdfTestResult() {
    *this = ::std::move(from);
  }

  inline CavpCkdfTestResult& operator=(const CavpCkdfTestResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpCkdfTestResult& operator=(CavpCkdfTestResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpCkdfTestResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpCkdfTestResult* internal_default_instance() {
    return reinterpret_cast<const CavpCkdfTestResult*>(
               &_CavpCkdfTestResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CavpCkdfTestResult& a, CavpCkdfTestResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpCkdfTestResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpCkdfTestResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpCkdfTestResult* New() const final {
    return CreateMaybeMessage<CavpCkdfTestResult>(nullptr);
  }

  CavpCkdfTestResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpCkdfTestResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpCkdfTestResult& from);
  void MergeFrom(const CavpCkdfTestResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpCkdfTestResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpCkdfTestResult";
  }
  protected:
  explicit CavpCkdfTestResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 2,
    kFixedInputDataFieldNumber = 3,
    kResultCodeFieldNumber = 1,
  };
  // bytes key = 2;
  void clear_key();
  const std::string& key() const;
  void set_key(const std::string& value);
  void set_key(std::string&& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  std::string* mutable_key();
  std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // bytes fixed_input_data = 3;
  void clear_fixed_input_data();
  const std::string& fixed_input_data() const;
  void set_fixed_input_data(const std::string& value);
  void set_fixed_input_data(std::string&& value);
  void set_fixed_input_data(const char* value);
  void set_fixed_input_data(const void* value, size_t size);
  std::string* mutable_fixed_input_data();
  std::string* release_fixed_input_data();
  void set_allocated_fixed_input_data(std::string* fixed_input_data);
  private:
  const std::string& _internal_fixed_input_data() const;
  void _internal_set_fixed_input_data(const std::string& value);
  std::string* _internal_mutable_fixed_input_data();
  public:

  // .nugget.app.protoapi.DcryptError result_code = 1;
  void clear_result_code();
  ::nugget::app::protoapi::DcryptError result_code() const;
  void set_result_code(::nugget::app::protoapi::DcryptError value);
  private:
  ::nugget::app::protoapi::DcryptError _internal_result_code() const;
  void _internal_set_result_code(::nugget::app::protoapi::DcryptError value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpCkdfTestResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr fixed_input_data_;
  int result_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpEcdsaKeyPairTest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpEcdsaKeyPairTest) */ {
 public:
  inline CavpEcdsaKeyPairTest() : CavpEcdsaKeyPairTest(nullptr) {}
  virtual ~CavpEcdsaKeyPairTest();
  explicit constexpr CavpEcdsaKeyPairTest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpEcdsaKeyPairTest(const CavpEcdsaKeyPairTest& from);
  CavpEcdsaKeyPairTest(CavpEcdsaKeyPairTest&& from) noexcept
    : CavpEcdsaKeyPairTest() {
    *this = ::std::move(from);
  }

  inline CavpEcdsaKeyPairTest& operator=(const CavpEcdsaKeyPairTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpEcdsaKeyPairTest& operator=(CavpEcdsaKeyPairTest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpEcdsaKeyPairTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpEcdsaKeyPairTest* internal_default_instance() {
    return reinterpret_cast<const CavpEcdsaKeyPairTest*>(
               &_CavpEcdsaKeyPairTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CavpEcdsaKeyPairTest& a, CavpEcdsaKeyPairTest& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpEcdsaKeyPairTest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpEcdsaKeyPairTest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpEcdsaKeyPairTest* New() const final {
    return CreateMaybeMessage<CavpEcdsaKeyPairTest>(nullptr);
  }

  CavpEcdsaKeyPairTest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpEcdsaKeyPairTest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpEcdsaKeyPairTest& from);
  void MergeFrom(const CavpEcdsaKeyPairTest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpEcdsaKeyPairTest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpEcdsaKeyPairTest";
  }
  protected:
  explicit CavpEcdsaKeyPairTest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTableFieldNumber = 1,
  };
  // .nugget.app.protoapi.CavpEcdsaKeyGenTable table = 1;
  void clear_table();
  ::nugget::app::protoapi::CavpEcdsaKeyGenTable table() const;
  void set_table(::nugget::app::protoapi::CavpEcdsaKeyGenTable value);
  private:
  ::nugget::app::protoapi::CavpEcdsaKeyGenTable _internal_table() const;
  void _internal_set_table(::nugget::app::protoapi::CavpEcdsaKeyGenTable value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpEcdsaKeyPairTest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int table_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpEcdsaKeyPairTestResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpEcdsaKeyPairTestResult) */ {
 public:
  inline CavpEcdsaKeyPairTestResult() : CavpEcdsaKeyPairTestResult(nullptr) {}
  virtual ~CavpEcdsaKeyPairTestResult();
  explicit constexpr CavpEcdsaKeyPairTestResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpEcdsaKeyPairTestResult(const CavpEcdsaKeyPairTestResult& from);
  CavpEcdsaKeyPairTestResult(CavpEcdsaKeyPairTestResult&& from) noexcept
    : CavpEcdsaKeyPairTestResult() {
    *this = ::std::move(from);
  }

  inline CavpEcdsaKeyPairTestResult& operator=(const CavpEcdsaKeyPairTestResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpEcdsaKeyPairTestResult& operator=(CavpEcdsaKeyPairTestResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpEcdsaKeyPairTestResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpEcdsaKeyPairTestResult* internal_default_instance() {
    return reinterpret_cast<const CavpEcdsaKeyPairTestResult*>(
               &_CavpEcdsaKeyPairTestResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CavpEcdsaKeyPairTestResult& a, CavpEcdsaKeyPairTestResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpEcdsaKeyPairTestResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpEcdsaKeyPairTestResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpEcdsaKeyPairTestResult* New() const final {
    return CreateMaybeMessage<CavpEcdsaKeyPairTestResult>(nullptr);
  }

  CavpEcdsaKeyPairTestResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpEcdsaKeyPairTestResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpEcdsaKeyPairTestResult& from);
  void MergeFrom(const CavpEcdsaKeyPairTestResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpEcdsaKeyPairTestResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpEcdsaKeyPairTestResult";
  }
  protected:
  explicit CavpEcdsaKeyPairTestResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDFieldNumber = 2,
    kQxFieldNumber = 3,
    kQyFieldNumber = 4,
    kResultCodeFieldNumber = 1,
  };
  // bytes d = 2;
  void clear_d();
  const std::string& d() const;
  void set_d(const std::string& value);
  void set_d(std::string&& value);
  void set_d(const char* value);
  void set_d(const void* value, size_t size);
  std::string* mutable_d();
  std::string* release_d();
  void set_allocated_d(std::string* d);
  private:
  const std::string& _internal_d() const;
  void _internal_set_d(const std::string& value);
  std::string* _internal_mutable_d();
  public:

  // bytes qx = 3;
  void clear_qx();
  const std::string& qx() const;
  void set_qx(const std::string& value);
  void set_qx(std::string&& value);
  void set_qx(const char* value);
  void set_qx(const void* value, size_t size);
  std::string* mutable_qx();
  std::string* release_qx();
  void set_allocated_qx(std::string* qx);
  private:
  const std::string& _internal_qx() const;
  void _internal_set_qx(const std::string& value);
  std::string* _internal_mutable_qx();
  public:

  // bytes qy = 4;
  void clear_qy();
  const std::string& qy() const;
  void set_qy(const std::string& value);
  void set_qy(std::string&& value);
  void set_qy(const char* value);
  void set_qy(const void* value, size_t size);
  std::string* mutable_qy();
  std::string* release_qy();
  void set_allocated_qy(std::string* qy);
  private:
  const std::string& _internal_qy() const;
  void _internal_set_qy(const std::string& value);
  std::string* _internal_mutable_qy();
  public:

  // .nugget.app.protoapi.DcryptError result_code = 1;
  void clear_result_code();
  ::nugget::app::protoapi::DcryptError result_code() const;
  void set_result_code(::nugget::app::protoapi::DcryptError value);
  private:
  ::nugget::app::protoapi::DcryptError _internal_result_code() const;
  void _internal_set_result_code(::nugget::app::protoapi::DcryptError value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpEcdsaKeyPairTestResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr d_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr qx_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr qy_;
  int result_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpEcdsaPkvTest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpEcdsaPkvTest) */ {
 public:
  inline CavpEcdsaPkvTest() : CavpEcdsaPkvTest(nullptr) {}
  virtual ~CavpEcdsaPkvTest();
  explicit constexpr CavpEcdsaPkvTest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpEcdsaPkvTest(const CavpEcdsaPkvTest& from);
  CavpEcdsaPkvTest(CavpEcdsaPkvTest&& from) noexcept
    : CavpEcdsaPkvTest() {
    *this = ::std::move(from);
  }

  inline CavpEcdsaPkvTest& operator=(const CavpEcdsaPkvTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpEcdsaPkvTest& operator=(CavpEcdsaPkvTest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpEcdsaPkvTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpEcdsaPkvTest* internal_default_instance() {
    return reinterpret_cast<const CavpEcdsaPkvTest*>(
               &_CavpEcdsaPkvTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CavpEcdsaPkvTest& a, CavpEcdsaPkvTest& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpEcdsaPkvTest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpEcdsaPkvTest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpEcdsaPkvTest* New() const final {
    return CreateMaybeMessage<CavpEcdsaPkvTest>(nullptr);
  }

  CavpEcdsaPkvTest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpEcdsaPkvTest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpEcdsaPkvTest& from);
  void MergeFrom(const CavpEcdsaPkvTest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpEcdsaPkvTest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpEcdsaPkvTest";
  }
  protected:
  explicit CavpEcdsaPkvTest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQxFieldNumber = 1,
    kQyFieldNumber = 2,
  };
  // bytes qx = 1;
  void clear_qx();
  const std::string& qx() const;
  void set_qx(const std::string& value);
  void set_qx(std::string&& value);
  void set_qx(const char* value);
  void set_qx(const void* value, size_t size);
  std::string* mutable_qx();
  std::string* release_qx();
  void set_allocated_qx(std::string* qx);
  private:
  const std::string& _internal_qx() const;
  void _internal_set_qx(const std::string& value);
  std::string* _internal_mutable_qx();
  public:

  // bytes qy = 2;
  void clear_qy();
  const std::string& qy() const;
  void set_qy(const std::string& value);
  void set_qy(std::string&& value);
  void set_qy(const char* value);
  void set_qy(const void* value, size_t size);
  std::string* mutable_qy();
  std::string* release_qy();
  void set_allocated_qy(std::string* qy);
  private:
  const std::string& _internal_qy() const;
  void _internal_set_qy(const std::string& value);
  std::string* _internal_mutable_qy();
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpEcdsaPkvTest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr qx_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr qy_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpEcdsaPkvTestResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpEcdsaPkvTestResult) */ {
 public:
  inline CavpEcdsaPkvTestResult() : CavpEcdsaPkvTestResult(nullptr) {}
  virtual ~CavpEcdsaPkvTestResult();
  explicit constexpr CavpEcdsaPkvTestResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpEcdsaPkvTestResult(const CavpEcdsaPkvTestResult& from);
  CavpEcdsaPkvTestResult(CavpEcdsaPkvTestResult&& from) noexcept
    : CavpEcdsaPkvTestResult() {
    *this = ::std::move(from);
  }

  inline CavpEcdsaPkvTestResult& operator=(const CavpEcdsaPkvTestResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpEcdsaPkvTestResult& operator=(CavpEcdsaPkvTestResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpEcdsaPkvTestResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpEcdsaPkvTestResult* internal_default_instance() {
    return reinterpret_cast<const CavpEcdsaPkvTestResult*>(
               &_CavpEcdsaPkvTestResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CavpEcdsaPkvTestResult& a, CavpEcdsaPkvTestResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpEcdsaPkvTestResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpEcdsaPkvTestResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpEcdsaPkvTestResult* New() const final {
    return CreateMaybeMessage<CavpEcdsaPkvTestResult>(nullptr);
  }

  CavpEcdsaPkvTestResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpEcdsaPkvTestResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpEcdsaPkvTestResult& from);
  void MergeFrom(const CavpEcdsaPkvTestResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpEcdsaPkvTestResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpEcdsaPkvTestResult";
  }
  protected:
  explicit CavpEcdsaPkvTestResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultCodeFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // .nugget.app.protoapi.DcryptError result_code = 1;
  void clear_result_code();
  ::nugget::app::protoapi::DcryptError result_code() const;
  void set_result_code(::nugget::app::protoapi::DcryptError value);
  private:
  ::nugget::app::protoapi::DcryptError _internal_result_code() const;
  void _internal_set_result_code(::nugget::app::protoapi::DcryptError value);
  public:

  // bool result = 2;
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpEcdsaPkvTestResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int result_code_;
  bool result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpEcdsaSigGenTest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpEcdsaSigGenTest) */ {
 public:
  inline CavpEcdsaSigGenTest() : CavpEcdsaSigGenTest(nullptr) {}
  virtual ~CavpEcdsaSigGenTest();
  explicit constexpr CavpEcdsaSigGenTest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpEcdsaSigGenTest(const CavpEcdsaSigGenTest& from);
  CavpEcdsaSigGenTest(CavpEcdsaSigGenTest&& from) noexcept
    : CavpEcdsaSigGenTest() {
    *this = ::std::move(from);
  }

  inline CavpEcdsaSigGenTest& operator=(const CavpEcdsaSigGenTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpEcdsaSigGenTest& operator=(CavpEcdsaSigGenTest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpEcdsaSigGenTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpEcdsaSigGenTest* internal_default_instance() {
    return reinterpret_cast<const CavpEcdsaSigGenTest*>(
               &_CavpEcdsaSigGenTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(CavpEcdsaSigGenTest& a, CavpEcdsaSigGenTest& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpEcdsaSigGenTest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpEcdsaSigGenTest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpEcdsaSigGenTest* New() const final {
    return CreateMaybeMessage<CavpEcdsaSigGenTest>(nullptr);
  }

  CavpEcdsaSigGenTest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpEcdsaSigGenTest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpEcdsaSigGenTest& from);
  void MergeFrom(const CavpEcdsaSigGenTest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpEcdsaSigGenTest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpEcdsaSigGenTest";
  }
  protected:
  explicit CavpEcdsaSigGenTest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 1,
  };
  // bytes msg = 1;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const void* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpEcdsaSigGenTest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpEcdsaSigGenTestResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpEcdsaSigGenTestResult) */ {
 public:
  inline CavpEcdsaSigGenTestResult() : CavpEcdsaSigGenTestResult(nullptr) {}
  virtual ~CavpEcdsaSigGenTestResult();
  explicit constexpr CavpEcdsaSigGenTestResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpEcdsaSigGenTestResult(const CavpEcdsaSigGenTestResult& from);
  CavpEcdsaSigGenTestResult(CavpEcdsaSigGenTestResult&& from) noexcept
    : CavpEcdsaSigGenTestResult() {
    *this = ::std::move(from);
  }

  inline CavpEcdsaSigGenTestResult& operator=(const CavpEcdsaSigGenTestResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpEcdsaSigGenTestResult& operator=(CavpEcdsaSigGenTestResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpEcdsaSigGenTestResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpEcdsaSigGenTestResult* internal_default_instance() {
    return reinterpret_cast<const CavpEcdsaSigGenTestResult*>(
               &_CavpEcdsaSigGenTestResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CavpEcdsaSigGenTestResult& a, CavpEcdsaSigGenTestResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpEcdsaSigGenTestResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpEcdsaSigGenTestResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpEcdsaSigGenTestResult* New() const final {
    return CreateMaybeMessage<CavpEcdsaSigGenTestResult>(nullptr);
  }

  CavpEcdsaSigGenTestResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpEcdsaSigGenTestResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpEcdsaSigGenTestResult& from);
  void MergeFrom(const CavpEcdsaSigGenTestResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpEcdsaSigGenTestResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpEcdsaSigGenTestResult";
  }
  protected:
  explicit CavpEcdsaSigGenTestResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQxFieldNumber = 2,
    kQyFieldNumber = 3,
    kRFieldNumber = 4,
    kSigFieldNumber = 5,
    kResultCodeFieldNumber = 1,
  };
  // bytes qx = 2;
  void clear_qx();
  const std::string& qx() const;
  void set_qx(const std::string& value);
  void set_qx(std::string&& value);
  void set_qx(const char* value);
  void set_qx(const void* value, size_t size);
  std::string* mutable_qx();
  std::string* release_qx();
  void set_allocated_qx(std::string* qx);
  private:
  const std::string& _internal_qx() const;
  void _internal_set_qx(const std::string& value);
  std::string* _internal_mutable_qx();
  public:

  // bytes qy = 3;
  void clear_qy();
  const std::string& qy() const;
  void set_qy(const std::string& value);
  void set_qy(std::string&& value);
  void set_qy(const char* value);
  void set_qy(const void* value, size_t size);
  std::string* mutable_qy();
  std::string* release_qy();
  void set_allocated_qy(std::string* qy);
  private:
  const std::string& _internal_qy() const;
  void _internal_set_qy(const std::string& value);
  std::string* _internal_mutable_qy();
  public:

  // bytes r = 4;
  void clear_r();
  const std::string& r() const;
  void set_r(const std::string& value);
  void set_r(std::string&& value);
  void set_r(const char* value);
  void set_r(const void* value, size_t size);
  std::string* mutable_r();
  std::string* release_r();
  void set_allocated_r(std::string* r);
  private:
  const std::string& _internal_r() const;
  void _internal_set_r(const std::string& value);
  std::string* _internal_mutable_r();
  public:

  // bytes sig = 5;
  void clear_sig();
  const std::string& sig() const;
  void set_sig(const std::string& value);
  void set_sig(std::string&& value);
  void set_sig(const char* value);
  void set_sig(const void* value, size_t size);
  std::string* mutable_sig();
  std::string* release_sig();
  void set_allocated_sig(std::string* sig);
  private:
  const std::string& _internal_sig() const;
  void _internal_set_sig(const std::string& value);
  std::string* _internal_mutable_sig();
  public:

  // .nugget.app.protoapi.DcryptError result_code = 1;
  void clear_result_code();
  ::nugget::app::protoapi::DcryptError result_code() const;
  void set_result_code(::nugget::app::protoapi::DcryptError value);
  private:
  ::nugget::app::protoapi::DcryptError _internal_result_code() const;
  void _internal_set_result_code(::nugget::app::protoapi::DcryptError value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpEcdsaSigGenTestResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr qx_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr qy_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr r_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sig_;
  int result_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpEcdsaSigVerTest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpEcdsaSigVerTest) */ {
 public:
  inline CavpEcdsaSigVerTest() : CavpEcdsaSigVerTest(nullptr) {}
  virtual ~CavpEcdsaSigVerTest();
  explicit constexpr CavpEcdsaSigVerTest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpEcdsaSigVerTest(const CavpEcdsaSigVerTest& from);
  CavpEcdsaSigVerTest(CavpEcdsaSigVerTest&& from) noexcept
    : CavpEcdsaSigVerTest() {
    *this = ::std::move(from);
  }

  inline CavpEcdsaSigVerTest& operator=(const CavpEcdsaSigVerTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpEcdsaSigVerTest& operator=(CavpEcdsaSigVerTest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpEcdsaSigVerTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpEcdsaSigVerTest* internal_default_instance() {
    return reinterpret_cast<const CavpEcdsaSigVerTest*>(
               &_CavpEcdsaSigVerTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CavpEcdsaSigVerTest& a, CavpEcdsaSigVerTest& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpEcdsaSigVerTest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpEcdsaSigVerTest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpEcdsaSigVerTest* New() const final {
    return CreateMaybeMessage<CavpEcdsaSigVerTest>(nullptr);
  }

  CavpEcdsaSigVerTest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpEcdsaSigVerTest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpEcdsaSigVerTest& from);
  void MergeFrom(const CavpEcdsaSigVerTest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpEcdsaSigVerTest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpEcdsaSigVerTest";
  }
  protected:
  explicit CavpEcdsaSigVerTest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 1,
    kQxFieldNumber = 2,
    kQyFieldNumber = 3,
    kRFieldNumber = 4,
    kSigFieldNumber = 5,
  };
  // bytes msg = 1;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const void* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // bytes qx = 2;
  void clear_qx();
  const std::string& qx() const;
  void set_qx(const std::string& value);
  void set_qx(std::string&& value);
  void set_qx(const char* value);
  void set_qx(const void* value, size_t size);
  std::string* mutable_qx();
  std::string* release_qx();
  void set_allocated_qx(std::string* qx);
  private:
  const std::string& _internal_qx() const;
  void _internal_set_qx(const std::string& value);
  std::string* _internal_mutable_qx();
  public:

  // bytes qy = 3;
  void clear_qy();
  const std::string& qy() const;
  void set_qy(const std::string& value);
  void set_qy(std::string&& value);
  void set_qy(const char* value);
  void set_qy(const void* value, size_t size);
  std::string* mutable_qy();
  std::string* release_qy();
  void set_allocated_qy(std::string* qy);
  private:
  const std::string& _internal_qy() const;
  void _internal_set_qy(const std::string& value);
  std::string* _internal_mutable_qy();
  public:

  // bytes r = 4;
  void clear_r();
  const std::string& r() const;
  void set_r(const std::string& value);
  void set_r(std::string&& value);
  void set_r(const char* value);
  void set_r(const void* value, size_t size);
  std::string* mutable_r();
  std::string* release_r();
  void set_allocated_r(std::string* r);
  private:
  const std::string& _internal_r() const;
  void _internal_set_r(const std::string& value);
  std::string* _internal_mutable_r();
  public:

  // bytes sig = 5;
  void clear_sig();
  const std::string& sig() const;
  void set_sig(const std::string& value);
  void set_sig(std::string&& value);
  void set_sig(const char* value);
  void set_sig(const void* value, size_t size);
  std::string* mutable_sig();
  std::string* release_sig();
  void set_allocated_sig(std::string* sig);
  private:
  const std::string& _internal_sig() const;
  void _internal_set_sig(const std::string& value);
  std::string* _internal_mutable_sig();
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpEcdsaSigVerTest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr qx_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr qy_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr r_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sig_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpEcdsaSigVerTestResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpEcdsaSigVerTestResult) */ {
 public:
  inline CavpEcdsaSigVerTestResult() : CavpEcdsaSigVerTestResult(nullptr) {}
  virtual ~CavpEcdsaSigVerTestResult();
  explicit constexpr CavpEcdsaSigVerTestResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpEcdsaSigVerTestResult(const CavpEcdsaSigVerTestResult& from);
  CavpEcdsaSigVerTestResult(CavpEcdsaSigVerTestResult&& from) noexcept
    : CavpEcdsaSigVerTestResult() {
    *this = ::std::move(from);
  }

  inline CavpEcdsaSigVerTestResult& operator=(const CavpEcdsaSigVerTestResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpEcdsaSigVerTestResult& operator=(CavpEcdsaSigVerTestResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpEcdsaSigVerTestResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpEcdsaSigVerTestResult* internal_default_instance() {
    return reinterpret_cast<const CavpEcdsaSigVerTestResult*>(
               &_CavpEcdsaSigVerTestResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(CavpEcdsaSigVerTestResult& a, CavpEcdsaSigVerTestResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpEcdsaSigVerTestResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpEcdsaSigVerTestResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpEcdsaSigVerTestResult* New() const final {
    return CreateMaybeMessage<CavpEcdsaSigVerTestResult>(nullptr);
  }

  CavpEcdsaSigVerTestResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpEcdsaSigVerTestResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpEcdsaSigVerTestResult& from);
  void MergeFrom(const CavpEcdsaSigVerTestResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpEcdsaSigVerTestResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpEcdsaSigVerTestResult";
  }
  protected:
  explicit CavpEcdsaSigVerTestResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultCodeFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // .nugget.app.protoapi.DcryptError result_code = 1;
  void clear_result_code();
  ::nugget::app::protoapi::DcryptError result_code() const;
  void set_result_code(::nugget::app::protoapi::DcryptError value);
  private:
  ::nugget::app::protoapi::DcryptError _internal_result_code() const;
  void _internal_set_result_code(::nugget::app::protoapi::DcryptError value);
  public:

  // bool result = 2;
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpEcdsaSigVerTestResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int result_code_;
  bool result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpCmacGenTest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpCmacGenTest) */ {
 public:
  inline CavpCmacGenTest() : CavpCmacGenTest(nullptr) {}
  virtual ~CavpCmacGenTest();
  explicit constexpr CavpCmacGenTest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpCmacGenTest(const CavpCmacGenTest& from);
  CavpCmacGenTest(CavpCmacGenTest&& from) noexcept
    : CavpCmacGenTest() {
    *this = ::std::move(from);
  }

  inline CavpCmacGenTest& operator=(const CavpCmacGenTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpCmacGenTest& operator=(CavpCmacGenTest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpCmacGenTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpCmacGenTest* internal_default_instance() {
    return reinterpret_cast<const CavpCmacGenTest*>(
               &_CavpCmacGenTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(CavpCmacGenTest& a, CavpCmacGenTest& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpCmacGenTest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpCmacGenTest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpCmacGenTest* New() const final {
    return CreateMaybeMessage<CavpCmacGenTest>(nullptr);
  }

  CavpCmacGenTest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpCmacGenTest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpCmacGenTest& from);
  void MergeFrom(const CavpCmacGenTest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpCmacGenTest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpCmacGenTest";
  }
  protected:
  explicit CavpCmacGenTest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 5,
    kMsgFieldNumber = 6,
    kOffsetFieldNumber = 1,
    kKeySizeFieldNumber = 2,
    kMacLenFieldNumber = 3,
    kTotalLenFieldNumber = 4,
  };
  // bytes key = 5;
  void clear_key();
  const std::string& key() const;
  void set_key(const std::string& value);
  void set_key(std::string&& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  std::string* mutable_key();
  std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // bytes msg = 6;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const void* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // uint32 offset = 1;
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_offset() const;
  void _internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 key_size = 2;
  void clear_key_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 key_size() const;
  void set_key_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_key_size() const;
  void _internal_set_key_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 mac_len = 3;
  void clear_mac_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 mac_len() const;
  void set_mac_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mac_len() const;
  void _internal_set_mac_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 total_len = 4;
  void clear_total_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_len() const;
  void set_total_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_len() const;
  void _internal_set_total_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpCmacGenTest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  ::PROTOBUF_NAMESPACE_ID::uint32 offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 key_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mac_len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_len_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class CavpCmacGenTestResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.CavpCmacGenTestResult) */ {
 public:
  inline CavpCmacGenTestResult() : CavpCmacGenTestResult(nullptr) {}
  virtual ~CavpCmacGenTestResult();
  explicit constexpr CavpCmacGenTestResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CavpCmacGenTestResult(const CavpCmacGenTestResult& from);
  CavpCmacGenTestResult(CavpCmacGenTestResult&& from) noexcept
    : CavpCmacGenTestResult() {
    *this = ::std::move(from);
  }

  inline CavpCmacGenTestResult& operator=(const CavpCmacGenTestResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CavpCmacGenTestResult& operator=(CavpCmacGenTestResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CavpCmacGenTestResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CavpCmacGenTestResult* internal_default_instance() {
    return reinterpret_cast<const CavpCmacGenTestResult*>(
               &_CavpCmacGenTestResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CavpCmacGenTestResult& a, CavpCmacGenTestResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CavpCmacGenTestResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CavpCmacGenTestResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CavpCmacGenTestResult* New() const final {
    return CreateMaybeMessage<CavpCmacGenTestResult>(nullptr);
  }

  CavpCmacGenTestResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CavpCmacGenTestResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CavpCmacGenTestResult& from);
  void MergeFrom(const CavpCmacGenTestResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CavpCmacGenTestResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.CavpCmacGenTestResult";
  }
  protected:
  explicit CavpCmacGenTestResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMacFieldNumber = 2,
    kResultCodeFieldNumber = 1,
  };
  // bytes mac = 2;
  void clear_mac();
  const std::string& mac() const;
  void set_mac(const std::string& value);
  void set_mac(std::string&& value);
  void set_mac(const char* value);
  void set_mac(const void* value, size_t size);
  std::string* mutable_mac();
  std::string* release_mac();
  void set_allocated_mac(std::string* mac);
  private:
  const std::string& _internal_mac() const;
  void _internal_set_mac(const std::string& value);
  std::string* _internal_mutable_mac();
  public:

  // .nugget.app.protoapi.DcryptError result_code = 1;
  void clear_result_code();
  ::nugget::app::protoapi::DcryptError result_code() const;
  void set_result_code(::nugget::app::protoapi::DcryptError value);
  private:
  ::nugget::app::protoapi::DcryptError _internal_result_code() const;
  void _internal_set_result_code(::nugget::app::protoapi::DcryptError value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.CavpCmacGenTestResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mac_;
  int result_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class TrngTest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.TrngTest) */ {
 public:
  inline TrngTest() : TrngTest(nullptr) {}
  virtual ~TrngTest();
  explicit constexpr TrngTest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TrngTest(const TrngTest& from);
  TrngTest(TrngTest&& from) noexcept
    : TrngTest() {
    *this = ::std::move(from);
  }

  inline TrngTest& operator=(const TrngTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrngTest& operator=(TrngTest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrngTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrngTest* internal_default_instance() {
    return reinterpret_cast<const TrngTest*>(
               &_TrngTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(TrngTest& a, TrngTest& b) {
    a.Swap(&b);
  }
  inline void Swap(TrngTest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrngTest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrngTest* New() const final {
    return CreateMaybeMessage<TrngTest>(nullptr);
  }

  TrngTest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrngTest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrngTest& from);
  void MergeFrom(const TrngTest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrngTest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.TrngTest";
  }
  protected:
  explicit TrngTest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumberOfBytesFieldNumber = 1,
  };
  // uint32 number_of_bytes = 1;
  void clear_number_of_bytes();
  ::PROTOBUF_NAMESPACE_ID::uint32 number_of_bytes() const;
  void set_number_of_bytes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_number_of_bytes() const;
  void _internal_set_number_of_bytes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.TrngTest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 number_of_bytes_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class AesCmacTest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.AesCmacTest) */ {
 public:
  inline AesCmacTest() : AesCmacTest(nullptr) {}
  virtual ~AesCmacTest();
  explicit constexpr AesCmacTest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AesCmacTest(const AesCmacTest& from);
  AesCmacTest(AesCmacTest&& from) noexcept
    : AesCmacTest() {
    *this = ::std::move(from);
  }

  inline AesCmacTest& operator=(const AesCmacTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AesCmacTest& operator=(AesCmacTest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AesCmacTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AesCmacTest* internal_default_instance() {
    return reinterpret_cast<const AesCmacTest*>(
               &_AesCmacTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(AesCmacTest& a, AesCmacTest& b) {
    a.Swap(&b);
  }
  inline void Swap(AesCmacTest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AesCmacTest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AesCmacTest* New() const final {
    return CreateMaybeMessage<AesCmacTest>(nullptr);
  }

  AesCmacTest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AesCmacTest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AesCmacTest& from);
  void MergeFrom(const AesCmacTest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AesCmacTest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.AesCmacTest";
  }
  protected:
  explicit AesCmacTest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kPlainTextFieldNumber = 2,
  };
  // bytes key = 1;
  void clear_key();
  const std::string& key() const;
  void set_key(const std::string& value);
  void set_key(std::string&& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  std::string* mutable_key();
  std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // bytes plain_text = 2;
  void clear_plain_text();
  const std::string& plain_text() const;
  void set_plain_text(const std::string& value);
  void set_plain_text(std::string&& value);
  void set_plain_text(const char* value);
  void set_plain_text(const void* value, size_t size);
  std::string* mutable_plain_text();
  std::string* release_plain_text();
  void set_allocated_plain_text(std::string* plain_text);
  private:
  const std::string& _internal_plain_text() const;
  void _internal_set_plain_text(const std::string& value);
  std::string* _internal_mutable_plain_text();
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.AesCmacTest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr plain_text_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class AesCmacTestResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.AesCmacTestResult) */ {
 public:
  inline AesCmacTestResult() : AesCmacTestResult(nullptr) {}
  virtual ~AesCmacTestResult();
  explicit constexpr AesCmacTestResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AesCmacTestResult(const AesCmacTestResult& from);
  AesCmacTestResult(AesCmacTestResult&& from) noexcept
    : AesCmacTestResult() {
    *this = ::std::move(from);
  }

  inline AesCmacTestResult& operator=(const AesCmacTestResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline AesCmacTestResult& operator=(AesCmacTestResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AesCmacTestResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const AesCmacTestResult* internal_default_instance() {
    return reinterpret_cast<const AesCmacTestResult*>(
               &_AesCmacTestResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(AesCmacTestResult& a, AesCmacTestResult& b) {
    a.Swap(&b);
  }
  inline void Swap(AesCmacTestResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AesCmacTestResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AesCmacTestResult* New() const final {
    return CreateMaybeMessage<AesCmacTestResult>(nullptr);
  }

  AesCmacTestResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AesCmacTestResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AesCmacTestResult& from);
  void MergeFrom(const AesCmacTestResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AesCmacTestResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.AesCmacTestResult";
  }
  protected:
  explicit AesCmacTestResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCmacFieldNumber = 2,
    kResultCodeFieldNumber = 1,
  };
  // bytes cmac = 2;
  void clear_cmac();
  const std::string& cmac() const;
  void set_cmac(const std::string& value);
  void set_cmac(std::string&& value);
  void set_cmac(const char* value);
  void set_cmac(const void* value, size_t size);
  std::string* mutable_cmac();
  std::string* release_cmac();
  void set_allocated_cmac(std::string* cmac);
  private:
  const std::string& _internal_cmac() const;
  void _internal_set_cmac(const std::string& value);
  std::string* _internal_mutable_cmac();
  public:

  // .nugget.app.protoapi.DcryptError result_code = 1;
  void clear_result_code();
  ::nugget::app::protoapi::DcryptError result_code() const;
  void set_result_code(::nugget::app::protoapi::DcryptError value);
  private:
  ::nugget::app::protoapi::DcryptError _internal_result_code() const;
  void _internal_set_result_code(::nugget::app::protoapi::DcryptError value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.AesCmacTestResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cmac_;
  int result_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// -------------------------------------------------------------------

class TrngTestResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.protoapi.TrngTestResult) */ {
 public:
  inline TrngTestResult() : TrngTestResult(nullptr) {}
  virtual ~TrngTestResult();
  explicit constexpr TrngTestResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TrngTestResult(const TrngTestResult& from);
  TrngTestResult(TrngTestResult&& from) noexcept
    : TrngTestResult() {
    *this = ::std::move(from);
  }

  inline TrngTestResult& operator=(const TrngTestResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrngTestResult& operator=(TrngTestResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrngTestResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrngTestResult* internal_default_instance() {
    return reinterpret_cast<const TrngTestResult*>(
               &_TrngTestResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(TrngTestResult& a, TrngTestResult& b) {
    a.Swap(&b);
  }
  inline void Swap(TrngTestResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrngTestResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrngTestResult* New() const final {
    return CreateMaybeMessage<TrngTestResult>(nullptr);
  }

  TrngTestResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrngTestResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrngTestResult& from);
  void MergeFrom(const TrngTestResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrngTestResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.protoapi.TrngTestResult";
  }
  protected:
  explicit TrngTestResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRandomBytesFieldNumber = 1,
  };
  // bytes random_bytes = 1;
  void clear_random_bytes();
  const std::string& random_bytes() const;
  void set_random_bytes(const std::string& value);
  void set_random_bytes(std::string&& value);
  void set_random_bytes(const char* value);
  void set_random_bytes(const void* value, size_t size);
  std::string* mutable_random_bytes();
  std::string* release_random_bytes();
  void set_allocated_random_bytes(std::string* random_bytes);
  private:
  const std::string& _internal_random_bytes() const;
  void _internal_set_random_bytes(const std::string& value);
  std::string* _internal_mutable_random_bytes();
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.protoapi.TrngTestResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr random_bytes_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AesCbcEncryptTest

// .nugget.app.protoapi.KeySize key_size = 1;
inline void AesCbcEncryptTest::clear_key_size() {
  key_size_ = 0;
}
inline ::nugget::app::protoapi::KeySize AesCbcEncryptTest::_internal_key_size() const {
  return static_cast< ::nugget::app::protoapi::KeySize >(key_size_);
}
inline ::nugget::app::protoapi::KeySize AesCbcEncryptTest::key_size() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCbcEncryptTest.key_size)
  return _internal_key_size();
}
inline void AesCbcEncryptTest::_internal_set_key_size(::nugget::app::protoapi::KeySize value) {
  
  key_size_ = value;
}
inline void AesCbcEncryptTest::set_key_size(::nugget::app::protoapi::KeySize value) {
  _internal_set_key_size(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCbcEncryptTest.key_size)
}

// uint32 number_of_blocks = 2;
inline void AesCbcEncryptTest::clear_number_of_blocks() {
  number_of_blocks_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AesCbcEncryptTest::_internal_number_of_blocks() const {
  return number_of_blocks_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AesCbcEncryptTest::number_of_blocks() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCbcEncryptTest.number_of_blocks)
  return _internal_number_of_blocks();
}
inline void AesCbcEncryptTest::_internal_set_number_of_blocks(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  number_of_blocks_ = value;
}
inline void AesCbcEncryptTest::set_number_of_blocks(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_number_of_blocks(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCbcEncryptTest.number_of_blocks)
}

// bytes key = 3;
inline void AesCbcEncryptTest::clear_key() {
  key_.ClearToEmpty();
}
inline const std::string& AesCbcEncryptTest::key() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCbcEncryptTest.key)
  return _internal_key();
}
inline void AesCbcEncryptTest::set_key(const std::string& value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCbcEncryptTest.key)
}
inline std::string* AesCbcEncryptTest::mutable_key() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.AesCbcEncryptTest.key)
  return _internal_mutable_key();
}
inline const std::string& AesCbcEncryptTest::_internal_key() const {
  return key_.Get();
}
inline void AesCbcEncryptTest::_internal_set_key(const std::string& value) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AesCbcEncryptTest::set_key(std::string&& value) {
  
  key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.AesCbcEncryptTest.key)
}
inline void AesCbcEncryptTest::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.AesCbcEncryptTest.key)
}
inline void AesCbcEncryptTest::set_key(const void* value,
    size_t size) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.AesCbcEncryptTest.key)
}
inline std::string* AesCbcEncryptTest::_internal_mutable_key() {
  
  return key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AesCbcEncryptTest::release_key() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.AesCbcEncryptTest.key)
  return key_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AesCbcEncryptTest::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.AesCbcEncryptTest.key)
}

// bytes initialization_vector = 4;
inline void AesCbcEncryptTest::clear_initialization_vector() {
  initialization_vector_.ClearToEmpty();
}
inline const std::string& AesCbcEncryptTest::initialization_vector() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCbcEncryptTest.initialization_vector)
  return _internal_initialization_vector();
}
inline void AesCbcEncryptTest::set_initialization_vector(const std::string& value) {
  _internal_set_initialization_vector(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCbcEncryptTest.initialization_vector)
}
inline std::string* AesCbcEncryptTest::mutable_initialization_vector() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.AesCbcEncryptTest.initialization_vector)
  return _internal_mutable_initialization_vector();
}
inline const std::string& AesCbcEncryptTest::_internal_initialization_vector() const {
  return initialization_vector_.Get();
}
inline void AesCbcEncryptTest::_internal_set_initialization_vector(const std::string& value) {
  
  initialization_vector_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AesCbcEncryptTest::set_initialization_vector(std::string&& value) {
  
  initialization_vector_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.AesCbcEncryptTest.initialization_vector)
}
inline void AesCbcEncryptTest::set_initialization_vector(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  initialization_vector_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.AesCbcEncryptTest.initialization_vector)
}
inline void AesCbcEncryptTest::set_initialization_vector(const void* value,
    size_t size) {
  
  initialization_vector_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.AesCbcEncryptTest.initialization_vector)
}
inline std::string* AesCbcEncryptTest::_internal_mutable_initialization_vector() {
  
  return initialization_vector_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AesCbcEncryptTest::release_initialization_vector() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.AesCbcEncryptTest.initialization_vector)
  return initialization_vector_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AesCbcEncryptTest::set_allocated_initialization_vector(std::string* initialization_vector) {
  if (initialization_vector != nullptr) {
    
  } else {
    
  }
  initialization_vector_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), initialization_vector,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.AesCbcEncryptTest.initialization_vector)
}

// bytes plain_text = 5;
inline void AesCbcEncryptTest::clear_plain_text() {
  plain_text_.ClearToEmpty();
}
inline const std::string& AesCbcEncryptTest::plain_text() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCbcEncryptTest.plain_text)
  return _internal_plain_text();
}
inline void AesCbcEncryptTest::set_plain_text(const std::string& value) {
  _internal_set_plain_text(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCbcEncryptTest.plain_text)
}
inline std::string* AesCbcEncryptTest::mutable_plain_text() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.AesCbcEncryptTest.plain_text)
  return _internal_mutable_plain_text();
}
inline const std::string& AesCbcEncryptTest::_internal_plain_text() const {
  return plain_text_.Get();
}
inline void AesCbcEncryptTest::_internal_set_plain_text(const std::string& value) {
  
  plain_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AesCbcEncryptTest::set_plain_text(std::string&& value) {
  
  plain_text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.AesCbcEncryptTest.plain_text)
}
inline void AesCbcEncryptTest::set_plain_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  plain_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.AesCbcEncryptTest.plain_text)
}
inline void AesCbcEncryptTest::set_plain_text(const void* value,
    size_t size) {
  
  plain_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.AesCbcEncryptTest.plain_text)
}
inline std::string* AesCbcEncryptTest::_internal_mutable_plain_text() {
  
  return plain_text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AesCbcEncryptTest::release_plain_text() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.AesCbcEncryptTest.plain_text)
  return plain_text_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AesCbcEncryptTest::set_allocated_plain_text(std::string* plain_text) {
  if (plain_text != nullptr) {
    
  } else {
    
  }
  plain_text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), plain_text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.AesCbcEncryptTest.plain_text)
}

// -------------------------------------------------------------------

// AesCbcEncryptTestResult

// .nugget.app.protoapi.DcryptError result_code = 1;
inline void AesCbcEncryptTestResult::clear_result_code() {
  result_code_ = 0;
}
inline ::nugget::app::protoapi::DcryptError AesCbcEncryptTestResult::_internal_result_code() const {
  return static_cast< ::nugget::app::protoapi::DcryptError >(result_code_);
}
inline ::nugget::app::protoapi::DcryptError AesCbcEncryptTestResult::result_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCbcEncryptTestResult.result_code)
  return _internal_result_code();
}
inline void AesCbcEncryptTestResult::_internal_set_result_code(::nugget::app::protoapi::DcryptError value) {
  
  result_code_ = value;
}
inline void AesCbcEncryptTestResult::set_result_code(::nugget::app::protoapi::DcryptError value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCbcEncryptTestResult.result_code)
}

// bytes initialization_vector = 2;
inline void AesCbcEncryptTestResult::clear_initialization_vector() {
  initialization_vector_.ClearToEmpty();
}
inline const std::string& AesCbcEncryptTestResult::initialization_vector() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCbcEncryptTestResult.initialization_vector)
  return _internal_initialization_vector();
}
inline void AesCbcEncryptTestResult::set_initialization_vector(const std::string& value) {
  _internal_set_initialization_vector(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCbcEncryptTestResult.initialization_vector)
}
inline std::string* AesCbcEncryptTestResult::mutable_initialization_vector() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.AesCbcEncryptTestResult.initialization_vector)
  return _internal_mutable_initialization_vector();
}
inline const std::string& AesCbcEncryptTestResult::_internal_initialization_vector() const {
  return initialization_vector_.Get();
}
inline void AesCbcEncryptTestResult::_internal_set_initialization_vector(const std::string& value) {
  
  initialization_vector_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AesCbcEncryptTestResult::set_initialization_vector(std::string&& value) {
  
  initialization_vector_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.AesCbcEncryptTestResult.initialization_vector)
}
inline void AesCbcEncryptTestResult::set_initialization_vector(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  initialization_vector_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.AesCbcEncryptTestResult.initialization_vector)
}
inline void AesCbcEncryptTestResult::set_initialization_vector(const void* value,
    size_t size) {
  
  initialization_vector_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.AesCbcEncryptTestResult.initialization_vector)
}
inline std::string* AesCbcEncryptTestResult::_internal_mutable_initialization_vector() {
  
  return initialization_vector_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AesCbcEncryptTestResult::release_initialization_vector() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.AesCbcEncryptTestResult.initialization_vector)
  return initialization_vector_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AesCbcEncryptTestResult::set_allocated_initialization_vector(std::string* initialization_vector) {
  if (initialization_vector != nullptr) {
    
  } else {
    
  }
  initialization_vector_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), initialization_vector,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.AesCbcEncryptTestResult.initialization_vector)
}

// bytes cipher_text = 3;
inline void AesCbcEncryptTestResult::clear_cipher_text() {
  cipher_text_.ClearToEmpty();
}
inline const std::string& AesCbcEncryptTestResult::cipher_text() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCbcEncryptTestResult.cipher_text)
  return _internal_cipher_text();
}
inline void AesCbcEncryptTestResult::set_cipher_text(const std::string& value) {
  _internal_set_cipher_text(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCbcEncryptTestResult.cipher_text)
}
inline std::string* AesCbcEncryptTestResult::mutable_cipher_text() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.AesCbcEncryptTestResult.cipher_text)
  return _internal_mutable_cipher_text();
}
inline const std::string& AesCbcEncryptTestResult::_internal_cipher_text() const {
  return cipher_text_.Get();
}
inline void AesCbcEncryptTestResult::_internal_set_cipher_text(const std::string& value) {
  
  cipher_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AesCbcEncryptTestResult::set_cipher_text(std::string&& value) {
  
  cipher_text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.AesCbcEncryptTestResult.cipher_text)
}
inline void AesCbcEncryptTestResult::set_cipher_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cipher_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.AesCbcEncryptTestResult.cipher_text)
}
inline void AesCbcEncryptTestResult::set_cipher_text(const void* value,
    size_t size) {
  
  cipher_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.AesCbcEncryptTestResult.cipher_text)
}
inline std::string* AesCbcEncryptTestResult::_internal_mutable_cipher_text() {
  
  return cipher_text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AesCbcEncryptTestResult::release_cipher_text() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.AesCbcEncryptTestResult.cipher_text)
  return cipher_text_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AesCbcEncryptTestResult::set_allocated_cipher_text(std::string* cipher_text) {
  if (cipher_text != nullptr) {
    
  } else {
    
  }
  cipher_text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cipher_text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.AesCbcEncryptTestResult.cipher_text)
}

// -------------------------------------------------------------------

// AesGcmEncryptTest

// bytes key = 1;
inline void AesGcmEncryptTest::clear_key() {
  key_.ClearToEmpty();
}
inline const std::string& AesGcmEncryptTest::key() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesGcmEncryptTest.key)
  return _internal_key();
}
inline void AesGcmEncryptTest::set_key(const std::string& value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesGcmEncryptTest.key)
}
inline std::string* AesGcmEncryptTest::mutable_key() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.AesGcmEncryptTest.key)
  return _internal_mutable_key();
}
inline const std::string& AesGcmEncryptTest::_internal_key() const {
  return key_.Get();
}
inline void AesGcmEncryptTest::_internal_set_key(const std::string& value) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AesGcmEncryptTest::set_key(std::string&& value) {
  
  key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.AesGcmEncryptTest.key)
}
inline void AesGcmEncryptTest::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.AesGcmEncryptTest.key)
}
inline void AesGcmEncryptTest::set_key(const void* value,
    size_t size) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.AesGcmEncryptTest.key)
}
inline std::string* AesGcmEncryptTest::_internal_mutable_key() {
  
  return key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AesGcmEncryptTest::release_key() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.AesGcmEncryptTest.key)
  return key_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AesGcmEncryptTest::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.AesGcmEncryptTest.key)
}

// bytes iv = 2;
inline void AesGcmEncryptTest::clear_iv() {
  iv_.ClearToEmpty();
}
inline const std::string& AesGcmEncryptTest::iv() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesGcmEncryptTest.iv)
  return _internal_iv();
}
inline void AesGcmEncryptTest::set_iv(const std::string& value) {
  _internal_set_iv(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesGcmEncryptTest.iv)
}
inline std::string* AesGcmEncryptTest::mutable_iv() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.AesGcmEncryptTest.iv)
  return _internal_mutable_iv();
}
inline const std::string& AesGcmEncryptTest::_internal_iv() const {
  return iv_.Get();
}
inline void AesGcmEncryptTest::_internal_set_iv(const std::string& value) {
  
  iv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AesGcmEncryptTest::set_iv(std::string&& value) {
  
  iv_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.AesGcmEncryptTest.iv)
}
inline void AesGcmEncryptTest::set_iv(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  iv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.AesGcmEncryptTest.iv)
}
inline void AesGcmEncryptTest::set_iv(const void* value,
    size_t size) {
  
  iv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.AesGcmEncryptTest.iv)
}
inline std::string* AesGcmEncryptTest::_internal_mutable_iv() {
  
  return iv_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AesGcmEncryptTest::release_iv() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.AesGcmEncryptTest.iv)
  return iv_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AesGcmEncryptTest::set_allocated_iv(std::string* iv) {
  if (iv != nullptr) {
    
  } else {
    
  }
  iv_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), iv,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.AesGcmEncryptTest.iv)
}

// bytes plain_text = 3;
inline void AesGcmEncryptTest::clear_plain_text() {
  plain_text_.ClearToEmpty();
}
inline const std::string& AesGcmEncryptTest::plain_text() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesGcmEncryptTest.plain_text)
  return _internal_plain_text();
}
inline void AesGcmEncryptTest::set_plain_text(const std::string& value) {
  _internal_set_plain_text(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesGcmEncryptTest.plain_text)
}
inline std::string* AesGcmEncryptTest::mutable_plain_text() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.AesGcmEncryptTest.plain_text)
  return _internal_mutable_plain_text();
}
inline const std::string& AesGcmEncryptTest::_internal_plain_text() const {
  return plain_text_.Get();
}
inline void AesGcmEncryptTest::_internal_set_plain_text(const std::string& value) {
  
  plain_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AesGcmEncryptTest::set_plain_text(std::string&& value) {
  
  plain_text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.AesGcmEncryptTest.plain_text)
}
inline void AesGcmEncryptTest::set_plain_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  plain_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.AesGcmEncryptTest.plain_text)
}
inline void AesGcmEncryptTest::set_plain_text(const void* value,
    size_t size) {
  
  plain_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.AesGcmEncryptTest.plain_text)
}
inline std::string* AesGcmEncryptTest::_internal_mutable_plain_text() {
  
  return plain_text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AesGcmEncryptTest::release_plain_text() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.AesGcmEncryptTest.plain_text)
  return plain_text_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AesGcmEncryptTest::set_allocated_plain_text(std::string* plain_text) {
  if (plain_text != nullptr) {
    
  } else {
    
  }
  plain_text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), plain_text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.AesGcmEncryptTest.plain_text)
}

// bytes aad = 4;
inline void AesGcmEncryptTest::clear_aad() {
  aad_.ClearToEmpty();
}
inline const std::string& AesGcmEncryptTest::aad() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesGcmEncryptTest.aad)
  return _internal_aad();
}
inline void AesGcmEncryptTest::set_aad(const std::string& value) {
  _internal_set_aad(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesGcmEncryptTest.aad)
}
inline std::string* AesGcmEncryptTest::mutable_aad() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.AesGcmEncryptTest.aad)
  return _internal_mutable_aad();
}
inline const std::string& AesGcmEncryptTest::_internal_aad() const {
  return aad_.Get();
}
inline void AesGcmEncryptTest::_internal_set_aad(const std::string& value) {
  
  aad_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AesGcmEncryptTest::set_aad(std::string&& value) {
  
  aad_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.AesGcmEncryptTest.aad)
}
inline void AesGcmEncryptTest::set_aad(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  aad_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.AesGcmEncryptTest.aad)
}
inline void AesGcmEncryptTest::set_aad(const void* value,
    size_t size) {
  
  aad_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.AesGcmEncryptTest.aad)
}
inline std::string* AesGcmEncryptTest::_internal_mutable_aad() {
  
  return aad_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AesGcmEncryptTest::release_aad() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.AesGcmEncryptTest.aad)
  return aad_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AesGcmEncryptTest::set_allocated_aad(std::string* aad) {
  if (aad != nullptr) {
    
  } else {
    
  }
  aad_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), aad,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.AesGcmEncryptTest.aad)
}

// uint32 tag_len = 5;
inline void AesGcmEncryptTest::clear_tag_len() {
  tag_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AesGcmEncryptTest::_internal_tag_len() const {
  return tag_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AesGcmEncryptTest::tag_len() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesGcmEncryptTest.tag_len)
  return _internal_tag_len();
}
inline void AesGcmEncryptTest::_internal_set_tag_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tag_len_ = value;
}
inline void AesGcmEncryptTest::set_tag_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tag_len(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesGcmEncryptTest.tag_len)
}

// -------------------------------------------------------------------

// AesGcmEncryptTestResult

// .nugget.app.protoapi.DcryptError result_code = 1;
inline void AesGcmEncryptTestResult::clear_result_code() {
  result_code_ = 0;
}
inline ::nugget::app::protoapi::DcryptError AesGcmEncryptTestResult::_internal_result_code() const {
  return static_cast< ::nugget::app::protoapi::DcryptError >(result_code_);
}
inline ::nugget::app::protoapi::DcryptError AesGcmEncryptTestResult::result_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesGcmEncryptTestResult.result_code)
  return _internal_result_code();
}
inline void AesGcmEncryptTestResult::_internal_set_result_code(::nugget::app::protoapi::DcryptError value) {
  
  result_code_ = value;
}
inline void AesGcmEncryptTestResult::set_result_code(::nugget::app::protoapi::DcryptError value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesGcmEncryptTestResult.result_code)
}

// bytes cipher_text = 2;
inline void AesGcmEncryptTestResult::clear_cipher_text() {
  cipher_text_.ClearToEmpty();
}
inline const std::string& AesGcmEncryptTestResult::cipher_text() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesGcmEncryptTestResult.cipher_text)
  return _internal_cipher_text();
}
inline void AesGcmEncryptTestResult::set_cipher_text(const std::string& value) {
  _internal_set_cipher_text(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesGcmEncryptTestResult.cipher_text)
}
inline std::string* AesGcmEncryptTestResult::mutable_cipher_text() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.AesGcmEncryptTestResult.cipher_text)
  return _internal_mutable_cipher_text();
}
inline const std::string& AesGcmEncryptTestResult::_internal_cipher_text() const {
  return cipher_text_.Get();
}
inline void AesGcmEncryptTestResult::_internal_set_cipher_text(const std::string& value) {
  
  cipher_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AesGcmEncryptTestResult::set_cipher_text(std::string&& value) {
  
  cipher_text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.AesGcmEncryptTestResult.cipher_text)
}
inline void AesGcmEncryptTestResult::set_cipher_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cipher_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.AesGcmEncryptTestResult.cipher_text)
}
inline void AesGcmEncryptTestResult::set_cipher_text(const void* value,
    size_t size) {
  
  cipher_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.AesGcmEncryptTestResult.cipher_text)
}
inline std::string* AesGcmEncryptTestResult::_internal_mutable_cipher_text() {
  
  return cipher_text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AesGcmEncryptTestResult::release_cipher_text() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.AesGcmEncryptTestResult.cipher_text)
  return cipher_text_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AesGcmEncryptTestResult::set_allocated_cipher_text(std::string* cipher_text) {
  if (cipher_text != nullptr) {
    
  } else {
    
  }
  cipher_text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cipher_text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.AesGcmEncryptTestResult.cipher_text)
}

// bytes tag = 3;
inline void AesGcmEncryptTestResult::clear_tag() {
  tag_.ClearToEmpty();
}
inline const std::string& AesGcmEncryptTestResult::tag() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesGcmEncryptTestResult.tag)
  return _internal_tag();
}
inline void AesGcmEncryptTestResult::set_tag(const std::string& value) {
  _internal_set_tag(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesGcmEncryptTestResult.tag)
}
inline std::string* AesGcmEncryptTestResult::mutable_tag() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.AesGcmEncryptTestResult.tag)
  return _internal_mutable_tag();
}
inline const std::string& AesGcmEncryptTestResult::_internal_tag() const {
  return tag_.Get();
}
inline void AesGcmEncryptTestResult::_internal_set_tag(const std::string& value) {
  
  tag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AesGcmEncryptTestResult::set_tag(std::string&& value) {
  
  tag_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.AesGcmEncryptTestResult.tag)
}
inline void AesGcmEncryptTestResult::set_tag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.AesGcmEncryptTestResult.tag)
}
inline void AesGcmEncryptTestResult::set_tag(const void* value,
    size_t size) {
  
  tag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.AesGcmEncryptTestResult.tag)
}
inline std::string* AesGcmEncryptTestResult::_internal_mutable_tag() {
  
  return tag_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AesGcmEncryptTestResult::release_tag() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.AesGcmEncryptTestResult.tag)
  return tag_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AesGcmEncryptTestResult::set_allocated_tag(std::string* tag) {
  if (tag != nullptr) {
    
  } else {
    
  }
  tag_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tag,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.AesGcmEncryptTestResult.tag)
}

// -------------------------------------------------------------------

// AesCavpTest

// uint32 count = 1;
inline void AesCavpTest::clear_count() {
  count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AesCavpTest::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AesCavpTest::count() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCavpTest.count)
  return _internal_count();
}
inline void AesCavpTest::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  count_ = value;
}
inline void AesCavpTest::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCavpTest.count)
}

// uint32 key_size = 3;
inline void AesCavpTest::clear_key_size() {
  key_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AesCavpTest::_internal_key_size() const {
  return key_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AesCavpTest::key_size() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCavpTest.key_size)
  return _internal_key_size();
}
inline void AesCavpTest::_internal_set_key_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  key_size_ = value;
}
inline void AesCavpTest::set_key_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_key_size(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCavpTest.key_size)
}

// .nugget.app.protoapi.CavpEncryptMode encrypt_mode = 4;
inline void AesCavpTest::clear_encrypt_mode() {
  encrypt_mode_ = 0;
}
inline ::nugget::app::protoapi::CavpEncryptMode AesCavpTest::_internal_encrypt_mode() const {
  return static_cast< ::nugget::app::protoapi::CavpEncryptMode >(encrypt_mode_);
}
inline ::nugget::app::protoapi::CavpEncryptMode AesCavpTest::encrypt_mode() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCavpTest.encrypt_mode)
  return _internal_encrypt_mode();
}
inline void AesCavpTest::_internal_set_encrypt_mode(::nugget::app::protoapi::CavpEncryptMode value) {
  
  encrypt_mode_ = value;
}
inline void AesCavpTest::set_encrypt_mode(::nugget::app::protoapi::CavpEncryptMode value) {
  _internal_set_encrypt_mode(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCavpTest.encrypt_mode)
}

// bytes key = 5;
inline void AesCavpTest::clear_key() {
  key_.ClearToEmpty();
}
inline const std::string& AesCavpTest::key() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCavpTest.key)
  return _internal_key();
}
inline void AesCavpTest::set_key(const std::string& value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCavpTest.key)
}
inline std::string* AesCavpTest::mutable_key() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.AesCavpTest.key)
  return _internal_mutable_key();
}
inline const std::string& AesCavpTest::_internal_key() const {
  return key_.Get();
}
inline void AesCavpTest::_internal_set_key(const std::string& value) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AesCavpTest::set_key(std::string&& value) {
  
  key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.AesCavpTest.key)
}
inline void AesCavpTest::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.AesCavpTest.key)
}
inline void AesCavpTest::set_key(const void* value,
    size_t size) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.AesCavpTest.key)
}
inline std::string* AesCavpTest::_internal_mutable_key() {
  
  return key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AesCavpTest::release_key() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.AesCavpTest.key)
  return key_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AesCavpTest::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.AesCavpTest.key)
}

// bytes iv = 6;
inline void AesCavpTest::clear_iv() {
  iv_.ClearToEmpty();
}
inline const std::string& AesCavpTest::iv() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCavpTest.iv)
  return _internal_iv();
}
inline void AesCavpTest::set_iv(const std::string& value) {
  _internal_set_iv(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCavpTest.iv)
}
inline std::string* AesCavpTest::mutable_iv() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.AesCavpTest.iv)
  return _internal_mutable_iv();
}
inline const std::string& AesCavpTest::_internal_iv() const {
  return iv_.Get();
}
inline void AesCavpTest::_internal_set_iv(const std::string& value) {
  
  iv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AesCavpTest::set_iv(std::string&& value) {
  
  iv_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.AesCavpTest.iv)
}
inline void AesCavpTest::set_iv(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  iv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.AesCavpTest.iv)
}
inline void AesCavpTest::set_iv(const void* value,
    size_t size) {
  
  iv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.AesCavpTest.iv)
}
inline std::string* AesCavpTest::_internal_mutable_iv() {
  
  return iv_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AesCavpTest::release_iv() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.AesCavpTest.iv)
  return iv_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AesCavpTest::set_allocated_iv(std::string* iv) {
  if (iv != nullptr) {
    
  } else {
    
  }
  iv_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), iv,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.AesCavpTest.iv)
}

// bytes text = 7;
inline void AesCavpTest::clear_text() {
  text_.ClearToEmpty();
}
inline const std::string& AesCavpTest::text() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCavpTest.text)
  return _internal_text();
}
inline void AesCavpTest::set_text(const std::string& value) {
  _internal_set_text(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCavpTest.text)
}
inline std::string* AesCavpTest::mutable_text() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.AesCavpTest.text)
  return _internal_mutable_text();
}
inline const std::string& AesCavpTest::_internal_text() const {
  return text_.Get();
}
inline void AesCavpTest::_internal_set_text(const std::string& value) {
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AesCavpTest::set_text(std::string&& value) {
  
  text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.AesCavpTest.text)
}
inline void AesCavpTest::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.AesCavpTest.text)
}
inline void AesCavpTest::set_text(const void* value,
    size_t size) {
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.AesCavpTest.text)
}
inline std::string* AesCavpTest::_internal_mutable_text() {
  
  return text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AesCavpTest::release_text() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.AesCavpTest.text)
  return text_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AesCavpTest::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    
  } else {
    
  }
  text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.AesCavpTest.text)
}

// -------------------------------------------------------------------

// AesCavpTestResult

// .nugget.app.protoapi.DcryptError result_code = 1;
inline void AesCavpTestResult::clear_result_code() {
  result_code_ = 0;
}
inline ::nugget::app::protoapi::DcryptError AesCavpTestResult::_internal_result_code() const {
  return static_cast< ::nugget::app::protoapi::DcryptError >(result_code_);
}
inline ::nugget::app::protoapi::DcryptError AesCavpTestResult::result_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCavpTestResult.result_code)
  return _internal_result_code();
}
inline void AesCavpTestResult::_internal_set_result_code(::nugget::app::protoapi::DcryptError value) {
  
  result_code_ = value;
}
inline void AesCavpTestResult::set_result_code(::nugget::app::protoapi::DcryptError value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCavpTestResult.result_code)
}

// bytes text = 2;
inline void AesCavpTestResult::clear_text() {
  text_.ClearToEmpty();
}
inline const std::string& AesCavpTestResult::text() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCavpTestResult.text)
  return _internal_text();
}
inline void AesCavpTestResult::set_text(const std::string& value) {
  _internal_set_text(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCavpTestResult.text)
}
inline std::string* AesCavpTestResult::mutable_text() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.AesCavpTestResult.text)
  return _internal_mutable_text();
}
inline const std::string& AesCavpTestResult::_internal_text() const {
  return text_.Get();
}
inline void AesCavpTestResult::_internal_set_text(const std::string& value) {
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AesCavpTestResult::set_text(std::string&& value) {
  
  text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.AesCavpTestResult.text)
}
inline void AesCavpTestResult::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.AesCavpTestResult.text)
}
inline void AesCavpTestResult::set_text(const void* value,
    size_t size) {
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.AesCavpTestResult.text)
}
inline std::string* AesCavpTestResult::_internal_mutable_text() {
  
  return text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AesCavpTestResult::release_text() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.AesCavpTestResult.text)
  return text_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AesCavpTestResult::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    
  } else {
    
  }
  text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.AesCavpTestResult.text)
}

// -------------------------------------------------------------------

// CavpAesGcmTest

// uint32 count = 1;
inline void CavpAesGcmTest::clear_count() {
  count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpAesGcmTest::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpAesGcmTest::count() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpAesGcmTest.count)
  return _internal_count();
}
inline void CavpAesGcmTest::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  count_ = value;
}
inline void CavpAesGcmTest::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpAesGcmTest.count)
}

// uint32 key_len = 2;
inline void CavpAesGcmTest::clear_key_len() {
  key_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpAesGcmTest::_internal_key_len() const {
  return key_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpAesGcmTest::key_len() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpAesGcmTest.key_len)
  return _internal_key_len();
}
inline void CavpAesGcmTest::_internal_set_key_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  key_len_ = value;
}
inline void CavpAesGcmTest::set_key_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_key_len(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpAesGcmTest.key_len)
}

// uint32 tag_len = 3;
inline void CavpAesGcmTest::clear_tag_len() {
  tag_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpAesGcmTest::_internal_tag_len() const {
  return tag_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpAesGcmTest::tag_len() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpAesGcmTest.tag_len)
  return _internal_tag_len();
}
inline void CavpAesGcmTest::_internal_set_tag_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tag_len_ = value;
}
inline void CavpAesGcmTest::set_tag_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tag_len(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpAesGcmTest.tag_len)
}

// .nugget.app.protoapi.CavpEncryptMode encrypt_mode = 4;
inline void CavpAesGcmTest::clear_encrypt_mode() {
  encrypt_mode_ = 0;
}
inline ::nugget::app::protoapi::CavpEncryptMode CavpAesGcmTest::_internal_encrypt_mode() const {
  return static_cast< ::nugget::app::protoapi::CavpEncryptMode >(encrypt_mode_);
}
inline ::nugget::app::protoapi::CavpEncryptMode CavpAesGcmTest::encrypt_mode() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpAesGcmTest.encrypt_mode)
  return _internal_encrypt_mode();
}
inline void CavpAesGcmTest::_internal_set_encrypt_mode(::nugget::app::protoapi::CavpEncryptMode value) {
  
  encrypt_mode_ = value;
}
inline void CavpAesGcmTest::set_encrypt_mode(::nugget::app::protoapi::CavpEncryptMode value) {
  _internal_set_encrypt_mode(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpAesGcmTest.encrypt_mode)
}

// bytes key = 5;
inline void CavpAesGcmTest::clear_key() {
  key_.ClearToEmpty();
}
inline const std::string& CavpAesGcmTest::key() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpAesGcmTest.key)
  return _internal_key();
}
inline void CavpAesGcmTest::set_key(const std::string& value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpAesGcmTest.key)
}
inline std::string* CavpAesGcmTest::mutable_key() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpAesGcmTest.key)
  return _internal_mutable_key();
}
inline const std::string& CavpAesGcmTest::_internal_key() const {
  return key_.Get();
}
inline void CavpAesGcmTest::_internal_set_key(const std::string& value) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpAesGcmTest::set_key(std::string&& value) {
  
  key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpAesGcmTest.key)
}
inline void CavpAesGcmTest::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpAesGcmTest.key)
}
inline void CavpAesGcmTest::set_key(const void* value,
    size_t size) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpAesGcmTest.key)
}
inline std::string* CavpAesGcmTest::_internal_mutable_key() {
  
  return key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpAesGcmTest::release_key() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpAesGcmTest.key)
  return key_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpAesGcmTest::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpAesGcmTest.key)
}

// bytes iv = 6;
inline void CavpAesGcmTest::clear_iv() {
  iv_.ClearToEmpty();
}
inline const std::string& CavpAesGcmTest::iv() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpAesGcmTest.iv)
  return _internal_iv();
}
inline void CavpAesGcmTest::set_iv(const std::string& value) {
  _internal_set_iv(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpAesGcmTest.iv)
}
inline std::string* CavpAesGcmTest::mutable_iv() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpAesGcmTest.iv)
  return _internal_mutable_iv();
}
inline const std::string& CavpAesGcmTest::_internal_iv() const {
  return iv_.Get();
}
inline void CavpAesGcmTest::_internal_set_iv(const std::string& value) {
  
  iv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpAesGcmTest::set_iv(std::string&& value) {
  
  iv_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpAesGcmTest.iv)
}
inline void CavpAesGcmTest::set_iv(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  iv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpAesGcmTest.iv)
}
inline void CavpAesGcmTest::set_iv(const void* value,
    size_t size) {
  
  iv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpAesGcmTest.iv)
}
inline std::string* CavpAesGcmTest::_internal_mutable_iv() {
  
  return iv_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpAesGcmTest::release_iv() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpAesGcmTest.iv)
  return iv_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpAesGcmTest::set_allocated_iv(std::string* iv) {
  if (iv != nullptr) {
    
  } else {
    
  }
  iv_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), iv,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpAesGcmTest.iv)
}

// bytes text = 7;
inline void CavpAesGcmTest::clear_text() {
  text_.ClearToEmpty();
}
inline const std::string& CavpAesGcmTest::text() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpAesGcmTest.text)
  return _internal_text();
}
inline void CavpAesGcmTest::set_text(const std::string& value) {
  _internal_set_text(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpAesGcmTest.text)
}
inline std::string* CavpAesGcmTest::mutable_text() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpAesGcmTest.text)
  return _internal_mutable_text();
}
inline const std::string& CavpAesGcmTest::_internal_text() const {
  return text_.Get();
}
inline void CavpAesGcmTest::_internal_set_text(const std::string& value) {
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpAesGcmTest::set_text(std::string&& value) {
  
  text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpAesGcmTest.text)
}
inline void CavpAesGcmTest::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpAesGcmTest.text)
}
inline void CavpAesGcmTest::set_text(const void* value,
    size_t size) {
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpAesGcmTest.text)
}
inline std::string* CavpAesGcmTest::_internal_mutable_text() {
  
  return text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpAesGcmTest::release_text() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpAesGcmTest.text)
  return text_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpAesGcmTest::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    
  } else {
    
  }
  text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpAesGcmTest.text)
}

// bytes aad = 8;
inline void CavpAesGcmTest::clear_aad() {
  aad_.ClearToEmpty();
}
inline const std::string& CavpAesGcmTest::aad() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpAesGcmTest.aad)
  return _internal_aad();
}
inline void CavpAesGcmTest::set_aad(const std::string& value) {
  _internal_set_aad(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpAesGcmTest.aad)
}
inline std::string* CavpAesGcmTest::mutable_aad() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpAesGcmTest.aad)
  return _internal_mutable_aad();
}
inline const std::string& CavpAesGcmTest::_internal_aad() const {
  return aad_.Get();
}
inline void CavpAesGcmTest::_internal_set_aad(const std::string& value) {
  
  aad_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpAesGcmTest::set_aad(std::string&& value) {
  
  aad_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpAesGcmTest.aad)
}
inline void CavpAesGcmTest::set_aad(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  aad_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpAesGcmTest.aad)
}
inline void CavpAesGcmTest::set_aad(const void* value,
    size_t size) {
  
  aad_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpAesGcmTest.aad)
}
inline std::string* CavpAesGcmTest::_internal_mutable_aad() {
  
  return aad_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpAesGcmTest::release_aad() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpAesGcmTest.aad)
  return aad_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpAesGcmTest::set_allocated_aad(std::string* aad) {
  if (aad != nullptr) {
    
  } else {
    
  }
  aad_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), aad,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpAesGcmTest.aad)
}

// bytes tag = 9;
inline void CavpAesGcmTest::clear_tag() {
  tag_.ClearToEmpty();
}
inline const std::string& CavpAesGcmTest::tag() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpAesGcmTest.tag)
  return _internal_tag();
}
inline void CavpAesGcmTest::set_tag(const std::string& value) {
  _internal_set_tag(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpAesGcmTest.tag)
}
inline std::string* CavpAesGcmTest::mutable_tag() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpAesGcmTest.tag)
  return _internal_mutable_tag();
}
inline const std::string& CavpAesGcmTest::_internal_tag() const {
  return tag_.Get();
}
inline void CavpAesGcmTest::_internal_set_tag(const std::string& value) {
  
  tag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpAesGcmTest::set_tag(std::string&& value) {
  
  tag_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpAesGcmTest.tag)
}
inline void CavpAesGcmTest::set_tag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpAesGcmTest.tag)
}
inline void CavpAesGcmTest::set_tag(const void* value,
    size_t size) {
  
  tag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpAesGcmTest.tag)
}
inline std::string* CavpAesGcmTest::_internal_mutable_tag() {
  
  return tag_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpAesGcmTest::release_tag() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpAesGcmTest.tag)
  return tag_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpAesGcmTest::set_allocated_tag(std::string* tag) {
  if (tag != nullptr) {
    
  } else {
    
  }
  tag_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tag,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpAesGcmTest.tag)
}

// -------------------------------------------------------------------

// CavpAesGcmTestResult

// .nugget.app.protoapi.DcryptError result_code = 1;
inline void CavpAesGcmTestResult::clear_result_code() {
  result_code_ = 0;
}
inline ::nugget::app::protoapi::DcryptError CavpAesGcmTestResult::_internal_result_code() const {
  return static_cast< ::nugget::app::protoapi::DcryptError >(result_code_);
}
inline ::nugget::app::protoapi::DcryptError CavpAesGcmTestResult::result_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpAesGcmTestResult.result_code)
  return _internal_result_code();
}
inline void CavpAesGcmTestResult::_internal_set_result_code(::nugget::app::protoapi::DcryptError value) {
  
  result_code_ = value;
}
inline void CavpAesGcmTestResult::set_result_code(::nugget::app::protoapi::DcryptError value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpAesGcmTestResult.result_code)
}

// bytes text = 2;
inline void CavpAesGcmTestResult::clear_text() {
  text_.ClearToEmpty();
}
inline const std::string& CavpAesGcmTestResult::text() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpAesGcmTestResult.text)
  return _internal_text();
}
inline void CavpAesGcmTestResult::set_text(const std::string& value) {
  _internal_set_text(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpAesGcmTestResult.text)
}
inline std::string* CavpAesGcmTestResult::mutable_text() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpAesGcmTestResult.text)
  return _internal_mutable_text();
}
inline const std::string& CavpAesGcmTestResult::_internal_text() const {
  return text_.Get();
}
inline void CavpAesGcmTestResult::_internal_set_text(const std::string& value) {
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpAesGcmTestResult::set_text(std::string&& value) {
  
  text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpAesGcmTestResult.text)
}
inline void CavpAesGcmTestResult::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpAesGcmTestResult.text)
}
inline void CavpAesGcmTestResult::set_text(const void* value,
    size_t size) {
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpAesGcmTestResult.text)
}
inline std::string* CavpAesGcmTestResult::_internal_mutable_text() {
  
  return text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpAesGcmTestResult::release_text() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpAesGcmTestResult.text)
  return text_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpAesGcmTestResult::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    
  } else {
    
  }
  text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpAesGcmTestResult.text)
}

// bytes tag = 3;
inline void CavpAesGcmTestResult::clear_tag() {
  tag_.ClearToEmpty();
}
inline const std::string& CavpAesGcmTestResult::tag() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpAesGcmTestResult.tag)
  return _internal_tag();
}
inline void CavpAesGcmTestResult::set_tag(const std::string& value) {
  _internal_set_tag(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpAesGcmTestResult.tag)
}
inline std::string* CavpAesGcmTestResult::mutable_tag() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpAesGcmTestResult.tag)
  return _internal_mutable_tag();
}
inline const std::string& CavpAesGcmTestResult::_internal_tag() const {
  return tag_.Get();
}
inline void CavpAesGcmTestResult::_internal_set_tag(const std::string& value) {
  
  tag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpAesGcmTestResult::set_tag(std::string&& value) {
  
  tag_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpAesGcmTestResult.tag)
}
inline void CavpAesGcmTestResult::set_tag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpAesGcmTestResult.tag)
}
inline void CavpAesGcmTestResult::set_tag(const void* value,
    size_t size) {
  
  tag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpAesGcmTestResult.tag)
}
inline std::string* CavpAesGcmTestResult::_internal_mutable_tag() {
  
  return tag_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpAesGcmTestResult::release_tag() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpAesGcmTestResult.tag)
  return tag_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpAesGcmTestResult::set_allocated_tag(std::string* tag) {
  if (tag != nullptr) {
    
  } else {
    
  }
  tag_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tag,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpAesGcmTestResult.tag)
}

// uint32 success = 4;
inline void CavpAesGcmTestResult::clear_success() {
  success_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpAesGcmTestResult::_internal_success() const {
  return success_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpAesGcmTestResult::success() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpAesGcmTestResult.success)
  return _internal_success();
}
inline void CavpAesGcmTestResult::_internal_set_success(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  success_ = value;
}
inline void CavpAesGcmTestResult::set_success(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpAesGcmTestResult.success)
}

// -------------------------------------------------------------------

// CavpHmacTest

// uint32 key_len = 1;
inline void CavpHmacTest::clear_key_len() {
  key_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpHmacTest::_internal_key_len() const {
  return key_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpHmacTest::key_len() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpHmacTest.key_len)
  return _internal_key_len();
}
inline void CavpHmacTest::_internal_set_key_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  key_len_ = value;
}
inline void CavpHmacTest::set_key_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_key_len(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpHmacTest.key_len)
}

// uint32 text_len = 2;
inline void CavpHmacTest::clear_text_len() {
  text_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpHmacTest::_internal_text_len() const {
  return text_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpHmacTest::text_len() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpHmacTest.text_len)
  return _internal_text_len();
}
inline void CavpHmacTest::_internal_set_text_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  text_len_ = value;
}
inline void CavpHmacTest::set_text_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_text_len(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpHmacTest.text_len)
}

// .nugget.app.protoapi.CavpShaAlgorithm algo = 3;
inline void CavpHmacTest::clear_algo() {
  algo_ = 0;
}
inline ::nugget::app::protoapi::CavpShaAlgorithm CavpHmacTest::_internal_algo() const {
  return static_cast< ::nugget::app::protoapi::CavpShaAlgorithm >(algo_);
}
inline ::nugget::app::protoapi::CavpShaAlgorithm CavpHmacTest::algo() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpHmacTest.algo)
  return _internal_algo();
}
inline void CavpHmacTest::_internal_set_algo(::nugget::app::protoapi::CavpShaAlgorithm value) {
  
  algo_ = value;
}
inline void CavpHmacTest::set_algo(::nugget::app::protoapi::CavpShaAlgorithm value) {
  _internal_set_algo(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpHmacTest.algo)
}

// bytes key = 4;
inline void CavpHmacTest::clear_key() {
  key_.ClearToEmpty();
}
inline const std::string& CavpHmacTest::key() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpHmacTest.key)
  return _internal_key();
}
inline void CavpHmacTest::set_key(const std::string& value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpHmacTest.key)
}
inline std::string* CavpHmacTest::mutable_key() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpHmacTest.key)
  return _internal_mutable_key();
}
inline const std::string& CavpHmacTest::_internal_key() const {
  return key_.Get();
}
inline void CavpHmacTest::_internal_set_key(const std::string& value) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpHmacTest::set_key(std::string&& value) {
  
  key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpHmacTest.key)
}
inline void CavpHmacTest::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpHmacTest.key)
}
inline void CavpHmacTest::set_key(const void* value,
    size_t size) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpHmacTest.key)
}
inline std::string* CavpHmacTest::_internal_mutable_key() {
  
  return key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpHmacTest::release_key() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpHmacTest.key)
  return key_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpHmacTest::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpHmacTest.key)
}

// bytes msg = 5;
inline void CavpHmacTest::clear_msg() {
  msg_.ClearToEmpty();
}
inline const std::string& CavpHmacTest::msg() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpHmacTest.msg)
  return _internal_msg();
}
inline void CavpHmacTest::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpHmacTest.msg)
}
inline std::string* CavpHmacTest::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpHmacTest.msg)
  return _internal_mutable_msg();
}
inline const std::string& CavpHmacTest::_internal_msg() const {
  return msg_.Get();
}
inline void CavpHmacTest::_internal_set_msg(const std::string& value) {
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpHmacTest::set_msg(std::string&& value) {
  
  msg_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpHmacTest.msg)
}
inline void CavpHmacTest::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpHmacTest.msg)
}
inline void CavpHmacTest::set_msg(const void* value,
    size_t size) {
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpHmacTest.msg)
}
inline std::string* CavpHmacTest::_internal_mutable_msg() {
  
  return msg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpHmacTest::release_msg() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpHmacTest.msg)
  return msg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpHmacTest::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpHmacTest.msg)
}

// -------------------------------------------------------------------

// CavpHmacTestResult

// .nugget.app.protoapi.DcryptError result_code = 1;
inline void CavpHmacTestResult::clear_result_code() {
  result_code_ = 0;
}
inline ::nugget::app::protoapi::DcryptError CavpHmacTestResult::_internal_result_code() const {
  return static_cast< ::nugget::app::protoapi::DcryptError >(result_code_);
}
inline ::nugget::app::protoapi::DcryptError CavpHmacTestResult::result_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpHmacTestResult.result_code)
  return _internal_result_code();
}
inline void CavpHmacTestResult::_internal_set_result_code(::nugget::app::protoapi::DcryptError value) {
  
  result_code_ = value;
}
inline void CavpHmacTestResult::set_result_code(::nugget::app::protoapi::DcryptError value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpHmacTestResult.result_code)
}

// bytes mac = 2;
inline void CavpHmacTestResult::clear_mac() {
  mac_.ClearToEmpty();
}
inline const std::string& CavpHmacTestResult::mac() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpHmacTestResult.mac)
  return _internal_mac();
}
inline void CavpHmacTestResult::set_mac(const std::string& value) {
  _internal_set_mac(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpHmacTestResult.mac)
}
inline std::string* CavpHmacTestResult::mutable_mac() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpHmacTestResult.mac)
  return _internal_mutable_mac();
}
inline const std::string& CavpHmacTestResult::_internal_mac() const {
  return mac_.Get();
}
inline void CavpHmacTestResult::_internal_set_mac(const std::string& value) {
  
  mac_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpHmacTestResult::set_mac(std::string&& value) {
  
  mac_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpHmacTestResult.mac)
}
inline void CavpHmacTestResult::set_mac(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  mac_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpHmacTestResult.mac)
}
inline void CavpHmacTestResult::set_mac(const void* value,
    size_t size) {
  
  mac_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpHmacTestResult.mac)
}
inline std::string* CavpHmacTestResult::_internal_mutable_mac() {
  
  return mac_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpHmacTestResult::release_mac() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpHmacTestResult.mac)
  return mac_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpHmacTestResult::set_allocated_mac(std::string* mac) {
  if (mac != nullptr) {
    
  } else {
    
  }
  mac_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mac,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpHmacTestResult.mac)
}

// -------------------------------------------------------------------

// CavpShaMsgTest

// .nugget.app.protoapi.CavpShaAlgorithm algo = 1;
inline void CavpShaMsgTest::clear_algo() {
  algo_ = 0;
}
inline ::nugget::app::protoapi::CavpShaAlgorithm CavpShaMsgTest::_internal_algo() const {
  return static_cast< ::nugget::app::protoapi::CavpShaAlgorithm >(algo_);
}
inline ::nugget::app::protoapi::CavpShaAlgorithm CavpShaMsgTest::algo() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpShaMsgTest.algo)
  return _internal_algo();
}
inline void CavpShaMsgTest::_internal_set_algo(::nugget::app::protoapi::CavpShaAlgorithm value) {
  
  algo_ = value;
}
inline void CavpShaMsgTest::set_algo(::nugget::app::protoapi::CavpShaAlgorithm value) {
  _internal_set_algo(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpShaMsgTest.algo)
}

// uint32 total_len = 2;
inline void CavpShaMsgTest::clear_total_len() {
  total_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpShaMsgTest::_internal_total_len() const {
  return total_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpShaMsgTest::total_len() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpShaMsgTest.total_len)
  return _internal_total_len();
}
inline void CavpShaMsgTest::_internal_set_total_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  total_len_ = value;
}
inline void CavpShaMsgTest::set_total_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_len(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpShaMsgTest.total_len)
}

// uint32 offset = 3;
inline void CavpShaMsgTest::clear_offset() {
  offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpShaMsgTest::_internal_offset() const {
  return offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpShaMsgTest::offset() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpShaMsgTest.offset)
  return _internal_offset();
}
inline void CavpShaMsgTest::_internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  offset_ = value;
}
inline void CavpShaMsgTest::set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpShaMsgTest.offset)
}

// bytes msg = 4;
inline void CavpShaMsgTest::clear_msg() {
  msg_.ClearToEmpty();
}
inline const std::string& CavpShaMsgTest::msg() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpShaMsgTest.msg)
  return _internal_msg();
}
inline void CavpShaMsgTest::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpShaMsgTest.msg)
}
inline std::string* CavpShaMsgTest::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpShaMsgTest.msg)
  return _internal_mutable_msg();
}
inline const std::string& CavpShaMsgTest::_internal_msg() const {
  return msg_.Get();
}
inline void CavpShaMsgTest::_internal_set_msg(const std::string& value) {
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpShaMsgTest::set_msg(std::string&& value) {
  
  msg_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpShaMsgTest.msg)
}
inline void CavpShaMsgTest::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpShaMsgTest.msg)
}
inline void CavpShaMsgTest::set_msg(const void* value,
    size_t size) {
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpShaMsgTest.msg)
}
inline std::string* CavpShaMsgTest::_internal_mutable_msg() {
  
  return msg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpShaMsgTest::release_msg() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpShaMsgTest.msg)
  return msg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpShaMsgTest::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpShaMsgTest.msg)
}

// -------------------------------------------------------------------

// CavpShaMctTest

// .nugget.app.protoapi.CavpShaAlgorithm algo = 1;
inline void CavpShaMctTest::clear_algo() {
  algo_ = 0;
}
inline ::nugget::app::protoapi::CavpShaAlgorithm CavpShaMctTest::_internal_algo() const {
  return static_cast< ::nugget::app::protoapi::CavpShaAlgorithm >(algo_);
}
inline ::nugget::app::protoapi::CavpShaAlgorithm CavpShaMctTest::algo() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpShaMctTest.algo)
  return _internal_algo();
}
inline void CavpShaMctTest::_internal_set_algo(::nugget::app::protoapi::CavpShaAlgorithm value) {
  
  algo_ = value;
}
inline void CavpShaMctTest::set_algo(::nugget::app::protoapi::CavpShaAlgorithm value) {
  _internal_set_algo(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpShaMctTest.algo)
}

// bytes seed = 2;
inline void CavpShaMctTest::clear_seed() {
  seed_.ClearToEmpty();
}
inline const std::string& CavpShaMctTest::seed() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpShaMctTest.seed)
  return _internal_seed();
}
inline void CavpShaMctTest::set_seed(const std::string& value) {
  _internal_set_seed(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpShaMctTest.seed)
}
inline std::string* CavpShaMctTest::mutable_seed() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpShaMctTest.seed)
  return _internal_mutable_seed();
}
inline const std::string& CavpShaMctTest::_internal_seed() const {
  return seed_.Get();
}
inline void CavpShaMctTest::_internal_set_seed(const std::string& value) {
  
  seed_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpShaMctTest::set_seed(std::string&& value) {
  
  seed_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpShaMctTest.seed)
}
inline void CavpShaMctTest::set_seed(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  seed_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpShaMctTest.seed)
}
inline void CavpShaMctTest::set_seed(const void* value,
    size_t size) {
  
  seed_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpShaMctTest.seed)
}
inline std::string* CavpShaMctTest::_internal_mutable_seed() {
  
  return seed_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpShaMctTest::release_seed() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpShaMctTest.seed)
  return seed_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpShaMctTest::set_allocated_seed(std::string* seed) {
  if (seed != nullptr) {
    
  } else {
    
  }
  seed_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), seed,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpShaMctTest.seed)
}

// -------------------------------------------------------------------

// CavpShaTestResult

// .nugget.app.protoapi.DcryptError result_code = 1;
inline void CavpShaTestResult::clear_result_code() {
  result_code_ = 0;
}
inline ::nugget::app::protoapi::DcryptError CavpShaTestResult::_internal_result_code() const {
  return static_cast< ::nugget::app::protoapi::DcryptError >(result_code_);
}
inline ::nugget::app::protoapi::DcryptError CavpShaTestResult::result_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpShaTestResult.result_code)
  return _internal_result_code();
}
inline void CavpShaTestResult::_internal_set_result_code(::nugget::app::protoapi::DcryptError value) {
  
  result_code_ = value;
}
inline void CavpShaTestResult::set_result_code(::nugget::app::protoapi::DcryptError value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpShaTestResult.result_code)
}

// bytes md = 2;
inline void CavpShaTestResult::clear_md() {
  md_.ClearToEmpty();
}
inline const std::string& CavpShaTestResult::md() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpShaTestResult.md)
  return _internal_md();
}
inline void CavpShaTestResult::set_md(const std::string& value) {
  _internal_set_md(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpShaTestResult.md)
}
inline std::string* CavpShaTestResult::mutable_md() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpShaTestResult.md)
  return _internal_mutable_md();
}
inline const std::string& CavpShaTestResult::_internal_md() const {
  return md_.Get();
}
inline void CavpShaTestResult::_internal_set_md(const std::string& value) {
  
  md_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpShaTestResult::set_md(std::string&& value) {
  
  md_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpShaTestResult.md)
}
inline void CavpShaTestResult::set_md(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  md_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpShaTestResult.md)
}
inline void CavpShaTestResult::set_md(const void* value,
    size_t size) {
  
  md_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpShaTestResult.md)
}
inline std::string* CavpShaTestResult::_internal_mutable_md() {
  
  return md_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpShaTestResult::release_md() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpShaTestResult.md)
  return md_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpShaTestResult::set_allocated_md(std::string* md) {
  if (md != nullptr) {
    
  } else {
    
  }
  md_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), md,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpShaTestResult.md)
}

// -------------------------------------------------------------------

// CavpRsaKeyGenTest

// uint32 count = 1;
inline void CavpRsaKeyGenTest::clear_count() {
  count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpRsaKeyGenTest::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpRsaKeyGenTest::count() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaKeyGenTest.count)
  return _internal_count();
}
inline void CavpRsaKeyGenTest::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  count_ = value;
}
inline void CavpRsaKeyGenTest::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaKeyGenTest.count)
}

// uint32 mod = 2;
inline void CavpRsaKeyGenTest::clear_mod() {
  mod_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpRsaKeyGenTest::_internal_mod() const {
  return mod_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpRsaKeyGenTest::mod() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaKeyGenTest.mod)
  return _internal_mod();
}
inline void CavpRsaKeyGenTest::_internal_set_mod(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  mod_ = value;
}
inline void CavpRsaKeyGenTest::set_mod(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mod(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaKeyGenTest.mod)
}

// .nugget.app.protoapi.CavpRsaMRTable table = 3;
inline void CavpRsaKeyGenTest::clear_table() {
  table_ = 0;
}
inline ::nugget::app::protoapi::CavpRsaMRTable CavpRsaKeyGenTest::_internal_table() const {
  return static_cast< ::nugget::app::protoapi::CavpRsaMRTable >(table_);
}
inline ::nugget::app::protoapi::CavpRsaMRTable CavpRsaKeyGenTest::table() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaKeyGenTest.table)
  return _internal_table();
}
inline void CavpRsaKeyGenTest::_internal_set_table(::nugget::app::protoapi::CavpRsaMRTable value) {
  
  table_ = value;
}
inline void CavpRsaKeyGenTest::set_table(::nugget::app::protoapi::CavpRsaMRTable value) {
  _internal_set_table(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaKeyGenTest.table)
}

// -------------------------------------------------------------------

// CavpRsaSigGenTest

// bool gen_n = 1;
inline void CavpRsaSigGenTest::clear_gen_n() {
  gen_n_ = false;
}
inline bool CavpRsaSigGenTest::_internal_gen_n() const {
  return gen_n_;
}
inline bool CavpRsaSigGenTest::gen_n() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaSigGenTest.gen_n)
  return _internal_gen_n();
}
inline void CavpRsaSigGenTest::_internal_set_gen_n(bool value) {
  
  gen_n_ = value;
}
inline void CavpRsaSigGenTest::set_gen_n(bool value) {
  _internal_set_gen_n(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaSigGenTest.gen_n)
}

// .nugget.app.protoapi.CavpShaAlgorithm sha_alg = 2;
inline void CavpRsaSigGenTest::clear_sha_alg() {
  sha_alg_ = 0;
}
inline ::nugget::app::protoapi::CavpShaAlgorithm CavpRsaSigGenTest::_internal_sha_alg() const {
  return static_cast< ::nugget::app::protoapi::CavpShaAlgorithm >(sha_alg_);
}
inline ::nugget::app::protoapi::CavpShaAlgorithm CavpRsaSigGenTest::sha_alg() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaSigGenTest.sha_alg)
  return _internal_sha_alg();
}
inline void CavpRsaSigGenTest::_internal_set_sha_alg(::nugget::app::protoapi::CavpShaAlgorithm value) {
  
  sha_alg_ = value;
}
inline void CavpRsaSigGenTest::set_sha_alg(::nugget::app::protoapi::CavpShaAlgorithm value) {
  _internal_set_sha_alg(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaSigGenTest.sha_alg)
}

// .nugget.app.protoapi.CavpRsaPaddingType padding = 3;
inline void CavpRsaSigGenTest::clear_padding() {
  padding_ = 0;
}
inline ::nugget::app::protoapi::CavpRsaPaddingType CavpRsaSigGenTest::_internal_padding() const {
  return static_cast< ::nugget::app::protoapi::CavpRsaPaddingType >(padding_);
}
inline ::nugget::app::protoapi::CavpRsaPaddingType CavpRsaSigGenTest::padding() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaSigGenTest.padding)
  return _internal_padding();
}
inline void CavpRsaSigGenTest::_internal_set_padding(::nugget::app::protoapi::CavpRsaPaddingType value) {
  
  padding_ = value;
}
inline void CavpRsaSigGenTest::set_padding(::nugget::app::protoapi::CavpRsaPaddingType value) {
  _internal_set_padding(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaSigGenTest.padding)
}

// bytes msg = 4;
inline void CavpRsaSigGenTest::clear_msg() {
  msg_.ClearToEmpty();
}
inline const std::string& CavpRsaSigGenTest::msg() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaSigGenTest.msg)
  return _internal_msg();
}
inline void CavpRsaSigGenTest::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaSigGenTest.msg)
}
inline std::string* CavpRsaSigGenTest::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpRsaSigGenTest.msg)
  return _internal_mutable_msg();
}
inline const std::string& CavpRsaSigGenTest::_internal_msg() const {
  return msg_.Get();
}
inline void CavpRsaSigGenTest::_internal_set_msg(const std::string& value) {
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpRsaSigGenTest::set_msg(std::string&& value) {
  
  msg_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpRsaSigGenTest.msg)
}
inline void CavpRsaSigGenTest::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpRsaSigGenTest.msg)
}
inline void CavpRsaSigGenTest::set_msg(const void* value,
    size_t size) {
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpRsaSigGenTest.msg)
}
inline std::string* CavpRsaSigGenTest::_internal_mutable_msg() {
  
  return msg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpRsaSigGenTest::release_msg() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpRsaSigGenTest.msg)
  return msg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpRsaSigGenTest::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpRsaSigGenTest.msg)
}

// -------------------------------------------------------------------

// CavpRsaSigVerTest

// uint32 mod = 1;
inline void CavpRsaSigVerTest::clear_mod() {
  mod_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpRsaSigVerTest::_internal_mod() const {
  return mod_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpRsaSigVerTest::mod() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaSigVerTest.mod)
  return _internal_mod();
}
inline void CavpRsaSigVerTest::_internal_set_mod(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  mod_ = value;
}
inline void CavpRsaSigVerTest::set_mod(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mod(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaSigVerTest.mod)
}

// .nugget.app.protoapi.CavpShaAlgorithm sha_alg = 2;
inline void CavpRsaSigVerTest::clear_sha_alg() {
  sha_alg_ = 0;
}
inline ::nugget::app::protoapi::CavpShaAlgorithm CavpRsaSigVerTest::_internal_sha_alg() const {
  return static_cast< ::nugget::app::protoapi::CavpShaAlgorithm >(sha_alg_);
}
inline ::nugget::app::protoapi::CavpShaAlgorithm CavpRsaSigVerTest::sha_alg() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaSigVerTest.sha_alg)
  return _internal_sha_alg();
}
inline void CavpRsaSigVerTest::_internal_set_sha_alg(::nugget::app::protoapi::CavpShaAlgorithm value) {
  
  sha_alg_ = value;
}
inline void CavpRsaSigVerTest::set_sha_alg(::nugget::app::protoapi::CavpShaAlgorithm value) {
  _internal_set_sha_alg(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaSigVerTest.sha_alg)
}

// .nugget.app.protoapi.CavpRsaPaddingType padding = 3;
inline void CavpRsaSigVerTest::clear_padding() {
  padding_ = 0;
}
inline ::nugget::app::protoapi::CavpRsaPaddingType CavpRsaSigVerTest::_internal_padding() const {
  return static_cast< ::nugget::app::protoapi::CavpRsaPaddingType >(padding_);
}
inline ::nugget::app::protoapi::CavpRsaPaddingType CavpRsaSigVerTest::padding() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaSigVerTest.padding)
  return _internal_padding();
}
inline void CavpRsaSigVerTest::_internal_set_padding(::nugget::app::protoapi::CavpRsaPaddingType value) {
  
  padding_ = value;
}
inline void CavpRsaSigVerTest::set_padding(::nugget::app::protoapi::CavpRsaPaddingType value) {
  _internal_set_padding(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaSigVerTest.padding)
}

// uint32 e = 4;
inline void CavpRsaSigVerTest::clear_e() {
  e_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpRsaSigVerTest::_internal_e() const {
  return e_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpRsaSigVerTest::e() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaSigVerTest.e)
  return _internal_e();
}
inline void CavpRsaSigVerTest::_internal_set_e(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  e_ = value;
}
inline void CavpRsaSigVerTest::set_e(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_e(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaSigVerTest.e)
}

// bytes n = 5;
inline void CavpRsaSigVerTest::clear_n() {
  n_.ClearToEmpty();
}
inline const std::string& CavpRsaSigVerTest::n() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaSigVerTest.n)
  return _internal_n();
}
inline void CavpRsaSigVerTest::set_n(const std::string& value) {
  _internal_set_n(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaSigVerTest.n)
}
inline std::string* CavpRsaSigVerTest::mutable_n() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpRsaSigVerTest.n)
  return _internal_mutable_n();
}
inline const std::string& CavpRsaSigVerTest::_internal_n() const {
  return n_.Get();
}
inline void CavpRsaSigVerTest::_internal_set_n(const std::string& value) {
  
  n_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpRsaSigVerTest::set_n(std::string&& value) {
  
  n_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpRsaSigVerTest.n)
}
inline void CavpRsaSigVerTest::set_n(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  n_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpRsaSigVerTest.n)
}
inline void CavpRsaSigVerTest::set_n(const void* value,
    size_t size) {
  
  n_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpRsaSigVerTest.n)
}
inline std::string* CavpRsaSigVerTest::_internal_mutable_n() {
  
  return n_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpRsaSigVerTest::release_n() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpRsaSigVerTest.n)
  return n_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpRsaSigVerTest::set_allocated_n(std::string* n) {
  if (n != nullptr) {
    
  } else {
    
  }
  n_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), n,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpRsaSigVerTest.n)
}

// bytes msg = 6;
inline void CavpRsaSigVerTest::clear_msg() {
  msg_.ClearToEmpty();
}
inline const std::string& CavpRsaSigVerTest::msg() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaSigVerTest.msg)
  return _internal_msg();
}
inline void CavpRsaSigVerTest::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaSigVerTest.msg)
}
inline std::string* CavpRsaSigVerTest::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpRsaSigVerTest.msg)
  return _internal_mutable_msg();
}
inline const std::string& CavpRsaSigVerTest::_internal_msg() const {
  return msg_.Get();
}
inline void CavpRsaSigVerTest::_internal_set_msg(const std::string& value) {
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpRsaSigVerTest::set_msg(std::string&& value) {
  
  msg_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpRsaSigVerTest.msg)
}
inline void CavpRsaSigVerTest::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpRsaSigVerTest.msg)
}
inline void CavpRsaSigVerTest::set_msg(const void* value,
    size_t size) {
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpRsaSigVerTest.msg)
}
inline std::string* CavpRsaSigVerTest::_internal_mutable_msg() {
  
  return msg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpRsaSigVerTest::release_msg() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpRsaSigVerTest.msg)
  return msg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpRsaSigVerTest::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpRsaSigVerTest.msg)
}

// bytes sig = 7;
inline void CavpRsaSigVerTest::clear_sig() {
  sig_.ClearToEmpty();
}
inline const std::string& CavpRsaSigVerTest::sig() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaSigVerTest.sig)
  return _internal_sig();
}
inline void CavpRsaSigVerTest::set_sig(const std::string& value) {
  _internal_set_sig(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaSigVerTest.sig)
}
inline std::string* CavpRsaSigVerTest::mutable_sig() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpRsaSigVerTest.sig)
  return _internal_mutable_sig();
}
inline const std::string& CavpRsaSigVerTest::_internal_sig() const {
  return sig_.Get();
}
inline void CavpRsaSigVerTest::_internal_set_sig(const std::string& value) {
  
  sig_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpRsaSigVerTest::set_sig(std::string&& value) {
  
  sig_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpRsaSigVerTest.sig)
}
inline void CavpRsaSigVerTest::set_sig(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sig_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpRsaSigVerTest.sig)
}
inline void CavpRsaSigVerTest::set_sig(const void* value,
    size_t size) {
  
  sig_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpRsaSigVerTest.sig)
}
inline std::string* CavpRsaSigVerTest::_internal_mutable_sig() {
  
  return sig_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpRsaSigVerTest::release_sig() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpRsaSigVerTest.sig)
  return sig_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpRsaSigVerTest::set_allocated_sig(std::string* sig) {
  if (sig != nullptr) {
    
  } else {
    
  }
  sig_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sig,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpRsaSigVerTest.sig)
}

// -------------------------------------------------------------------

// CavpRsaSigVerTestResult

// .nugget.app.protoapi.DcryptError result_code = 1;
inline void CavpRsaSigVerTestResult::clear_result_code() {
  result_code_ = 0;
}
inline ::nugget::app::protoapi::DcryptError CavpRsaSigVerTestResult::_internal_result_code() const {
  return static_cast< ::nugget::app::protoapi::DcryptError >(result_code_);
}
inline ::nugget::app::protoapi::DcryptError CavpRsaSigVerTestResult::result_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaSigVerTestResult.result_code)
  return _internal_result_code();
}
inline void CavpRsaSigVerTestResult::_internal_set_result_code(::nugget::app::protoapi::DcryptError value) {
  
  result_code_ = value;
}
inline void CavpRsaSigVerTestResult::set_result_code(::nugget::app::protoapi::DcryptError value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaSigVerTestResult.result_code)
}

// .nugget.app.protoapi.CavpRsaSigVerResult verif_result = 2;
inline void CavpRsaSigVerTestResult::clear_verif_result() {
  verif_result_ = 0;
}
inline ::nugget::app::protoapi::CavpRsaSigVerResult CavpRsaSigVerTestResult::_internal_verif_result() const {
  return static_cast< ::nugget::app::protoapi::CavpRsaSigVerResult >(verif_result_);
}
inline ::nugget::app::protoapi::CavpRsaSigVerResult CavpRsaSigVerTestResult::verif_result() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaSigVerTestResult.verif_result)
  return _internal_verif_result();
}
inline void CavpRsaSigVerTestResult::_internal_set_verif_result(::nugget::app::protoapi::CavpRsaSigVerResult value) {
  
  verif_result_ = value;
}
inline void CavpRsaSigVerTestResult::set_verif_result(::nugget::app::protoapi::CavpRsaSigVerResult value) {
  _internal_set_verif_result(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaSigVerTestResult.verif_result)
}

// -------------------------------------------------------------------

// CavpRsaSigGenTestResult

// .nugget.app.protoapi.DcryptError result_code = 1;
inline void CavpRsaSigGenTestResult::clear_result_code() {
  result_code_ = 0;
}
inline ::nugget::app::protoapi::DcryptError CavpRsaSigGenTestResult::_internal_result_code() const {
  return static_cast< ::nugget::app::protoapi::DcryptError >(result_code_);
}
inline ::nugget::app::protoapi::DcryptError CavpRsaSigGenTestResult::result_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaSigGenTestResult.result_code)
  return _internal_result_code();
}
inline void CavpRsaSigGenTestResult::_internal_set_result_code(::nugget::app::protoapi::DcryptError value) {
  
  result_code_ = value;
}
inline void CavpRsaSigGenTestResult::set_result_code(::nugget::app::protoapi::DcryptError value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaSigGenTestResult.result_code)
}

// uint32 e = 2;
inline void CavpRsaSigGenTestResult::clear_e() {
  e_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpRsaSigGenTestResult::_internal_e() const {
  return e_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpRsaSigGenTestResult::e() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaSigGenTestResult.e)
  return _internal_e();
}
inline void CavpRsaSigGenTestResult::_internal_set_e(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  e_ = value;
}
inline void CavpRsaSigGenTestResult::set_e(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_e(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaSigGenTestResult.e)
}

// bytes n = 3;
inline void CavpRsaSigGenTestResult::clear_n() {
  n_.ClearToEmpty();
}
inline const std::string& CavpRsaSigGenTestResult::n() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaSigGenTestResult.n)
  return _internal_n();
}
inline void CavpRsaSigGenTestResult::set_n(const std::string& value) {
  _internal_set_n(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaSigGenTestResult.n)
}
inline std::string* CavpRsaSigGenTestResult::mutable_n() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpRsaSigGenTestResult.n)
  return _internal_mutable_n();
}
inline const std::string& CavpRsaSigGenTestResult::_internal_n() const {
  return n_.Get();
}
inline void CavpRsaSigGenTestResult::_internal_set_n(const std::string& value) {
  
  n_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpRsaSigGenTestResult::set_n(std::string&& value) {
  
  n_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpRsaSigGenTestResult.n)
}
inline void CavpRsaSigGenTestResult::set_n(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  n_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpRsaSigGenTestResult.n)
}
inline void CavpRsaSigGenTestResult::set_n(const void* value,
    size_t size) {
  
  n_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpRsaSigGenTestResult.n)
}
inline std::string* CavpRsaSigGenTestResult::_internal_mutable_n() {
  
  return n_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpRsaSigGenTestResult::release_n() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpRsaSigGenTestResult.n)
  return n_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpRsaSigGenTestResult::set_allocated_n(std::string* n) {
  if (n != nullptr) {
    
  } else {
    
  }
  n_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), n,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpRsaSigGenTestResult.n)
}

// bytes sig = 4;
inline void CavpRsaSigGenTestResult::clear_sig() {
  sig_.ClearToEmpty();
}
inline const std::string& CavpRsaSigGenTestResult::sig() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaSigGenTestResult.sig)
  return _internal_sig();
}
inline void CavpRsaSigGenTestResult::set_sig(const std::string& value) {
  _internal_set_sig(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaSigGenTestResult.sig)
}
inline std::string* CavpRsaSigGenTestResult::mutable_sig() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpRsaSigGenTestResult.sig)
  return _internal_mutable_sig();
}
inline const std::string& CavpRsaSigGenTestResult::_internal_sig() const {
  return sig_.Get();
}
inline void CavpRsaSigGenTestResult::_internal_set_sig(const std::string& value) {
  
  sig_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpRsaSigGenTestResult::set_sig(std::string&& value) {
  
  sig_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpRsaSigGenTestResult.sig)
}
inline void CavpRsaSigGenTestResult::set_sig(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sig_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpRsaSigGenTestResult.sig)
}
inline void CavpRsaSigGenTestResult::set_sig(const void* value,
    size_t size) {
  
  sig_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpRsaSigGenTestResult.sig)
}
inline std::string* CavpRsaSigGenTestResult::_internal_mutable_sig() {
  
  return sig_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpRsaSigGenTestResult::release_sig() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpRsaSigGenTestResult.sig)
  return sig_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpRsaSigGenTestResult::set_allocated_sig(std::string* sig) {
  if (sig != nullptr) {
    
  } else {
    
  }
  sig_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sig,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpRsaSigGenTestResult.sig)
}

// -------------------------------------------------------------------

// CavpRsaKeyGenTestResult

// .nugget.app.protoapi.DcryptError result_code = 1;
inline void CavpRsaKeyGenTestResult::clear_result_code() {
  result_code_ = 0;
}
inline ::nugget::app::protoapi::DcryptError CavpRsaKeyGenTestResult::_internal_result_code() const {
  return static_cast< ::nugget::app::protoapi::DcryptError >(result_code_);
}
inline ::nugget::app::protoapi::DcryptError CavpRsaKeyGenTestResult::result_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaKeyGenTestResult.result_code)
  return _internal_result_code();
}
inline void CavpRsaKeyGenTestResult::_internal_set_result_code(::nugget::app::protoapi::DcryptError value) {
  
  result_code_ = value;
}
inline void CavpRsaKeyGenTestResult::set_result_code(::nugget::app::protoapi::DcryptError value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaKeyGenTestResult.result_code)
}

// uint32 e = 2;
inline void CavpRsaKeyGenTestResult::clear_e() {
  e_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpRsaKeyGenTestResult::_internal_e() const {
  return e_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpRsaKeyGenTestResult::e() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaKeyGenTestResult.e)
  return _internal_e();
}
inline void CavpRsaKeyGenTestResult::_internal_set_e(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  e_ = value;
}
inline void CavpRsaKeyGenTestResult::set_e(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_e(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaKeyGenTestResult.e)
}

// bytes p = 3;
inline void CavpRsaKeyGenTestResult::clear_p() {
  p_.ClearToEmpty();
}
inline const std::string& CavpRsaKeyGenTestResult::p() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaKeyGenTestResult.p)
  return _internal_p();
}
inline void CavpRsaKeyGenTestResult::set_p(const std::string& value) {
  _internal_set_p(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaKeyGenTestResult.p)
}
inline std::string* CavpRsaKeyGenTestResult::mutable_p() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpRsaKeyGenTestResult.p)
  return _internal_mutable_p();
}
inline const std::string& CavpRsaKeyGenTestResult::_internal_p() const {
  return p_.Get();
}
inline void CavpRsaKeyGenTestResult::_internal_set_p(const std::string& value) {
  
  p_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpRsaKeyGenTestResult::set_p(std::string&& value) {
  
  p_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpRsaKeyGenTestResult.p)
}
inline void CavpRsaKeyGenTestResult::set_p(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  p_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpRsaKeyGenTestResult.p)
}
inline void CavpRsaKeyGenTestResult::set_p(const void* value,
    size_t size) {
  
  p_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpRsaKeyGenTestResult.p)
}
inline std::string* CavpRsaKeyGenTestResult::_internal_mutable_p() {
  
  return p_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpRsaKeyGenTestResult::release_p() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpRsaKeyGenTestResult.p)
  return p_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpRsaKeyGenTestResult::set_allocated_p(std::string* p) {
  if (p != nullptr) {
    
  } else {
    
  }
  p_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), p,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpRsaKeyGenTestResult.p)
}

// bytes q = 4;
inline void CavpRsaKeyGenTestResult::clear_q() {
  q_.ClearToEmpty();
}
inline const std::string& CavpRsaKeyGenTestResult::q() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaKeyGenTestResult.q)
  return _internal_q();
}
inline void CavpRsaKeyGenTestResult::set_q(const std::string& value) {
  _internal_set_q(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaKeyGenTestResult.q)
}
inline std::string* CavpRsaKeyGenTestResult::mutable_q() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpRsaKeyGenTestResult.q)
  return _internal_mutable_q();
}
inline const std::string& CavpRsaKeyGenTestResult::_internal_q() const {
  return q_.Get();
}
inline void CavpRsaKeyGenTestResult::_internal_set_q(const std::string& value) {
  
  q_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpRsaKeyGenTestResult::set_q(std::string&& value) {
  
  q_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpRsaKeyGenTestResult.q)
}
inline void CavpRsaKeyGenTestResult::set_q(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  q_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpRsaKeyGenTestResult.q)
}
inline void CavpRsaKeyGenTestResult::set_q(const void* value,
    size_t size) {
  
  q_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpRsaKeyGenTestResult.q)
}
inline std::string* CavpRsaKeyGenTestResult::_internal_mutable_q() {
  
  return q_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpRsaKeyGenTestResult::release_q() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpRsaKeyGenTestResult.q)
  return q_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpRsaKeyGenTestResult::set_allocated_q(std::string* q) {
  if (q != nullptr) {
    
  } else {
    
  }
  q_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), q,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpRsaKeyGenTestResult.q)
}

// bytes n = 5;
inline void CavpRsaKeyGenTestResult::clear_n() {
  n_.ClearToEmpty();
}
inline const std::string& CavpRsaKeyGenTestResult::n() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaKeyGenTestResult.n)
  return _internal_n();
}
inline void CavpRsaKeyGenTestResult::set_n(const std::string& value) {
  _internal_set_n(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaKeyGenTestResult.n)
}
inline std::string* CavpRsaKeyGenTestResult::mutable_n() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpRsaKeyGenTestResult.n)
  return _internal_mutable_n();
}
inline const std::string& CavpRsaKeyGenTestResult::_internal_n() const {
  return n_.Get();
}
inline void CavpRsaKeyGenTestResult::_internal_set_n(const std::string& value) {
  
  n_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpRsaKeyGenTestResult::set_n(std::string&& value) {
  
  n_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpRsaKeyGenTestResult.n)
}
inline void CavpRsaKeyGenTestResult::set_n(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  n_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpRsaKeyGenTestResult.n)
}
inline void CavpRsaKeyGenTestResult::set_n(const void* value,
    size_t size) {
  
  n_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpRsaKeyGenTestResult.n)
}
inline std::string* CavpRsaKeyGenTestResult::_internal_mutable_n() {
  
  return n_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpRsaKeyGenTestResult::release_n() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpRsaKeyGenTestResult.n)
  return n_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpRsaKeyGenTestResult::set_allocated_n(std::string* n) {
  if (n != nullptr) {
    
  } else {
    
  }
  n_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), n,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpRsaKeyGenTestResult.n)
}

// bytes d = 6;
inline void CavpRsaKeyGenTestResult::clear_d() {
  d_.ClearToEmpty();
}
inline const std::string& CavpRsaKeyGenTestResult::d() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpRsaKeyGenTestResult.d)
  return _internal_d();
}
inline void CavpRsaKeyGenTestResult::set_d(const std::string& value) {
  _internal_set_d(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpRsaKeyGenTestResult.d)
}
inline std::string* CavpRsaKeyGenTestResult::mutable_d() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpRsaKeyGenTestResult.d)
  return _internal_mutable_d();
}
inline const std::string& CavpRsaKeyGenTestResult::_internal_d() const {
  return d_.Get();
}
inline void CavpRsaKeyGenTestResult::_internal_set_d(const std::string& value) {
  
  d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpRsaKeyGenTestResult::set_d(std::string&& value) {
  
  d_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpRsaKeyGenTestResult.d)
}
inline void CavpRsaKeyGenTestResult::set_d(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpRsaKeyGenTestResult.d)
}
inline void CavpRsaKeyGenTestResult::set_d(const void* value,
    size_t size) {
  
  d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpRsaKeyGenTestResult.d)
}
inline std::string* CavpRsaKeyGenTestResult::_internal_mutable_d() {
  
  return d_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpRsaKeyGenTestResult::release_d() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpRsaKeyGenTestResult.d)
  return d_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpRsaKeyGenTestResult::set_allocated_d(std::string* d) {
  if (d != nullptr) {
    
  } else {
    
  }
  d_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), d,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpRsaKeyGenTestResult.d)
}

// -------------------------------------------------------------------

// CavpDrbgTest

// bool prediction_resistance = 2;
inline void CavpDrbgTest::clear_prediction_resistance() {
  prediction_resistance_ = false;
}
inline bool CavpDrbgTest::_internal_prediction_resistance() const {
  return prediction_resistance_;
}
inline bool CavpDrbgTest::prediction_resistance() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpDrbgTest.prediction_resistance)
  return _internal_prediction_resistance();
}
inline void CavpDrbgTest::_internal_set_prediction_resistance(bool value) {
  
  prediction_resistance_ = value;
}
inline void CavpDrbgTest::set_prediction_resistance(bool value) {
  _internal_set_prediction_resistance(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpDrbgTest.prediction_resistance)
}

// uint32 ret_len = 3;
inline void CavpDrbgTest::clear_ret_len() {
  ret_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpDrbgTest::_internal_ret_len() const {
  return ret_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpDrbgTest::ret_len() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpDrbgTest.ret_len)
  return _internal_ret_len();
}
inline void CavpDrbgTest::_internal_set_ret_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ret_len_ = value;
}
inline void CavpDrbgTest::set_ret_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ret_len(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpDrbgTest.ret_len)
}

// bytes entropy_init = 4;
inline void CavpDrbgTest::clear_entropy_init() {
  entropy_init_.ClearToEmpty();
}
inline const std::string& CavpDrbgTest::entropy_init() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpDrbgTest.entropy_init)
  return _internal_entropy_init();
}
inline void CavpDrbgTest::set_entropy_init(const std::string& value) {
  _internal_set_entropy_init(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpDrbgTest.entropy_init)
}
inline std::string* CavpDrbgTest::mutable_entropy_init() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpDrbgTest.entropy_init)
  return _internal_mutable_entropy_init();
}
inline const std::string& CavpDrbgTest::_internal_entropy_init() const {
  return entropy_init_.Get();
}
inline void CavpDrbgTest::_internal_set_entropy_init(const std::string& value) {
  
  entropy_init_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpDrbgTest::set_entropy_init(std::string&& value) {
  
  entropy_init_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpDrbgTest.entropy_init)
}
inline void CavpDrbgTest::set_entropy_init(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  entropy_init_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpDrbgTest.entropy_init)
}
inline void CavpDrbgTest::set_entropy_init(const void* value,
    size_t size) {
  
  entropy_init_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpDrbgTest.entropy_init)
}
inline std::string* CavpDrbgTest::_internal_mutable_entropy_init() {
  
  return entropy_init_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpDrbgTest::release_entropy_init() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpDrbgTest.entropy_init)
  return entropy_init_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpDrbgTest::set_allocated_entropy_init(std::string* entropy_init) {
  if (entropy_init != nullptr) {
    
  } else {
    
  }
  entropy_init_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), entropy_init,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpDrbgTest.entropy_init)
}

// bytes nonce = 5;
inline void CavpDrbgTest::clear_nonce() {
  nonce_.ClearToEmpty();
}
inline const std::string& CavpDrbgTest::nonce() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpDrbgTest.nonce)
  return _internal_nonce();
}
inline void CavpDrbgTest::set_nonce(const std::string& value) {
  _internal_set_nonce(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpDrbgTest.nonce)
}
inline std::string* CavpDrbgTest::mutable_nonce() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpDrbgTest.nonce)
  return _internal_mutable_nonce();
}
inline const std::string& CavpDrbgTest::_internal_nonce() const {
  return nonce_.Get();
}
inline void CavpDrbgTest::_internal_set_nonce(const std::string& value) {
  
  nonce_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpDrbgTest::set_nonce(std::string&& value) {
  
  nonce_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpDrbgTest.nonce)
}
inline void CavpDrbgTest::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  nonce_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpDrbgTest.nonce)
}
inline void CavpDrbgTest::set_nonce(const void* value,
    size_t size) {
  
  nonce_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpDrbgTest.nonce)
}
inline std::string* CavpDrbgTest::_internal_mutable_nonce() {
  
  return nonce_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpDrbgTest::release_nonce() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpDrbgTest.nonce)
  return nonce_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpDrbgTest::set_allocated_nonce(std::string* nonce) {
  if (nonce != nullptr) {
    
  } else {
    
  }
  nonce_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nonce,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpDrbgTest.nonce)
}

// bytes perso_str = 6;
inline void CavpDrbgTest::clear_perso_str() {
  perso_str_.ClearToEmpty();
}
inline const std::string& CavpDrbgTest::perso_str() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpDrbgTest.perso_str)
  return _internal_perso_str();
}
inline void CavpDrbgTest::set_perso_str(const std::string& value) {
  _internal_set_perso_str(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpDrbgTest.perso_str)
}
inline std::string* CavpDrbgTest::mutable_perso_str() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpDrbgTest.perso_str)
  return _internal_mutable_perso_str();
}
inline const std::string& CavpDrbgTest::_internal_perso_str() const {
  return perso_str_.Get();
}
inline void CavpDrbgTest::_internal_set_perso_str(const std::string& value) {
  
  perso_str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpDrbgTest::set_perso_str(std::string&& value) {
  
  perso_str_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpDrbgTest.perso_str)
}
inline void CavpDrbgTest::set_perso_str(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  perso_str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpDrbgTest.perso_str)
}
inline void CavpDrbgTest::set_perso_str(const void* value,
    size_t size) {
  
  perso_str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpDrbgTest.perso_str)
}
inline std::string* CavpDrbgTest::_internal_mutable_perso_str() {
  
  return perso_str_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpDrbgTest::release_perso_str() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpDrbgTest.perso_str)
  return perso_str_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpDrbgTest::set_allocated_perso_str(std::string* perso_str) {
  if (perso_str != nullptr) {
    
  } else {
    
  }
  perso_str_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), perso_str,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpDrbgTest.perso_str)
}

// bytes add_input_1 = 7;
inline void CavpDrbgTest::clear_add_input_1() {
  add_input_1_.ClearToEmpty();
}
inline const std::string& CavpDrbgTest::add_input_1() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpDrbgTest.add_input_1)
  return _internal_add_input_1();
}
inline void CavpDrbgTest::set_add_input_1(const std::string& value) {
  _internal_set_add_input_1(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpDrbgTest.add_input_1)
}
inline std::string* CavpDrbgTest::mutable_add_input_1() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpDrbgTest.add_input_1)
  return _internal_mutable_add_input_1();
}
inline const std::string& CavpDrbgTest::_internal_add_input_1() const {
  return add_input_1_.Get();
}
inline void CavpDrbgTest::_internal_set_add_input_1(const std::string& value) {
  
  add_input_1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpDrbgTest::set_add_input_1(std::string&& value) {
  
  add_input_1_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpDrbgTest.add_input_1)
}
inline void CavpDrbgTest::set_add_input_1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  add_input_1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpDrbgTest.add_input_1)
}
inline void CavpDrbgTest::set_add_input_1(const void* value,
    size_t size) {
  
  add_input_1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpDrbgTest.add_input_1)
}
inline std::string* CavpDrbgTest::_internal_mutable_add_input_1() {
  
  return add_input_1_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpDrbgTest::release_add_input_1() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpDrbgTest.add_input_1)
  return add_input_1_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpDrbgTest::set_allocated_add_input_1(std::string* add_input_1) {
  if (add_input_1 != nullptr) {
    
  } else {
    
  }
  add_input_1_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), add_input_1,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpDrbgTest.add_input_1)
}

// bytes add_input_2 = 8;
inline void CavpDrbgTest::clear_add_input_2() {
  add_input_2_.ClearToEmpty();
}
inline const std::string& CavpDrbgTest::add_input_2() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpDrbgTest.add_input_2)
  return _internal_add_input_2();
}
inline void CavpDrbgTest::set_add_input_2(const std::string& value) {
  _internal_set_add_input_2(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpDrbgTest.add_input_2)
}
inline std::string* CavpDrbgTest::mutable_add_input_2() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpDrbgTest.add_input_2)
  return _internal_mutable_add_input_2();
}
inline const std::string& CavpDrbgTest::_internal_add_input_2() const {
  return add_input_2_.Get();
}
inline void CavpDrbgTest::_internal_set_add_input_2(const std::string& value) {
  
  add_input_2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpDrbgTest::set_add_input_2(std::string&& value) {
  
  add_input_2_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpDrbgTest.add_input_2)
}
inline void CavpDrbgTest::set_add_input_2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  add_input_2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpDrbgTest.add_input_2)
}
inline void CavpDrbgTest::set_add_input_2(const void* value,
    size_t size) {
  
  add_input_2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpDrbgTest.add_input_2)
}
inline std::string* CavpDrbgTest::_internal_mutable_add_input_2() {
  
  return add_input_2_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpDrbgTest::release_add_input_2() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpDrbgTest.add_input_2)
  return add_input_2_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpDrbgTest::set_allocated_add_input_2(std::string* add_input_2) {
  if (add_input_2 != nullptr) {
    
  } else {
    
  }
  add_input_2_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), add_input_2,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpDrbgTest.add_input_2)
}

// bytes entropy_pr_1 = 10;
inline void CavpDrbgTest::clear_entropy_pr_1() {
  entropy_pr_1_.ClearToEmpty();
}
inline const std::string& CavpDrbgTest::entropy_pr_1() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpDrbgTest.entropy_pr_1)
  return _internal_entropy_pr_1();
}
inline void CavpDrbgTest::set_entropy_pr_1(const std::string& value) {
  _internal_set_entropy_pr_1(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpDrbgTest.entropy_pr_1)
}
inline std::string* CavpDrbgTest::mutable_entropy_pr_1() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpDrbgTest.entropy_pr_1)
  return _internal_mutable_entropy_pr_1();
}
inline const std::string& CavpDrbgTest::_internal_entropy_pr_1() const {
  return entropy_pr_1_.Get();
}
inline void CavpDrbgTest::_internal_set_entropy_pr_1(const std::string& value) {
  
  entropy_pr_1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpDrbgTest::set_entropy_pr_1(std::string&& value) {
  
  entropy_pr_1_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpDrbgTest.entropy_pr_1)
}
inline void CavpDrbgTest::set_entropy_pr_1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  entropy_pr_1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpDrbgTest.entropy_pr_1)
}
inline void CavpDrbgTest::set_entropy_pr_1(const void* value,
    size_t size) {
  
  entropy_pr_1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpDrbgTest.entropy_pr_1)
}
inline std::string* CavpDrbgTest::_internal_mutable_entropy_pr_1() {
  
  return entropy_pr_1_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpDrbgTest::release_entropy_pr_1() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpDrbgTest.entropy_pr_1)
  return entropy_pr_1_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpDrbgTest::set_allocated_entropy_pr_1(std::string* entropy_pr_1) {
  if (entropy_pr_1 != nullptr) {
    
  } else {
    
  }
  entropy_pr_1_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), entropy_pr_1,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpDrbgTest.entropy_pr_1)
}

// bytes entropy_pr_2 = 11;
inline void CavpDrbgTest::clear_entropy_pr_2() {
  entropy_pr_2_.ClearToEmpty();
}
inline const std::string& CavpDrbgTest::entropy_pr_2() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpDrbgTest.entropy_pr_2)
  return _internal_entropy_pr_2();
}
inline void CavpDrbgTest::set_entropy_pr_2(const std::string& value) {
  _internal_set_entropy_pr_2(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpDrbgTest.entropy_pr_2)
}
inline std::string* CavpDrbgTest::mutable_entropy_pr_2() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpDrbgTest.entropy_pr_2)
  return _internal_mutable_entropy_pr_2();
}
inline const std::string& CavpDrbgTest::_internal_entropy_pr_2() const {
  return entropy_pr_2_.Get();
}
inline void CavpDrbgTest::_internal_set_entropy_pr_2(const std::string& value) {
  
  entropy_pr_2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpDrbgTest::set_entropy_pr_2(std::string&& value) {
  
  entropy_pr_2_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpDrbgTest.entropy_pr_2)
}
inline void CavpDrbgTest::set_entropy_pr_2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  entropy_pr_2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpDrbgTest.entropy_pr_2)
}
inline void CavpDrbgTest::set_entropy_pr_2(const void* value,
    size_t size) {
  
  entropy_pr_2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpDrbgTest.entropy_pr_2)
}
inline std::string* CavpDrbgTest::_internal_mutable_entropy_pr_2() {
  
  return entropy_pr_2_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpDrbgTest::release_entropy_pr_2() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpDrbgTest.entropy_pr_2)
  return entropy_pr_2_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpDrbgTest::set_allocated_entropy_pr_2(std::string* entropy_pr_2) {
  if (entropy_pr_2 != nullptr) {
    
  } else {
    
  }
  entropy_pr_2_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), entropy_pr_2,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpDrbgTest.entropy_pr_2)
}

// -------------------------------------------------------------------

// CavpDrbgTestResult

// .nugget.app.protoapi.DcryptError result_code = 1;
inline void CavpDrbgTestResult::clear_result_code() {
  result_code_ = 0;
}
inline ::nugget::app::protoapi::DcryptError CavpDrbgTestResult::_internal_result_code() const {
  return static_cast< ::nugget::app::protoapi::DcryptError >(result_code_);
}
inline ::nugget::app::protoapi::DcryptError CavpDrbgTestResult::result_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpDrbgTestResult.result_code)
  return _internal_result_code();
}
inline void CavpDrbgTestResult::_internal_set_result_code(::nugget::app::protoapi::DcryptError value) {
  
  result_code_ = value;
}
inline void CavpDrbgTestResult::set_result_code(::nugget::app::protoapi::DcryptError value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpDrbgTestResult.result_code)
}

// bytes bits = 2;
inline void CavpDrbgTestResult::clear_bits() {
  bits_.ClearToEmpty();
}
inline const std::string& CavpDrbgTestResult::bits() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpDrbgTestResult.bits)
  return _internal_bits();
}
inline void CavpDrbgTestResult::set_bits(const std::string& value) {
  _internal_set_bits(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpDrbgTestResult.bits)
}
inline std::string* CavpDrbgTestResult::mutable_bits() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpDrbgTestResult.bits)
  return _internal_mutable_bits();
}
inline const std::string& CavpDrbgTestResult::_internal_bits() const {
  return bits_.Get();
}
inline void CavpDrbgTestResult::_internal_set_bits(const std::string& value) {
  
  bits_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpDrbgTestResult::set_bits(std::string&& value) {
  
  bits_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpDrbgTestResult.bits)
}
inline void CavpDrbgTestResult::set_bits(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bits_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpDrbgTestResult.bits)
}
inline void CavpDrbgTestResult::set_bits(const void* value,
    size_t size) {
  
  bits_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpDrbgTestResult.bits)
}
inline std::string* CavpDrbgTestResult::_internal_mutable_bits() {
  
  return bits_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpDrbgTestResult::release_bits() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpDrbgTestResult.bits)
  return bits_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpDrbgTestResult::set_allocated_bits(std::string* bits) {
  if (bits != nullptr) {
    
  } else {
    
  }
  bits_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bits,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpDrbgTestResult.bits)
}

// -------------------------------------------------------------------

// CavpCkdfTest

// uint32 key_len = 1;
inline void CavpCkdfTest::clear_key_len() {
  key_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpCkdfTest::_internal_key_len() const {
  return key_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpCkdfTest::key_len() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpCkdfTest.key_len)
  return _internal_key_len();
}
inline void CavpCkdfTest::_internal_set_key_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  key_len_ = value;
}
inline void CavpCkdfTest::set_key_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_key_len(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpCkdfTest.key_len)
}

// bytes key = 2;
inline void CavpCkdfTest::clear_key() {
  key_.ClearToEmpty();
}
inline const std::string& CavpCkdfTest::key() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpCkdfTest.key)
  return _internal_key();
}
inline void CavpCkdfTest::set_key(const std::string& value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpCkdfTest.key)
}
inline std::string* CavpCkdfTest::mutable_key() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpCkdfTest.key)
  return _internal_mutable_key();
}
inline const std::string& CavpCkdfTest::_internal_key() const {
  return key_.Get();
}
inline void CavpCkdfTest::_internal_set_key(const std::string& value) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpCkdfTest::set_key(std::string&& value) {
  
  key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpCkdfTest.key)
}
inline void CavpCkdfTest::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpCkdfTest.key)
}
inline void CavpCkdfTest::set_key(const void* value,
    size_t size) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpCkdfTest.key)
}
inline std::string* CavpCkdfTest::_internal_mutable_key() {
  
  return key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpCkdfTest::release_key() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpCkdfTest.key)
  return key_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpCkdfTest::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpCkdfTest.key)
}

// -------------------------------------------------------------------

// CavpCkdfTestResult

// .nugget.app.protoapi.DcryptError result_code = 1;
inline void CavpCkdfTestResult::clear_result_code() {
  result_code_ = 0;
}
inline ::nugget::app::protoapi::DcryptError CavpCkdfTestResult::_internal_result_code() const {
  return static_cast< ::nugget::app::protoapi::DcryptError >(result_code_);
}
inline ::nugget::app::protoapi::DcryptError CavpCkdfTestResult::result_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpCkdfTestResult.result_code)
  return _internal_result_code();
}
inline void CavpCkdfTestResult::_internal_set_result_code(::nugget::app::protoapi::DcryptError value) {
  
  result_code_ = value;
}
inline void CavpCkdfTestResult::set_result_code(::nugget::app::protoapi::DcryptError value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpCkdfTestResult.result_code)
}

// bytes key = 2;
inline void CavpCkdfTestResult::clear_key() {
  key_.ClearToEmpty();
}
inline const std::string& CavpCkdfTestResult::key() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpCkdfTestResult.key)
  return _internal_key();
}
inline void CavpCkdfTestResult::set_key(const std::string& value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpCkdfTestResult.key)
}
inline std::string* CavpCkdfTestResult::mutable_key() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpCkdfTestResult.key)
  return _internal_mutable_key();
}
inline const std::string& CavpCkdfTestResult::_internal_key() const {
  return key_.Get();
}
inline void CavpCkdfTestResult::_internal_set_key(const std::string& value) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpCkdfTestResult::set_key(std::string&& value) {
  
  key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpCkdfTestResult.key)
}
inline void CavpCkdfTestResult::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpCkdfTestResult.key)
}
inline void CavpCkdfTestResult::set_key(const void* value,
    size_t size) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpCkdfTestResult.key)
}
inline std::string* CavpCkdfTestResult::_internal_mutable_key() {
  
  return key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpCkdfTestResult::release_key() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpCkdfTestResult.key)
  return key_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpCkdfTestResult::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpCkdfTestResult.key)
}

// bytes fixed_input_data = 3;
inline void CavpCkdfTestResult::clear_fixed_input_data() {
  fixed_input_data_.ClearToEmpty();
}
inline const std::string& CavpCkdfTestResult::fixed_input_data() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpCkdfTestResult.fixed_input_data)
  return _internal_fixed_input_data();
}
inline void CavpCkdfTestResult::set_fixed_input_data(const std::string& value) {
  _internal_set_fixed_input_data(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpCkdfTestResult.fixed_input_data)
}
inline std::string* CavpCkdfTestResult::mutable_fixed_input_data() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpCkdfTestResult.fixed_input_data)
  return _internal_mutable_fixed_input_data();
}
inline const std::string& CavpCkdfTestResult::_internal_fixed_input_data() const {
  return fixed_input_data_.Get();
}
inline void CavpCkdfTestResult::_internal_set_fixed_input_data(const std::string& value) {
  
  fixed_input_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpCkdfTestResult::set_fixed_input_data(std::string&& value) {
  
  fixed_input_data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpCkdfTestResult.fixed_input_data)
}
inline void CavpCkdfTestResult::set_fixed_input_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  fixed_input_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpCkdfTestResult.fixed_input_data)
}
inline void CavpCkdfTestResult::set_fixed_input_data(const void* value,
    size_t size) {
  
  fixed_input_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpCkdfTestResult.fixed_input_data)
}
inline std::string* CavpCkdfTestResult::_internal_mutable_fixed_input_data() {
  
  return fixed_input_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpCkdfTestResult::release_fixed_input_data() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpCkdfTestResult.fixed_input_data)
  return fixed_input_data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpCkdfTestResult::set_allocated_fixed_input_data(std::string* fixed_input_data) {
  if (fixed_input_data != nullptr) {
    
  } else {
    
  }
  fixed_input_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), fixed_input_data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpCkdfTestResult.fixed_input_data)
}

// -------------------------------------------------------------------

// CavpEcdsaKeyPairTest

// .nugget.app.protoapi.CavpEcdsaKeyGenTable table = 1;
inline void CavpEcdsaKeyPairTest::clear_table() {
  table_ = 0;
}
inline ::nugget::app::protoapi::CavpEcdsaKeyGenTable CavpEcdsaKeyPairTest::_internal_table() const {
  return static_cast< ::nugget::app::protoapi::CavpEcdsaKeyGenTable >(table_);
}
inline ::nugget::app::protoapi::CavpEcdsaKeyGenTable CavpEcdsaKeyPairTest::table() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaKeyPairTest.table)
  return _internal_table();
}
inline void CavpEcdsaKeyPairTest::_internal_set_table(::nugget::app::protoapi::CavpEcdsaKeyGenTable value) {
  
  table_ = value;
}
inline void CavpEcdsaKeyPairTest::set_table(::nugget::app::protoapi::CavpEcdsaKeyGenTable value) {
  _internal_set_table(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaKeyPairTest.table)
}

// -------------------------------------------------------------------

// CavpEcdsaKeyPairTestResult

// .nugget.app.protoapi.DcryptError result_code = 1;
inline void CavpEcdsaKeyPairTestResult::clear_result_code() {
  result_code_ = 0;
}
inline ::nugget::app::protoapi::DcryptError CavpEcdsaKeyPairTestResult::_internal_result_code() const {
  return static_cast< ::nugget::app::protoapi::DcryptError >(result_code_);
}
inline ::nugget::app::protoapi::DcryptError CavpEcdsaKeyPairTestResult::result_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.result_code)
  return _internal_result_code();
}
inline void CavpEcdsaKeyPairTestResult::_internal_set_result_code(::nugget::app::protoapi::DcryptError value) {
  
  result_code_ = value;
}
inline void CavpEcdsaKeyPairTestResult::set_result_code(::nugget::app::protoapi::DcryptError value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.result_code)
}

// bytes d = 2;
inline void CavpEcdsaKeyPairTestResult::clear_d() {
  d_.ClearToEmpty();
}
inline const std::string& CavpEcdsaKeyPairTestResult::d() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.d)
  return _internal_d();
}
inline void CavpEcdsaKeyPairTestResult::set_d(const std::string& value) {
  _internal_set_d(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.d)
}
inline std::string* CavpEcdsaKeyPairTestResult::mutable_d() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.d)
  return _internal_mutable_d();
}
inline const std::string& CavpEcdsaKeyPairTestResult::_internal_d() const {
  return d_.Get();
}
inline void CavpEcdsaKeyPairTestResult::_internal_set_d(const std::string& value) {
  
  d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpEcdsaKeyPairTestResult::set_d(std::string&& value) {
  
  d_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.d)
}
inline void CavpEcdsaKeyPairTestResult::set_d(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.d)
}
inline void CavpEcdsaKeyPairTestResult::set_d(const void* value,
    size_t size) {
  
  d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.d)
}
inline std::string* CavpEcdsaKeyPairTestResult::_internal_mutable_d() {
  
  return d_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpEcdsaKeyPairTestResult::release_d() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.d)
  return d_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpEcdsaKeyPairTestResult::set_allocated_d(std::string* d) {
  if (d != nullptr) {
    
  } else {
    
  }
  d_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), d,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.d)
}

// bytes qx = 3;
inline void CavpEcdsaKeyPairTestResult::clear_qx() {
  qx_.ClearToEmpty();
}
inline const std::string& CavpEcdsaKeyPairTestResult::qx() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.qx)
  return _internal_qx();
}
inline void CavpEcdsaKeyPairTestResult::set_qx(const std::string& value) {
  _internal_set_qx(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.qx)
}
inline std::string* CavpEcdsaKeyPairTestResult::mutable_qx() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.qx)
  return _internal_mutable_qx();
}
inline const std::string& CavpEcdsaKeyPairTestResult::_internal_qx() const {
  return qx_.Get();
}
inline void CavpEcdsaKeyPairTestResult::_internal_set_qx(const std::string& value) {
  
  qx_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpEcdsaKeyPairTestResult::set_qx(std::string&& value) {
  
  qx_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.qx)
}
inline void CavpEcdsaKeyPairTestResult::set_qx(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  qx_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.qx)
}
inline void CavpEcdsaKeyPairTestResult::set_qx(const void* value,
    size_t size) {
  
  qx_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.qx)
}
inline std::string* CavpEcdsaKeyPairTestResult::_internal_mutable_qx() {
  
  return qx_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpEcdsaKeyPairTestResult::release_qx() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.qx)
  return qx_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpEcdsaKeyPairTestResult::set_allocated_qx(std::string* qx) {
  if (qx != nullptr) {
    
  } else {
    
  }
  qx_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), qx,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.qx)
}

// bytes qy = 4;
inline void CavpEcdsaKeyPairTestResult::clear_qy() {
  qy_.ClearToEmpty();
}
inline const std::string& CavpEcdsaKeyPairTestResult::qy() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.qy)
  return _internal_qy();
}
inline void CavpEcdsaKeyPairTestResult::set_qy(const std::string& value) {
  _internal_set_qy(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.qy)
}
inline std::string* CavpEcdsaKeyPairTestResult::mutable_qy() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.qy)
  return _internal_mutable_qy();
}
inline const std::string& CavpEcdsaKeyPairTestResult::_internal_qy() const {
  return qy_.Get();
}
inline void CavpEcdsaKeyPairTestResult::_internal_set_qy(const std::string& value) {
  
  qy_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpEcdsaKeyPairTestResult::set_qy(std::string&& value) {
  
  qy_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.qy)
}
inline void CavpEcdsaKeyPairTestResult::set_qy(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  qy_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.qy)
}
inline void CavpEcdsaKeyPairTestResult::set_qy(const void* value,
    size_t size) {
  
  qy_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.qy)
}
inline std::string* CavpEcdsaKeyPairTestResult::_internal_mutable_qy() {
  
  return qy_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpEcdsaKeyPairTestResult::release_qy() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.qy)
  return qy_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpEcdsaKeyPairTestResult::set_allocated_qy(std::string* qy) {
  if (qy != nullptr) {
    
  } else {
    
  }
  qy_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), qy,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpEcdsaKeyPairTestResult.qy)
}

// -------------------------------------------------------------------

// CavpEcdsaPkvTest

// bytes qx = 1;
inline void CavpEcdsaPkvTest::clear_qx() {
  qx_.ClearToEmpty();
}
inline const std::string& CavpEcdsaPkvTest::qx() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaPkvTest.qx)
  return _internal_qx();
}
inline void CavpEcdsaPkvTest::set_qx(const std::string& value) {
  _internal_set_qx(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaPkvTest.qx)
}
inline std::string* CavpEcdsaPkvTest::mutable_qx() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpEcdsaPkvTest.qx)
  return _internal_mutable_qx();
}
inline const std::string& CavpEcdsaPkvTest::_internal_qx() const {
  return qx_.Get();
}
inline void CavpEcdsaPkvTest::_internal_set_qx(const std::string& value) {
  
  qx_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpEcdsaPkvTest::set_qx(std::string&& value) {
  
  qx_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpEcdsaPkvTest.qx)
}
inline void CavpEcdsaPkvTest::set_qx(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  qx_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpEcdsaPkvTest.qx)
}
inline void CavpEcdsaPkvTest::set_qx(const void* value,
    size_t size) {
  
  qx_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpEcdsaPkvTest.qx)
}
inline std::string* CavpEcdsaPkvTest::_internal_mutable_qx() {
  
  return qx_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpEcdsaPkvTest::release_qx() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpEcdsaPkvTest.qx)
  return qx_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpEcdsaPkvTest::set_allocated_qx(std::string* qx) {
  if (qx != nullptr) {
    
  } else {
    
  }
  qx_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), qx,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpEcdsaPkvTest.qx)
}

// bytes qy = 2;
inline void CavpEcdsaPkvTest::clear_qy() {
  qy_.ClearToEmpty();
}
inline const std::string& CavpEcdsaPkvTest::qy() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaPkvTest.qy)
  return _internal_qy();
}
inline void CavpEcdsaPkvTest::set_qy(const std::string& value) {
  _internal_set_qy(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaPkvTest.qy)
}
inline std::string* CavpEcdsaPkvTest::mutable_qy() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpEcdsaPkvTest.qy)
  return _internal_mutable_qy();
}
inline const std::string& CavpEcdsaPkvTest::_internal_qy() const {
  return qy_.Get();
}
inline void CavpEcdsaPkvTest::_internal_set_qy(const std::string& value) {
  
  qy_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpEcdsaPkvTest::set_qy(std::string&& value) {
  
  qy_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpEcdsaPkvTest.qy)
}
inline void CavpEcdsaPkvTest::set_qy(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  qy_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpEcdsaPkvTest.qy)
}
inline void CavpEcdsaPkvTest::set_qy(const void* value,
    size_t size) {
  
  qy_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpEcdsaPkvTest.qy)
}
inline std::string* CavpEcdsaPkvTest::_internal_mutable_qy() {
  
  return qy_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpEcdsaPkvTest::release_qy() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpEcdsaPkvTest.qy)
  return qy_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpEcdsaPkvTest::set_allocated_qy(std::string* qy) {
  if (qy != nullptr) {
    
  } else {
    
  }
  qy_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), qy,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpEcdsaPkvTest.qy)
}

// -------------------------------------------------------------------

// CavpEcdsaPkvTestResult

// .nugget.app.protoapi.DcryptError result_code = 1;
inline void CavpEcdsaPkvTestResult::clear_result_code() {
  result_code_ = 0;
}
inline ::nugget::app::protoapi::DcryptError CavpEcdsaPkvTestResult::_internal_result_code() const {
  return static_cast< ::nugget::app::protoapi::DcryptError >(result_code_);
}
inline ::nugget::app::protoapi::DcryptError CavpEcdsaPkvTestResult::result_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaPkvTestResult.result_code)
  return _internal_result_code();
}
inline void CavpEcdsaPkvTestResult::_internal_set_result_code(::nugget::app::protoapi::DcryptError value) {
  
  result_code_ = value;
}
inline void CavpEcdsaPkvTestResult::set_result_code(::nugget::app::protoapi::DcryptError value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaPkvTestResult.result_code)
}

// bool result = 2;
inline void CavpEcdsaPkvTestResult::clear_result() {
  result_ = false;
}
inline bool CavpEcdsaPkvTestResult::_internal_result() const {
  return result_;
}
inline bool CavpEcdsaPkvTestResult::result() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaPkvTestResult.result)
  return _internal_result();
}
inline void CavpEcdsaPkvTestResult::_internal_set_result(bool value) {
  
  result_ = value;
}
inline void CavpEcdsaPkvTestResult::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaPkvTestResult.result)
}

// -------------------------------------------------------------------

// CavpEcdsaSigGenTest

// bytes msg = 1;
inline void CavpEcdsaSigGenTest::clear_msg() {
  msg_.ClearToEmpty();
}
inline const std::string& CavpEcdsaSigGenTest::msg() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaSigGenTest.msg)
  return _internal_msg();
}
inline void CavpEcdsaSigGenTest::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaSigGenTest.msg)
}
inline std::string* CavpEcdsaSigGenTest::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpEcdsaSigGenTest.msg)
  return _internal_mutable_msg();
}
inline const std::string& CavpEcdsaSigGenTest::_internal_msg() const {
  return msg_.Get();
}
inline void CavpEcdsaSigGenTest::_internal_set_msg(const std::string& value) {
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpEcdsaSigGenTest::set_msg(std::string&& value) {
  
  msg_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpEcdsaSigGenTest.msg)
}
inline void CavpEcdsaSigGenTest::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpEcdsaSigGenTest.msg)
}
inline void CavpEcdsaSigGenTest::set_msg(const void* value,
    size_t size) {
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpEcdsaSigGenTest.msg)
}
inline std::string* CavpEcdsaSigGenTest::_internal_mutable_msg() {
  
  return msg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpEcdsaSigGenTest::release_msg() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpEcdsaSigGenTest.msg)
  return msg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpEcdsaSigGenTest::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpEcdsaSigGenTest.msg)
}

// -------------------------------------------------------------------

// CavpEcdsaSigGenTestResult

// .nugget.app.protoapi.DcryptError result_code = 1;
inline void CavpEcdsaSigGenTestResult::clear_result_code() {
  result_code_ = 0;
}
inline ::nugget::app::protoapi::DcryptError CavpEcdsaSigGenTestResult::_internal_result_code() const {
  return static_cast< ::nugget::app::protoapi::DcryptError >(result_code_);
}
inline ::nugget::app::protoapi::DcryptError CavpEcdsaSigGenTestResult::result_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaSigGenTestResult.result_code)
  return _internal_result_code();
}
inline void CavpEcdsaSigGenTestResult::_internal_set_result_code(::nugget::app::protoapi::DcryptError value) {
  
  result_code_ = value;
}
inline void CavpEcdsaSigGenTestResult::set_result_code(::nugget::app::protoapi::DcryptError value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaSigGenTestResult.result_code)
}

// bytes qx = 2;
inline void CavpEcdsaSigGenTestResult::clear_qx() {
  qx_.ClearToEmpty();
}
inline const std::string& CavpEcdsaSigGenTestResult::qx() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaSigGenTestResult.qx)
  return _internal_qx();
}
inline void CavpEcdsaSigGenTestResult::set_qx(const std::string& value) {
  _internal_set_qx(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaSigGenTestResult.qx)
}
inline std::string* CavpEcdsaSigGenTestResult::mutable_qx() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpEcdsaSigGenTestResult.qx)
  return _internal_mutable_qx();
}
inline const std::string& CavpEcdsaSigGenTestResult::_internal_qx() const {
  return qx_.Get();
}
inline void CavpEcdsaSigGenTestResult::_internal_set_qx(const std::string& value) {
  
  qx_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpEcdsaSigGenTestResult::set_qx(std::string&& value) {
  
  qx_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpEcdsaSigGenTestResult.qx)
}
inline void CavpEcdsaSigGenTestResult::set_qx(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  qx_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpEcdsaSigGenTestResult.qx)
}
inline void CavpEcdsaSigGenTestResult::set_qx(const void* value,
    size_t size) {
  
  qx_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpEcdsaSigGenTestResult.qx)
}
inline std::string* CavpEcdsaSigGenTestResult::_internal_mutable_qx() {
  
  return qx_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpEcdsaSigGenTestResult::release_qx() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpEcdsaSigGenTestResult.qx)
  return qx_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpEcdsaSigGenTestResult::set_allocated_qx(std::string* qx) {
  if (qx != nullptr) {
    
  } else {
    
  }
  qx_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), qx,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpEcdsaSigGenTestResult.qx)
}

// bytes qy = 3;
inline void CavpEcdsaSigGenTestResult::clear_qy() {
  qy_.ClearToEmpty();
}
inline const std::string& CavpEcdsaSigGenTestResult::qy() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaSigGenTestResult.qy)
  return _internal_qy();
}
inline void CavpEcdsaSigGenTestResult::set_qy(const std::string& value) {
  _internal_set_qy(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaSigGenTestResult.qy)
}
inline std::string* CavpEcdsaSigGenTestResult::mutable_qy() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpEcdsaSigGenTestResult.qy)
  return _internal_mutable_qy();
}
inline const std::string& CavpEcdsaSigGenTestResult::_internal_qy() const {
  return qy_.Get();
}
inline void CavpEcdsaSigGenTestResult::_internal_set_qy(const std::string& value) {
  
  qy_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpEcdsaSigGenTestResult::set_qy(std::string&& value) {
  
  qy_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpEcdsaSigGenTestResult.qy)
}
inline void CavpEcdsaSigGenTestResult::set_qy(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  qy_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpEcdsaSigGenTestResult.qy)
}
inline void CavpEcdsaSigGenTestResult::set_qy(const void* value,
    size_t size) {
  
  qy_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpEcdsaSigGenTestResult.qy)
}
inline std::string* CavpEcdsaSigGenTestResult::_internal_mutable_qy() {
  
  return qy_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpEcdsaSigGenTestResult::release_qy() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpEcdsaSigGenTestResult.qy)
  return qy_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpEcdsaSigGenTestResult::set_allocated_qy(std::string* qy) {
  if (qy != nullptr) {
    
  } else {
    
  }
  qy_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), qy,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpEcdsaSigGenTestResult.qy)
}

// bytes r = 4;
inline void CavpEcdsaSigGenTestResult::clear_r() {
  r_.ClearToEmpty();
}
inline const std::string& CavpEcdsaSigGenTestResult::r() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaSigGenTestResult.r)
  return _internal_r();
}
inline void CavpEcdsaSigGenTestResult::set_r(const std::string& value) {
  _internal_set_r(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaSigGenTestResult.r)
}
inline std::string* CavpEcdsaSigGenTestResult::mutable_r() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpEcdsaSigGenTestResult.r)
  return _internal_mutable_r();
}
inline const std::string& CavpEcdsaSigGenTestResult::_internal_r() const {
  return r_.Get();
}
inline void CavpEcdsaSigGenTestResult::_internal_set_r(const std::string& value) {
  
  r_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpEcdsaSigGenTestResult::set_r(std::string&& value) {
  
  r_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpEcdsaSigGenTestResult.r)
}
inline void CavpEcdsaSigGenTestResult::set_r(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  r_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpEcdsaSigGenTestResult.r)
}
inline void CavpEcdsaSigGenTestResult::set_r(const void* value,
    size_t size) {
  
  r_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpEcdsaSigGenTestResult.r)
}
inline std::string* CavpEcdsaSigGenTestResult::_internal_mutable_r() {
  
  return r_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpEcdsaSigGenTestResult::release_r() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpEcdsaSigGenTestResult.r)
  return r_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpEcdsaSigGenTestResult::set_allocated_r(std::string* r) {
  if (r != nullptr) {
    
  } else {
    
  }
  r_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), r,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpEcdsaSigGenTestResult.r)
}

// bytes sig = 5;
inline void CavpEcdsaSigGenTestResult::clear_sig() {
  sig_.ClearToEmpty();
}
inline const std::string& CavpEcdsaSigGenTestResult::sig() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaSigGenTestResult.sig)
  return _internal_sig();
}
inline void CavpEcdsaSigGenTestResult::set_sig(const std::string& value) {
  _internal_set_sig(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaSigGenTestResult.sig)
}
inline std::string* CavpEcdsaSigGenTestResult::mutable_sig() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpEcdsaSigGenTestResult.sig)
  return _internal_mutable_sig();
}
inline const std::string& CavpEcdsaSigGenTestResult::_internal_sig() const {
  return sig_.Get();
}
inline void CavpEcdsaSigGenTestResult::_internal_set_sig(const std::string& value) {
  
  sig_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpEcdsaSigGenTestResult::set_sig(std::string&& value) {
  
  sig_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpEcdsaSigGenTestResult.sig)
}
inline void CavpEcdsaSigGenTestResult::set_sig(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sig_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpEcdsaSigGenTestResult.sig)
}
inline void CavpEcdsaSigGenTestResult::set_sig(const void* value,
    size_t size) {
  
  sig_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpEcdsaSigGenTestResult.sig)
}
inline std::string* CavpEcdsaSigGenTestResult::_internal_mutable_sig() {
  
  return sig_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpEcdsaSigGenTestResult::release_sig() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpEcdsaSigGenTestResult.sig)
  return sig_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpEcdsaSigGenTestResult::set_allocated_sig(std::string* sig) {
  if (sig != nullptr) {
    
  } else {
    
  }
  sig_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sig,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpEcdsaSigGenTestResult.sig)
}

// -------------------------------------------------------------------

// CavpEcdsaSigVerTest

// bytes msg = 1;
inline void CavpEcdsaSigVerTest::clear_msg() {
  msg_.ClearToEmpty();
}
inline const std::string& CavpEcdsaSigVerTest::msg() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaSigVerTest.msg)
  return _internal_msg();
}
inline void CavpEcdsaSigVerTest::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaSigVerTest.msg)
}
inline std::string* CavpEcdsaSigVerTest::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpEcdsaSigVerTest.msg)
  return _internal_mutable_msg();
}
inline const std::string& CavpEcdsaSigVerTest::_internal_msg() const {
  return msg_.Get();
}
inline void CavpEcdsaSigVerTest::_internal_set_msg(const std::string& value) {
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpEcdsaSigVerTest::set_msg(std::string&& value) {
  
  msg_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpEcdsaSigVerTest.msg)
}
inline void CavpEcdsaSigVerTest::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpEcdsaSigVerTest.msg)
}
inline void CavpEcdsaSigVerTest::set_msg(const void* value,
    size_t size) {
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpEcdsaSigVerTest.msg)
}
inline std::string* CavpEcdsaSigVerTest::_internal_mutable_msg() {
  
  return msg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpEcdsaSigVerTest::release_msg() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpEcdsaSigVerTest.msg)
  return msg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpEcdsaSigVerTest::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpEcdsaSigVerTest.msg)
}

// bytes qx = 2;
inline void CavpEcdsaSigVerTest::clear_qx() {
  qx_.ClearToEmpty();
}
inline const std::string& CavpEcdsaSigVerTest::qx() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaSigVerTest.qx)
  return _internal_qx();
}
inline void CavpEcdsaSigVerTest::set_qx(const std::string& value) {
  _internal_set_qx(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaSigVerTest.qx)
}
inline std::string* CavpEcdsaSigVerTest::mutable_qx() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpEcdsaSigVerTest.qx)
  return _internal_mutable_qx();
}
inline const std::string& CavpEcdsaSigVerTest::_internal_qx() const {
  return qx_.Get();
}
inline void CavpEcdsaSigVerTest::_internal_set_qx(const std::string& value) {
  
  qx_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpEcdsaSigVerTest::set_qx(std::string&& value) {
  
  qx_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpEcdsaSigVerTest.qx)
}
inline void CavpEcdsaSigVerTest::set_qx(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  qx_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpEcdsaSigVerTest.qx)
}
inline void CavpEcdsaSigVerTest::set_qx(const void* value,
    size_t size) {
  
  qx_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpEcdsaSigVerTest.qx)
}
inline std::string* CavpEcdsaSigVerTest::_internal_mutable_qx() {
  
  return qx_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpEcdsaSigVerTest::release_qx() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpEcdsaSigVerTest.qx)
  return qx_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpEcdsaSigVerTest::set_allocated_qx(std::string* qx) {
  if (qx != nullptr) {
    
  } else {
    
  }
  qx_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), qx,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpEcdsaSigVerTest.qx)
}

// bytes qy = 3;
inline void CavpEcdsaSigVerTest::clear_qy() {
  qy_.ClearToEmpty();
}
inline const std::string& CavpEcdsaSigVerTest::qy() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaSigVerTest.qy)
  return _internal_qy();
}
inline void CavpEcdsaSigVerTest::set_qy(const std::string& value) {
  _internal_set_qy(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaSigVerTest.qy)
}
inline std::string* CavpEcdsaSigVerTest::mutable_qy() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpEcdsaSigVerTest.qy)
  return _internal_mutable_qy();
}
inline const std::string& CavpEcdsaSigVerTest::_internal_qy() const {
  return qy_.Get();
}
inline void CavpEcdsaSigVerTest::_internal_set_qy(const std::string& value) {
  
  qy_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpEcdsaSigVerTest::set_qy(std::string&& value) {
  
  qy_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpEcdsaSigVerTest.qy)
}
inline void CavpEcdsaSigVerTest::set_qy(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  qy_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpEcdsaSigVerTest.qy)
}
inline void CavpEcdsaSigVerTest::set_qy(const void* value,
    size_t size) {
  
  qy_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpEcdsaSigVerTest.qy)
}
inline std::string* CavpEcdsaSigVerTest::_internal_mutable_qy() {
  
  return qy_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpEcdsaSigVerTest::release_qy() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpEcdsaSigVerTest.qy)
  return qy_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpEcdsaSigVerTest::set_allocated_qy(std::string* qy) {
  if (qy != nullptr) {
    
  } else {
    
  }
  qy_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), qy,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpEcdsaSigVerTest.qy)
}

// bytes r = 4;
inline void CavpEcdsaSigVerTest::clear_r() {
  r_.ClearToEmpty();
}
inline const std::string& CavpEcdsaSigVerTest::r() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaSigVerTest.r)
  return _internal_r();
}
inline void CavpEcdsaSigVerTest::set_r(const std::string& value) {
  _internal_set_r(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaSigVerTest.r)
}
inline std::string* CavpEcdsaSigVerTest::mutable_r() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpEcdsaSigVerTest.r)
  return _internal_mutable_r();
}
inline const std::string& CavpEcdsaSigVerTest::_internal_r() const {
  return r_.Get();
}
inline void CavpEcdsaSigVerTest::_internal_set_r(const std::string& value) {
  
  r_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpEcdsaSigVerTest::set_r(std::string&& value) {
  
  r_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpEcdsaSigVerTest.r)
}
inline void CavpEcdsaSigVerTest::set_r(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  r_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpEcdsaSigVerTest.r)
}
inline void CavpEcdsaSigVerTest::set_r(const void* value,
    size_t size) {
  
  r_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpEcdsaSigVerTest.r)
}
inline std::string* CavpEcdsaSigVerTest::_internal_mutable_r() {
  
  return r_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpEcdsaSigVerTest::release_r() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpEcdsaSigVerTest.r)
  return r_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpEcdsaSigVerTest::set_allocated_r(std::string* r) {
  if (r != nullptr) {
    
  } else {
    
  }
  r_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), r,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpEcdsaSigVerTest.r)
}

// bytes sig = 5;
inline void CavpEcdsaSigVerTest::clear_sig() {
  sig_.ClearToEmpty();
}
inline const std::string& CavpEcdsaSigVerTest::sig() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaSigVerTest.sig)
  return _internal_sig();
}
inline void CavpEcdsaSigVerTest::set_sig(const std::string& value) {
  _internal_set_sig(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaSigVerTest.sig)
}
inline std::string* CavpEcdsaSigVerTest::mutable_sig() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpEcdsaSigVerTest.sig)
  return _internal_mutable_sig();
}
inline const std::string& CavpEcdsaSigVerTest::_internal_sig() const {
  return sig_.Get();
}
inline void CavpEcdsaSigVerTest::_internal_set_sig(const std::string& value) {
  
  sig_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpEcdsaSigVerTest::set_sig(std::string&& value) {
  
  sig_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpEcdsaSigVerTest.sig)
}
inline void CavpEcdsaSigVerTest::set_sig(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sig_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpEcdsaSigVerTest.sig)
}
inline void CavpEcdsaSigVerTest::set_sig(const void* value,
    size_t size) {
  
  sig_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpEcdsaSigVerTest.sig)
}
inline std::string* CavpEcdsaSigVerTest::_internal_mutable_sig() {
  
  return sig_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpEcdsaSigVerTest::release_sig() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpEcdsaSigVerTest.sig)
  return sig_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpEcdsaSigVerTest::set_allocated_sig(std::string* sig) {
  if (sig != nullptr) {
    
  } else {
    
  }
  sig_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sig,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpEcdsaSigVerTest.sig)
}

// -------------------------------------------------------------------

// CavpEcdsaSigVerTestResult

// .nugget.app.protoapi.DcryptError result_code = 1;
inline void CavpEcdsaSigVerTestResult::clear_result_code() {
  result_code_ = 0;
}
inline ::nugget::app::protoapi::DcryptError CavpEcdsaSigVerTestResult::_internal_result_code() const {
  return static_cast< ::nugget::app::protoapi::DcryptError >(result_code_);
}
inline ::nugget::app::protoapi::DcryptError CavpEcdsaSigVerTestResult::result_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaSigVerTestResult.result_code)
  return _internal_result_code();
}
inline void CavpEcdsaSigVerTestResult::_internal_set_result_code(::nugget::app::protoapi::DcryptError value) {
  
  result_code_ = value;
}
inline void CavpEcdsaSigVerTestResult::set_result_code(::nugget::app::protoapi::DcryptError value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaSigVerTestResult.result_code)
}

// bool result = 2;
inline void CavpEcdsaSigVerTestResult::clear_result() {
  result_ = false;
}
inline bool CavpEcdsaSigVerTestResult::_internal_result() const {
  return result_;
}
inline bool CavpEcdsaSigVerTestResult::result() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpEcdsaSigVerTestResult.result)
  return _internal_result();
}
inline void CavpEcdsaSigVerTestResult::_internal_set_result(bool value) {
  
  result_ = value;
}
inline void CavpEcdsaSigVerTestResult::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpEcdsaSigVerTestResult.result)
}

// -------------------------------------------------------------------

// CavpCmacGenTest

// uint32 offset = 1;
inline void CavpCmacGenTest::clear_offset() {
  offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpCmacGenTest::_internal_offset() const {
  return offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpCmacGenTest::offset() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpCmacGenTest.offset)
  return _internal_offset();
}
inline void CavpCmacGenTest::_internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  offset_ = value;
}
inline void CavpCmacGenTest::set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpCmacGenTest.offset)
}

// uint32 key_size = 2;
inline void CavpCmacGenTest::clear_key_size() {
  key_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpCmacGenTest::_internal_key_size() const {
  return key_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpCmacGenTest::key_size() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpCmacGenTest.key_size)
  return _internal_key_size();
}
inline void CavpCmacGenTest::_internal_set_key_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  key_size_ = value;
}
inline void CavpCmacGenTest::set_key_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_key_size(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpCmacGenTest.key_size)
}

// uint32 mac_len = 3;
inline void CavpCmacGenTest::clear_mac_len() {
  mac_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpCmacGenTest::_internal_mac_len() const {
  return mac_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpCmacGenTest::mac_len() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpCmacGenTest.mac_len)
  return _internal_mac_len();
}
inline void CavpCmacGenTest::_internal_set_mac_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  mac_len_ = value;
}
inline void CavpCmacGenTest::set_mac_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mac_len(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpCmacGenTest.mac_len)
}

// uint32 total_len = 4;
inline void CavpCmacGenTest::clear_total_len() {
  total_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpCmacGenTest::_internal_total_len() const {
  return total_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CavpCmacGenTest::total_len() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpCmacGenTest.total_len)
  return _internal_total_len();
}
inline void CavpCmacGenTest::_internal_set_total_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  total_len_ = value;
}
inline void CavpCmacGenTest::set_total_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_len(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpCmacGenTest.total_len)
}

// bytes key = 5;
inline void CavpCmacGenTest::clear_key() {
  key_.ClearToEmpty();
}
inline const std::string& CavpCmacGenTest::key() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpCmacGenTest.key)
  return _internal_key();
}
inline void CavpCmacGenTest::set_key(const std::string& value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpCmacGenTest.key)
}
inline std::string* CavpCmacGenTest::mutable_key() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpCmacGenTest.key)
  return _internal_mutable_key();
}
inline const std::string& CavpCmacGenTest::_internal_key() const {
  return key_.Get();
}
inline void CavpCmacGenTest::_internal_set_key(const std::string& value) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpCmacGenTest::set_key(std::string&& value) {
  
  key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpCmacGenTest.key)
}
inline void CavpCmacGenTest::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpCmacGenTest.key)
}
inline void CavpCmacGenTest::set_key(const void* value,
    size_t size) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpCmacGenTest.key)
}
inline std::string* CavpCmacGenTest::_internal_mutable_key() {
  
  return key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpCmacGenTest::release_key() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpCmacGenTest.key)
  return key_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpCmacGenTest::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpCmacGenTest.key)
}

// bytes msg = 6;
inline void CavpCmacGenTest::clear_msg() {
  msg_.ClearToEmpty();
}
inline const std::string& CavpCmacGenTest::msg() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpCmacGenTest.msg)
  return _internal_msg();
}
inline void CavpCmacGenTest::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpCmacGenTest.msg)
}
inline std::string* CavpCmacGenTest::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpCmacGenTest.msg)
  return _internal_mutable_msg();
}
inline const std::string& CavpCmacGenTest::_internal_msg() const {
  return msg_.Get();
}
inline void CavpCmacGenTest::_internal_set_msg(const std::string& value) {
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpCmacGenTest::set_msg(std::string&& value) {
  
  msg_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpCmacGenTest.msg)
}
inline void CavpCmacGenTest::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpCmacGenTest.msg)
}
inline void CavpCmacGenTest::set_msg(const void* value,
    size_t size) {
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpCmacGenTest.msg)
}
inline std::string* CavpCmacGenTest::_internal_mutable_msg() {
  
  return msg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpCmacGenTest::release_msg() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpCmacGenTest.msg)
  return msg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpCmacGenTest::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpCmacGenTest.msg)
}

// -------------------------------------------------------------------

// CavpCmacGenTestResult

// .nugget.app.protoapi.DcryptError result_code = 1;
inline void CavpCmacGenTestResult::clear_result_code() {
  result_code_ = 0;
}
inline ::nugget::app::protoapi::DcryptError CavpCmacGenTestResult::_internal_result_code() const {
  return static_cast< ::nugget::app::protoapi::DcryptError >(result_code_);
}
inline ::nugget::app::protoapi::DcryptError CavpCmacGenTestResult::result_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpCmacGenTestResult.result_code)
  return _internal_result_code();
}
inline void CavpCmacGenTestResult::_internal_set_result_code(::nugget::app::protoapi::DcryptError value) {
  
  result_code_ = value;
}
inline void CavpCmacGenTestResult::set_result_code(::nugget::app::protoapi::DcryptError value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpCmacGenTestResult.result_code)
}

// bytes mac = 2;
inline void CavpCmacGenTestResult::clear_mac() {
  mac_.ClearToEmpty();
}
inline const std::string& CavpCmacGenTestResult::mac() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.CavpCmacGenTestResult.mac)
  return _internal_mac();
}
inline void CavpCmacGenTestResult::set_mac(const std::string& value) {
  _internal_set_mac(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.CavpCmacGenTestResult.mac)
}
inline std::string* CavpCmacGenTestResult::mutable_mac() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.CavpCmacGenTestResult.mac)
  return _internal_mutable_mac();
}
inline const std::string& CavpCmacGenTestResult::_internal_mac() const {
  return mac_.Get();
}
inline void CavpCmacGenTestResult::_internal_set_mac(const std::string& value) {
  
  mac_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CavpCmacGenTestResult::set_mac(std::string&& value) {
  
  mac_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.CavpCmacGenTestResult.mac)
}
inline void CavpCmacGenTestResult::set_mac(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  mac_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.CavpCmacGenTestResult.mac)
}
inline void CavpCmacGenTestResult::set_mac(const void* value,
    size_t size) {
  
  mac_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.CavpCmacGenTestResult.mac)
}
inline std::string* CavpCmacGenTestResult::_internal_mutable_mac() {
  
  return mac_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CavpCmacGenTestResult::release_mac() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.CavpCmacGenTestResult.mac)
  return mac_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CavpCmacGenTestResult::set_allocated_mac(std::string* mac) {
  if (mac != nullptr) {
    
  } else {
    
  }
  mac_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mac,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.CavpCmacGenTestResult.mac)
}

// -------------------------------------------------------------------

// TrngTest

// uint32 number_of_bytes = 1;
inline void TrngTest::clear_number_of_bytes() {
  number_of_bytes_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TrngTest::_internal_number_of_bytes() const {
  return number_of_bytes_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TrngTest::number_of_bytes() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.TrngTest.number_of_bytes)
  return _internal_number_of_bytes();
}
inline void TrngTest::_internal_set_number_of_bytes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  number_of_bytes_ = value;
}
inline void TrngTest::set_number_of_bytes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_number_of_bytes(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.TrngTest.number_of_bytes)
}

// -------------------------------------------------------------------

// AesCmacTest

// bytes key = 1;
inline void AesCmacTest::clear_key() {
  key_.ClearToEmpty();
}
inline const std::string& AesCmacTest::key() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCmacTest.key)
  return _internal_key();
}
inline void AesCmacTest::set_key(const std::string& value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCmacTest.key)
}
inline std::string* AesCmacTest::mutable_key() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.AesCmacTest.key)
  return _internal_mutable_key();
}
inline const std::string& AesCmacTest::_internal_key() const {
  return key_.Get();
}
inline void AesCmacTest::_internal_set_key(const std::string& value) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AesCmacTest::set_key(std::string&& value) {
  
  key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.AesCmacTest.key)
}
inline void AesCmacTest::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.AesCmacTest.key)
}
inline void AesCmacTest::set_key(const void* value,
    size_t size) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.AesCmacTest.key)
}
inline std::string* AesCmacTest::_internal_mutable_key() {
  
  return key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AesCmacTest::release_key() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.AesCmacTest.key)
  return key_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AesCmacTest::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.AesCmacTest.key)
}

// bytes plain_text = 2;
inline void AesCmacTest::clear_plain_text() {
  plain_text_.ClearToEmpty();
}
inline const std::string& AesCmacTest::plain_text() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCmacTest.plain_text)
  return _internal_plain_text();
}
inline void AesCmacTest::set_plain_text(const std::string& value) {
  _internal_set_plain_text(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCmacTest.plain_text)
}
inline std::string* AesCmacTest::mutable_plain_text() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.AesCmacTest.plain_text)
  return _internal_mutable_plain_text();
}
inline const std::string& AesCmacTest::_internal_plain_text() const {
  return plain_text_.Get();
}
inline void AesCmacTest::_internal_set_plain_text(const std::string& value) {
  
  plain_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AesCmacTest::set_plain_text(std::string&& value) {
  
  plain_text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.AesCmacTest.plain_text)
}
inline void AesCmacTest::set_plain_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  plain_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.AesCmacTest.plain_text)
}
inline void AesCmacTest::set_plain_text(const void* value,
    size_t size) {
  
  plain_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.AesCmacTest.plain_text)
}
inline std::string* AesCmacTest::_internal_mutable_plain_text() {
  
  return plain_text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AesCmacTest::release_plain_text() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.AesCmacTest.plain_text)
  return plain_text_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AesCmacTest::set_allocated_plain_text(std::string* plain_text) {
  if (plain_text != nullptr) {
    
  } else {
    
  }
  plain_text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), plain_text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.AesCmacTest.plain_text)
}

// -------------------------------------------------------------------

// AesCmacTestResult

// .nugget.app.protoapi.DcryptError result_code = 1;
inline void AesCmacTestResult::clear_result_code() {
  result_code_ = 0;
}
inline ::nugget::app::protoapi::DcryptError AesCmacTestResult::_internal_result_code() const {
  return static_cast< ::nugget::app::protoapi::DcryptError >(result_code_);
}
inline ::nugget::app::protoapi::DcryptError AesCmacTestResult::result_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCmacTestResult.result_code)
  return _internal_result_code();
}
inline void AesCmacTestResult::_internal_set_result_code(::nugget::app::protoapi::DcryptError value) {
  
  result_code_ = value;
}
inline void AesCmacTestResult::set_result_code(::nugget::app::protoapi::DcryptError value) {
  _internal_set_result_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCmacTestResult.result_code)
}

// bytes cmac = 2;
inline void AesCmacTestResult::clear_cmac() {
  cmac_.ClearToEmpty();
}
inline const std::string& AesCmacTestResult::cmac() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.AesCmacTestResult.cmac)
  return _internal_cmac();
}
inline void AesCmacTestResult::set_cmac(const std::string& value) {
  _internal_set_cmac(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.AesCmacTestResult.cmac)
}
inline std::string* AesCmacTestResult::mutable_cmac() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.AesCmacTestResult.cmac)
  return _internal_mutable_cmac();
}
inline const std::string& AesCmacTestResult::_internal_cmac() const {
  return cmac_.Get();
}
inline void AesCmacTestResult::_internal_set_cmac(const std::string& value) {
  
  cmac_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AesCmacTestResult::set_cmac(std::string&& value) {
  
  cmac_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.AesCmacTestResult.cmac)
}
inline void AesCmacTestResult::set_cmac(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cmac_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.AesCmacTestResult.cmac)
}
inline void AesCmacTestResult::set_cmac(const void* value,
    size_t size) {
  
  cmac_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.AesCmacTestResult.cmac)
}
inline std::string* AesCmacTestResult::_internal_mutable_cmac() {
  
  return cmac_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AesCmacTestResult::release_cmac() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.AesCmacTestResult.cmac)
  return cmac_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AesCmacTestResult::set_allocated_cmac(std::string* cmac) {
  if (cmac != nullptr) {
    
  } else {
    
  }
  cmac_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cmac,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.AesCmacTestResult.cmac)
}

// -------------------------------------------------------------------

// TrngTestResult

// bytes random_bytes = 1;
inline void TrngTestResult::clear_random_bytes() {
  random_bytes_.ClearToEmpty();
}
inline const std::string& TrngTestResult::random_bytes() const {
  // @@protoc_insertion_point(field_get:nugget.app.protoapi.TrngTestResult.random_bytes)
  return _internal_random_bytes();
}
inline void TrngTestResult::set_random_bytes(const std::string& value) {
  _internal_set_random_bytes(value);
  // @@protoc_insertion_point(field_set:nugget.app.protoapi.TrngTestResult.random_bytes)
}
inline std::string* TrngTestResult::mutable_random_bytes() {
  // @@protoc_insertion_point(field_mutable:nugget.app.protoapi.TrngTestResult.random_bytes)
  return _internal_mutable_random_bytes();
}
inline const std::string& TrngTestResult::_internal_random_bytes() const {
  return random_bytes_.Get();
}
inline void TrngTestResult::_internal_set_random_bytes(const std::string& value) {
  
  random_bytes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void TrngTestResult::set_random_bytes(std::string&& value) {
  
  random_bytes_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.protoapi.TrngTestResult.random_bytes)
}
inline void TrngTestResult::set_random_bytes(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  random_bytes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.protoapi.TrngTestResult.random_bytes)
}
inline void TrngTestResult::set_random_bytes(const void* value,
    size_t size) {
  
  random_bytes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.protoapi.TrngTestResult.random_bytes)
}
inline std::string* TrngTestResult::_internal_mutable_random_bytes() {
  
  return random_bytes_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* TrngTestResult::release_random_bytes() {
  // @@protoc_insertion_point(field_release:nugget.app.protoapi.TrngTestResult.random_bytes)
  return random_bytes_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TrngTestResult::set_allocated_random_bytes(std::string* random_bytes) {
  if (random_bytes != nullptr) {
    
  } else {
    
  }
  random_bytes_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), random_bytes,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.protoapi.TrngTestResult.random_bytes)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protoapi
}  // namespace app
}  // namespace nugget

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::nugget::app::protoapi::KeySize> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nugget::app::protoapi::KeySize>() {
  return ::nugget::app::protoapi::KeySize_descriptor();
}
template <> struct is_proto_enum< ::nugget::app::protoapi::DcryptError> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nugget::app::protoapi::DcryptError>() {
  return ::nugget::app::protoapi::DcryptError_descriptor();
}
template <> struct is_proto_enum< ::nugget::app::protoapi::OneofTestParametersCase> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nugget::app::protoapi::OneofTestParametersCase>() {
  return ::nugget::app::protoapi::OneofTestParametersCase_descriptor();
}
template <> struct is_proto_enum< ::nugget::app::protoapi::OneofTestResultsCase> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nugget::app::protoapi::OneofTestResultsCase>() {
  return ::nugget::app::protoapi::OneofTestResultsCase_descriptor();
}
template <> struct is_proto_enum< ::nugget::app::protoapi::CavpEncryptMode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nugget::app::protoapi::CavpEncryptMode>() {
  return ::nugget::app::protoapi::CavpEncryptMode_descriptor();
}
template <> struct is_proto_enum< ::nugget::app::protoapi::CavpShaAlgorithm> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nugget::app::protoapi::CavpShaAlgorithm>() {
  return ::nugget::app::protoapi::CavpShaAlgorithm_descriptor();
}
template <> struct is_proto_enum< ::nugget::app::protoapi::CavpRsaMRTable> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nugget::app::protoapi::CavpRsaMRTable>() {
  return ::nugget::app::protoapi::CavpRsaMRTable_descriptor();
}
template <> struct is_proto_enum< ::nugget::app::protoapi::CavpRsaPaddingType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nugget::app::protoapi::CavpRsaPaddingType>() {
  return ::nugget::app::protoapi::CavpRsaPaddingType_descriptor();
}
template <> struct is_proto_enum< ::nugget::app::protoapi::CavpRsaSigVerResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nugget::app::protoapi::CavpRsaSigVerResult>() {
  return ::nugget::app::protoapi::CavpRsaSigVerResult_descriptor();
}
template <> struct is_proto_enum< ::nugget::app::protoapi::CavpEcdsaKeyGenTable> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nugget::app::protoapi::CavpEcdsaKeyGenTable>() {
  return ::nugget::app::protoapi::CavpEcdsaKeyGenTable_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_nugget_2fapp_2fprotoapi_2ftesting_5fapi_2eproto
