// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nugget/app/keymaster/keymaster_types.proto

#include "nugget/app/keymaster/keymaster_types.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace nugget {
namespace app {
namespace keymaster {
constexpr KeyParameter::KeyParameter(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : blob_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tag_(0)

  , integer_(0u)
  , long_integer_(PROTOBUF_ULONGLONG(0)){}
struct KeyParameterDefaultTypeInternal {
  constexpr KeyParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~KeyParameterDefaultTypeInternal() {}
  union {
    KeyParameter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT KeyParameterDefaultTypeInternal _KeyParameter_default_instance_;
constexpr KeyParameters::KeyParameters(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : params_(){}
struct KeyParametersDefaultTypeInternal {
  constexpr KeyParametersDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~KeyParametersDefaultTypeInternal() {}
  union {
    KeyParameters _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT KeyParametersDefaultTypeInternal _KeyParameters_default_instance_;
constexpr KeyBlob::KeyBlob(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : blob_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct KeyBlobDefaultTypeInternal {
  constexpr KeyBlobDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~KeyBlobDefaultTypeInternal() {}
  union {
    KeyBlob _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT KeyBlobDefaultTypeInternal _KeyBlob_default_instance_;
constexpr OperationHandle::OperationHandle(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : handle_(PROTOBUF_ULONGLONG(0)){}
struct OperationHandleDefaultTypeInternal {
  constexpr OperationHandleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OperationHandleDefaultTypeInternal() {}
  union {
    OperationHandle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OperationHandleDefaultTypeInternal _OperationHandle_default_instance_;
constexpr Certificate::Certificate(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CertificateDefaultTypeInternal {
  constexpr CertificateDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CertificateDefaultTypeInternal() {}
  union {
    Certificate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CertificateDefaultTypeInternal _Certificate_default_instance_;
constexpr CertificateChain::CertificateChain(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : certificates_(){}
struct CertificateChainDefaultTypeInternal {
  constexpr CertificateChainDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CertificateChainDefaultTypeInternal() {}
  union {
    CertificateChain _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CertificateChainDefaultTypeInternal _CertificateChain_default_instance_;
constexpr KeyCharacteristics::KeyCharacteristics(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : software_enforced_(nullptr)
  , tee_enforced_(nullptr){}
struct KeyCharacteristicsDefaultTypeInternal {
  constexpr KeyCharacteristicsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~KeyCharacteristicsDefaultTypeInternal() {}
  union {
    KeyCharacteristics _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT KeyCharacteristicsDefaultTypeInternal _KeyCharacteristics_default_instance_;
constexpr HmacSharingParameters::HmacSharingParameters(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : seed_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , nonce_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct HmacSharingParametersDefaultTypeInternal {
  constexpr HmacSharingParametersDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HmacSharingParametersDefaultTypeInternal() {}
  union {
    HmacSharingParameters _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HmacSharingParametersDefaultTypeInternal _HmacSharingParameters_default_instance_;
constexpr HardwareAuthToken::HardwareAuthToken(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mac_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , challenge_(PROTOBUF_ULONGLONG(0))
  , user_id_(PROTOBUF_ULONGLONG(0))
  , authenticator_id_(PROTOBUF_ULONGLONG(0))
  , timestamp_(PROTOBUF_ULONGLONG(0))
  , authenticator_type_(0u){}
struct HardwareAuthTokenDefaultTypeInternal {
  constexpr HardwareAuthTokenDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HardwareAuthTokenDefaultTypeInternal() {}
  union {
    HardwareAuthToken _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HardwareAuthTokenDefaultTypeInternal _HardwareAuthToken_default_instance_;
constexpr VerificationToken::VerificationToken(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mac_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , params_verified_(nullptr)
  , challenge_(PROTOBUF_ULONGLONG(0))
  , timestamp_(PROTOBUF_ULONGLONG(0))
  , security_level_(0)
{}
struct VerificationTokenDefaultTypeInternal {
  constexpr VerificationTokenDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VerificationTokenDefaultTypeInternal() {}
  union {
    VerificationToken _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VerificationTokenDefaultTypeInternal _VerificationToken_default_instance_;
constexpr RSAKey::RSAKey(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : d_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , n_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , e_(0u){}
struct RSAKeyDefaultTypeInternal {
  constexpr RSAKeyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RSAKeyDefaultTypeInternal() {}
  union {
    RSAKey _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RSAKeyDefaultTypeInternal _RSAKey_default_instance_;
constexpr ECKey::ECKey(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : d_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , x_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , y_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , curve_id_(0u){}
struct ECKeyDefaultTypeInternal {
  constexpr ECKeyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ECKeyDefaultTypeInternal() {}
  union {
    ECKey _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ECKeyDefaultTypeInternal _ECKey_default_instance_;
constexpr SymmetricKey::SymmetricKey(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : material_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SymmetricKeyDefaultTypeInternal {
  constexpr SymmetricKeyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SymmetricKeyDefaultTypeInternal() {}
  union {
    SymmetricKey _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SymmetricKeyDefaultTypeInternal _SymmetricKey_default_instance_;
constexpr VigoKey::VigoKey(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : x_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct VigoKeyDefaultTypeInternal {
  constexpr VigoKeyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VigoKeyDefaultTypeInternal() {}
  union {
    VigoKey _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VigoKeyDefaultTypeInternal _VigoKey_default_instance_;
constexpr VigoSignature::VigoSignature(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : r_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , s_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct VigoSignatureDefaultTypeInternal {
  constexpr VigoSignatureDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VigoSignatureDefaultTypeInternal() {}
  union {
    VigoSignature _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VigoSignatureDefaultTypeInternal _VigoSignature_default_instance_;
constexpr VigoSecret::VigoSecret(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : material_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , iv_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tag_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct VigoSecretDefaultTypeInternal {
  constexpr VigoSecretDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VigoSecretDefaultTypeInternal() {}
  union {
    VigoSecret _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VigoSecretDefaultTypeInternal _VigoSecret_default_instance_;
}  // namespace keymaster
}  // namespace app
}  // namespace nugget
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto[16];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::KeyParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::KeyParameter, tag_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::KeyParameter, integer_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::KeyParameter, long_integer_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::KeyParameter, blob_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::KeyParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::KeyParameters, params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::KeyBlob, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::KeyBlob, blob_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::OperationHandle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::OperationHandle, handle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::Certificate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::Certificate, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::CertificateChain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::CertificateChain, certificates_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::KeyCharacteristics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::KeyCharacteristics, software_enforced_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::KeyCharacteristics, tee_enforced_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::HmacSharingParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::HmacSharingParameters, seed_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::HmacSharingParameters, nonce_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::HardwareAuthToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::HardwareAuthToken, challenge_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::HardwareAuthToken, user_id_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::HardwareAuthToken, authenticator_id_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::HardwareAuthToken, timestamp_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::HardwareAuthToken, mac_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::HardwareAuthToken, authenticator_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::VerificationToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::VerificationToken, challenge_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::VerificationToken, timestamp_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::VerificationToken, params_verified_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::VerificationToken, security_level_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::VerificationToken, mac_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::RSAKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::RSAKey, e_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::RSAKey, d_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::RSAKey, n_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::ECKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::ECKey, curve_id_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::ECKey, d_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::ECKey, x_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::ECKey, y_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::SymmetricKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::SymmetricKey, material_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::VigoKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::VigoKey, x_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::VigoSignature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::VigoSignature, r_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::VigoSignature, s_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::VigoSecret, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::VigoSecret, material_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::VigoSecret, iv_),
  PROTOBUF_FIELD_OFFSET(::nugget::app::keymaster::VigoSecret, tag_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::nugget::app::keymaster::KeyParameter)},
  { 9, -1, sizeof(::nugget::app::keymaster::KeyParameters)},
  { 15, -1, sizeof(::nugget::app::keymaster::KeyBlob)},
  { 21, -1, sizeof(::nugget::app::keymaster::OperationHandle)},
  { 27, -1, sizeof(::nugget::app::keymaster::Certificate)},
  { 33, -1, sizeof(::nugget::app::keymaster::CertificateChain)},
  { 39, -1, sizeof(::nugget::app::keymaster::KeyCharacteristics)},
  { 46, -1, sizeof(::nugget::app::keymaster::HmacSharingParameters)},
  { 53, -1, sizeof(::nugget::app::keymaster::HardwareAuthToken)},
  { 64, -1, sizeof(::nugget::app::keymaster::VerificationToken)},
  { 74, -1, sizeof(::nugget::app::keymaster::RSAKey)},
  { 82, -1, sizeof(::nugget::app::keymaster::ECKey)},
  { 91, -1, sizeof(::nugget::app::keymaster::SymmetricKey)},
  { 97, -1, sizeof(::nugget::app::keymaster::VigoKey)},
  { 103, -1, sizeof(::nugget::app::keymaster::VigoSignature)},
  { 110, -1, sizeof(::nugget::app::keymaster::VigoSecret)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::nugget::app::keymaster::_KeyParameter_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::nugget::app::keymaster::_KeyParameters_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::nugget::app::keymaster::_KeyBlob_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::nugget::app::keymaster::_OperationHandle_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::nugget::app::keymaster::_Certificate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::nugget::app::keymaster::_CertificateChain_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::nugget::app::keymaster::_KeyCharacteristics_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::nugget::app::keymaster::_HmacSharingParameters_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::nugget::app::keymaster::_HardwareAuthToken_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::nugget::app::keymaster::_VerificationToken_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::nugget::app::keymaster::_RSAKey_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::nugget::app::keymaster::_ECKey_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::nugget::app::keymaster::_SymmetricKey_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::nugget::app::keymaster::_VigoKey_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::nugget::app::keymaster::_VigoSignature_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::nugget::app::keymaster::_VigoSecret_default_instance_),
};

const char descriptor_table_protodef_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n*nugget/app/keymaster/keymaster_types.p"
  "roto\022\024nugget.app.keymaster\032)nugget/app/k"
  "eymaster/keymaster_defs.proto\"k\n\014KeyPara"
  "meter\022&\n\003tag\030\001 \001(\0162\031.nugget.app.keymaste"
  "r.Tag\022\017\n\007integer\030\002 \001(\r\022\024\n\014long_integer\030\003"
  " \001(\004\022\014\n\004blob\030\004 \001(\014\"C\n\rKeyParameters\0222\n\006p"
  "arams\030\001 \003(\0132\".nugget.app.keymaster.KeyPa"
  "rameter\"\027\n\007KeyBlob\022\014\n\004blob\030\001 \001(\014\"!\n\017Oper"
  "ationHandle\022\016\n\006handle\030\001 \001(\004\"\033\n\013Certifica"
  "te\022\014\n\004data\030\001 \001(\014\"K\n\020CertificateChain\0227\n\014"
  "certificates\030\001 \003(\0132!.nugget.app.keymaste"
  "r.Certificate\"\217\001\n\022KeyCharacteristics\022>\n\021"
  "software_enforced\030\001 \001(\0132#.nugget.app.key"
  "master.KeyParameters\0229\n\014tee_enforced\030\002 \001"
  "(\0132#.nugget.app.keymaster.KeyParameters\""
  "4\n\025HmacSharingParameters\022\014\n\004seed\030\001 \001(\014\022\r"
  "\n\005nonce\030\002 \001(\014\"\215\001\n\021HardwareAuthToken\022\021\n\tc"
  "hallenge\030\001 \001(\004\022\017\n\007user_id\030\002 \001(\004\022\030\n\020authe"
  "nticator_id\030\003 \001(\004\022\021\n\ttimestamp\030\005 \001(\004\022\013\n\003"
  "mac\030\006 \001(\014\022\032\n\022authenticator_type\030\007 \001(\r\"\301\001"
  "\n\021VerificationToken\022\021\n\tchallenge\030\001 \001(\004\022\021"
  "\n\ttimestamp\030\002 \001(\004\022<\n\017params_verified\030\003 \001"
  "(\0132#.nugget.app.keymaster.KeyParameters\022"
  ";\n\016security_level\030\004 \001(\0162#.nugget.app.key"
  "master.SecurityLevel\022\013\n\003mac\030\005 \001(\014\")\n\006RSA"
  "Key\022\t\n\001e\030\001 \001(\r\022\t\n\001d\030\002 \001(\014\022\t\n\001n\030\003 \001(\014\":\n\005"
  "ECKey\022\020\n\010curve_id\030\001 \001(\r\022\t\n\001d\030\002 \001(\014\022\t\n\001x\030"
  "\003 \001(\014\022\t\n\001y\030\004 \001(\014\" \n\014SymmetricKey\022\020\n\010mate"
  "rial\030\001 \001(\014\"\024\n\007VigoKey\022\t\n\001x\030\001 \001(\014\"%\n\rVigo"
  "Signature\022\t\n\001r\030\001 \001(\014\022\t\n\001s\030\002 \001(\014\"7\n\nVigoS"
  "ecret\022\020\n\010material\030\001 \001(\014\022\n\n\002iv\030\002 \001(\014\022\013\n\003t"
  "ag\030\003 \001(\014*5\n\025PresharedSecretStatus\022\013\n\007NOT"
  "_SET\020\000\022\017\n\013ALREADY_SET\020\001*s\n\023AttestationSe"
  "lector\022\017\n\013ATTEST_TEST\020\000\022\020\n\014ATTEST_BATCH\020"
  "\001\022\025\n\021ATTEST_INDIVIDUAL\020\002\022\017\n\013ATTEST_SELF\020"
  "\003\022\021\n\rATTEST_CALLER\020\004b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto_deps[1] = {
  &::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_5fdefs_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto = {
  false, false, 1428, descriptor_table_protodef_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto, "nugget/app/keymaster/keymaster_types.proto", 
  &descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto_once, descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto_deps, 1, 16,
  schemas, file_default_instances, TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto::offsets,
  file_level_metadata_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto, file_level_enum_descriptors_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto, file_level_service_descriptors_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto);
  return descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto(&descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto);
namespace nugget {
namespace app {
namespace keymaster {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PresharedSecretStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto);
  return file_level_enum_descriptors_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto[0];
}
bool PresharedSecretStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AttestationSelector_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto);
  return file_level_enum_descriptors_nugget_2fapp_2fkeymaster_2fkeymaster_5ftypes_2eproto[1];
}
bool AttestationSelector_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class KeyParameter::_Internal {
 public:
};

KeyParameter::KeyParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:nugget.app.keymaster.KeyParameter)
}
KeyParameter::KeyParameter(const KeyParameter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  blob_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_blob().empty()) {
    blob_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_blob(), 
      GetArena());
  }
  ::memcpy(&tag_, &from.tag_,
    static_cast<size_t>(reinterpret_cast<char*>(&long_integer_) -
    reinterpret_cast<char*>(&tag_)) + sizeof(long_integer_));
  // @@protoc_insertion_point(copy_constructor:nugget.app.keymaster.KeyParameter)
}

void KeyParameter::SharedCtor() {
blob_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&tag_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&long_integer_) -
    reinterpret_cast<char*>(&tag_)) + sizeof(long_integer_));
}

KeyParameter::~KeyParameter() {
  // @@protoc_insertion_point(destructor:nugget.app.keymaster.KeyParameter)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void KeyParameter::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  blob_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void KeyParameter::ArenaDtor(void* object) {
  KeyParameter* _this = reinterpret_cast< KeyParameter* >(object);
  (void)_this;
}
void KeyParameter::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void KeyParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void KeyParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:nugget.app.keymaster.KeyParameter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blob_.ClearToEmpty();
  ::memset(&tag_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&long_integer_) -
      reinterpret_cast<char*>(&tag_)) + sizeof(long_integer_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeyParameter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .nugget.app.keymaster.Tag tag = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_tag(static_cast<::nugget::app::keymaster::Tag>(val));
        } else goto handle_unusual;
        continue;
      // uint32 integer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          integer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 long_integer = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          long_integer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes blob = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_blob();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* KeyParameter::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nugget.app.keymaster.KeyParameter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .nugget.app.keymaster.Tag tag = 1;
  if (this->tag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_tag(), target);
  }

  // uint32 integer = 2;
  if (this->integer() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_integer(), target);
  }

  // uint64 long_integer = 3;
  if (this->long_integer() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_long_integer(), target);
  }

  // bytes blob = 4;
  if (this->blob().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_blob(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nugget.app.keymaster.KeyParameter)
  return target;
}

size_t KeyParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nugget.app.keymaster.KeyParameter)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes blob = 4;
  if (this->blob().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_blob());
  }

  // .nugget.app.keymaster.Tag tag = 1;
  if (this->tag() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_tag());
  }

  // uint32 integer = 2;
  if (this->integer() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_integer());
  }

  // uint64 long_integer = 3;
  if (this->long_integer() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_long_integer());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyParameter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nugget.app.keymaster.KeyParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyParameter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<KeyParameter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nugget.app.keymaster.KeyParameter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nugget.app.keymaster.KeyParameter)
    MergeFrom(*source);
  }
}

void KeyParameter::MergeFrom(const KeyParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nugget.app.keymaster.KeyParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.blob().size() > 0) {
    _internal_set_blob(from._internal_blob());
  }
  if (from.tag() != 0) {
    _internal_set_tag(from._internal_tag());
  }
  if (from.integer() != 0) {
    _internal_set_integer(from._internal_integer());
  }
  if (from.long_integer() != 0) {
    _internal_set_long_integer(from._internal_long_integer());
  }
}

void KeyParameter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nugget.app.keymaster.KeyParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyParameter::CopyFrom(const KeyParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nugget.app.keymaster.KeyParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyParameter::IsInitialized() const {
  return true;
}

void KeyParameter::InternalSwap(KeyParameter* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  blob_.Swap(&other->blob_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(KeyParameter, long_integer_)
      + sizeof(KeyParameter::long_integer_)
      - PROTOBUF_FIELD_OFFSET(KeyParameter, tag_)>(
          reinterpret_cast<char*>(&tag_),
          reinterpret_cast<char*>(&other->tag_));
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyParameter::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class KeyParameters::_Internal {
 public:
};

KeyParameters::KeyParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  params_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:nugget.app.keymaster.KeyParameters)
}
KeyParameters::KeyParameters(const KeyParameters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      params_(from.params_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:nugget.app.keymaster.KeyParameters)
}

void KeyParameters::SharedCtor() {
}

KeyParameters::~KeyParameters() {
  // @@protoc_insertion_point(destructor:nugget.app.keymaster.KeyParameters)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void KeyParameters::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void KeyParameters::ArenaDtor(void* object) {
  KeyParameters* _this = reinterpret_cast< KeyParameters* >(object);
  (void)_this;
}
void KeyParameters::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void KeyParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void KeyParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:nugget.app.keymaster.KeyParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeyParameters::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .nugget.app.keymaster.KeyParameter params = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_params(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* KeyParameters::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nugget.app.keymaster.KeyParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .nugget.app.keymaster.KeyParameter params = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_params_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_params(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nugget.app.keymaster.KeyParameters)
  return target;
}

size_t KeyParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nugget.app.keymaster.KeyParameters)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .nugget.app.keymaster.KeyParameter params = 1;
  total_size += 1UL * this->_internal_params_size();
  for (const auto& msg : this->params_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyParameters::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nugget.app.keymaster.KeyParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyParameters* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<KeyParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nugget.app.keymaster.KeyParameters)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nugget.app.keymaster.KeyParameters)
    MergeFrom(*source);
  }
}

void KeyParameters::MergeFrom(const KeyParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nugget.app.keymaster.KeyParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
}

void KeyParameters::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nugget.app.keymaster.KeyParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyParameters::CopyFrom(const KeyParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nugget.app.keymaster.KeyParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyParameters::IsInitialized() const {
  return true;
}

void KeyParameters::InternalSwap(KeyParameters* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  params_.InternalSwap(&other->params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyParameters::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class KeyBlob::_Internal {
 public:
};

KeyBlob::KeyBlob(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:nugget.app.keymaster.KeyBlob)
}
KeyBlob::KeyBlob(const KeyBlob& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  blob_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_blob().empty()) {
    blob_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_blob(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:nugget.app.keymaster.KeyBlob)
}

void KeyBlob::SharedCtor() {
blob_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

KeyBlob::~KeyBlob() {
  // @@protoc_insertion_point(destructor:nugget.app.keymaster.KeyBlob)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void KeyBlob::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  blob_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void KeyBlob::ArenaDtor(void* object) {
  KeyBlob* _this = reinterpret_cast< KeyBlob* >(object);
  (void)_this;
}
void KeyBlob::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void KeyBlob::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void KeyBlob::Clear() {
// @@protoc_insertion_point(message_clear_start:nugget.app.keymaster.KeyBlob)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blob_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeyBlob::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes blob = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_blob();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* KeyBlob::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nugget.app.keymaster.KeyBlob)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes blob = 1;
  if (this->blob().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_blob(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nugget.app.keymaster.KeyBlob)
  return target;
}

size_t KeyBlob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nugget.app.keymaster.KeyBlob)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes blob = 1;
  if (this->blob().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_blob());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyBlob::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nugget.app.keymaster.KeyBlob)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyBlob* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<KeyBlob>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nugget.app.keymaster.KeyBlob)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nugget.app.keymaster.KeyBlob)
    MergeFrom(*source);
  }
}

void KeyBlob::MergeFrom(const KeyBlob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nugget.app.keymaster.KeyBlob)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.blob().size() > 0) {
    _internal_set_blob(from._internal_blob());
  }
}

void KeyBlob::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nugget.app.keymaster.KeyBlob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyBlob::CopyFrom(const KeyBlob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nugget.app.keymaster.KeyBlob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyBlob::IsInitialized() const {
  return true;
}

void KeyBlob::InternalSwap(KeyBlob* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  blob_.Swap(&other->blob_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyBlob::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class OperationHandle::_Internal {
 public:
};

OperationHandle::OperationHandle(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:nugget.app.keymaster.OperationHandle)
}
OperationHandle::OperationHandle(const OperationHandle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  handle_ = from.handle_;
  // @@protoc_insertion_point(copy_constructor:nugget.app.keymaster.OperationHandle)
}

void OperationHandle::SharedCtor() {
handle_ = PROTOBUF_ULONGLONG(0);
}

OperationHandle::~OperationHandle() {
  // @@protoc_insertion_point(destructor:nugget.app.keymaster.OperationHandle)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OperationHandle::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void OperationHandle::ArenaDtor(void* object) {
  OperationHandle* _this = reinterpret_cast< OperationHandle* >(object);
  (void)_this;
}
void OperationHandle::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OperationHandle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OperationHandle::Clear() {
// @@protoc_insertion_point(message_clear_start:nugget.app.keymaster.OperationHandle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OperationHandle::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          handle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OperationHandle::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nugget.app.keymaster.OperationHandle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 handle = 1;
  if (this->handle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_handle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nugget.app.keymaster.OperationHandle)
  return target;
}

size_t OperationHandle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nugget.app.keymaster.OperationHandle)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 handle = 1;
  if (this->handle() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_handle());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationHandle::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nugget.app.keymaster.OperationHandle)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationHandle* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OperationHandle>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nugget.app.keymaster.OperationHandle)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nugget.app.keymaster.OperationHandle)
    MergeFrom(*source);
  }
}

void OperationHandle::MergeFrom(const OperationHandle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nugget.app.keymaster.OperationHandle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle() != 0) {
    _internal_set_handle(from._internal_handle());
  }
}

void OperationHandle::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nugget.app.keymaster.OperationHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationHandle::CopyFrom(const OperationHandle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nugget.app.keymaster.OperationHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationHandle::IsInitialized() const {
  return true;
}

void OperationHandle::InternalSwap(OperationHandle* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(handle_, other->handle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OperationHandle::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Certificate::_Internal {
 public:
};

Certificate::Certificate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:nugget.app.keymaster.Certificate)
}
Certificate::Certificate(const Certificate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:nugget.app.keymaster.Certificate)
}

void Certificate::SharedCtor() {
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Certificate::~Certificate() {
  // @@protoc_insertion_point(destructor:nugget.app.keymaster.Certificate)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Certificate::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Certificate::ArenaDtor(void* object) {
  Certificate* _this = reinterpret_cast< Certificate* >(object);
  (void)_this;
}
void Certificate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Certificate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Certificate::Clear() {
// @@protoc_insertion_point(message_clear_start:nugget.app.keymaster.Certificate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Certificate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Certificate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nugget.app.keymaster.Certificate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nugget.app.keymaster.Certificate)
  return target;
}

size_t Certificate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nugget.app.keymaster.Certificate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Certificate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nugget.app.keymaster.Certificate)
  GOOGLE_DCHECK_NE(&from, this);
  const Certificate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Certificate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nugget.app.keymaster.Certificate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nugget.app.keymaster.Certificate)
    MergeFrom(*source);
  }
}

void Certificate::MergeFrom(const Certificate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nugget.app.keymaster.Certificate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
}

void Certificate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nugget.app.keymaster.Certificate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Certificate::CopyFrom(const Certificate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nugget.app.keymaster.Certificate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Certificate::IsInitialized() const {
  return true;
}

void Certificate::InternalSwap(Certificate* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Certificate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CertificateChain::_Internal {
 public:
};

CertificateChain::CertificateChain(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  certificates_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:nugget.app.keymaster.CertificateChain)
}
CertificateChain::CertificateChain(const CertificateChain& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      certificates_(from.certificates_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:nugget.app.keymaster.CertificateChain)
}

void CertificateChain::SharedCtor() {
}

CertificateChain::~CertificateChain() {
  // @@protoc_insertion_point(destructor:nugget.app.keymaster.CertificateChain)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CertificateChain::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CertificateChain::ArenaDtor(void* object) {
  CertificateChain* _this = reinterpret_cast< CertificateChain* >(object);
  (void)_this;
}
void CertificateChain::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CertificateChain::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CertificateChain::Clear() {
// @@protoc_insertion_point(message_clear_start:nugget.app.keymaster.CertificateChain)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  certificates_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CertificateChain::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .nugget.app.keymaster.Certificate certificates = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_certificates(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CertificateChain::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nugget.app.keymaster.CertificateChain)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .nugget.app.keymaster.Certificate certificates = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_certificates_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_certificates(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nugget.app.keymaster.CertificateChain)
  return target;
}

size_t CertificateChain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nugget.app.keymaster.CertificateChain)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .nugget.app.keymaster.Certificate certificates = 1;
  total_size += 1UL * this->_internal_certificates_size();
  for (const auto& msg : this->certificates_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CertificateChain::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nugget.app.keymaster.CertificateChain)
  GOOGLE_DCHECK_NE(&from, this);
  const CertificateChain* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CertificateChain>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nugget.app.keymaster.CertificateChain)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nugget.app.keymaster.CertificateChain)
    MergeFrom(*source);
  }
}

void CertificateChain::MergeFrom(const CertificateChain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nugget.app.keymaster.CertificateChain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  certificates_.MergeFrom(from.certificates_);
}

void CertificateChain::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nugget.app.keymaster.CertificateChain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CertificateChain::CopyFrom(const CertificateChain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nugget.app.keymaster.CertificateChain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CertificateChain::IsInitialized() const {
  return true;
}

void CertificateChain::InternalSwap(CertificateChain* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  certificates_.InternalSwap(&other->certificates_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CertificateChain::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class KeyCharacteristics::_Internal {
 public:
  static const ::nugget::app::keymaster::KeyParameters& software_enforced(const KeyCharacteristics* msg);
  static const ::nugget::app::keymaster::KeyParameters& tee_enforced(const KeyCharacteristics* msg);
};

const ::nugget::app::keymaster::KeyParameters&
KeyCharacteristics::_Internal::software_enforced(const KeyCharacteristics* msg) {
  return *msg->software_enforced_;
}
const ::nugget::app::keymaster::KeyParameters&
KeyCharacteristics::_Internal::tee_enforced(const KeyCharacteristics* msg) {
  return *msg->tee_enforced_;
}
KeyCharacteristics::KeyCharacteristics(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:nugget.app.keymaster.KeyCharacteristics)
}
KeyCharacteristics::KeyCharacteristics(const KeyCharacteristics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_software_enforced()) {
    software_enforced_ = new ::nugget::app::keymaster::KeyParameters(*from.software_enforced_);
  } else {
    software_enforced_ = nullptr;
  }
  if (from._internal_has_tee_enforced()) {
    tee_enforced_ = new ::nugget::app::keymaster::KeyParameters(*from.tee_enforced_);
  } else {
    tee_enforced_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:nugget.app.keymaster.KeyCharacteristics)
}

void KeyCharacteristics::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&software_enforced_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&tee_enforced_) -
    reinterpret_cast<char*>(&software_enforced_)) + sizeof(tee_enforced_));
}

KeyCharacteristics::~KeyCharacteristics() {
  // @@protoc_insertion_point(destructor:nugget.app.keymaster.KeyCharacteristics)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void KeyCharacteristics::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete software_enforced_;
  if (this != internal_default_instance()) delete tee_enforced_;
}

void KeyCharacteristics::ArenaDtor(void* object) {
  KeyCharacteristics* _this = reinterpret_cast< KeyCharacteristics* >(object);
  (void)_this;
}
void KeyCharacteristics::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void KeyCharacteristics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void KeyCharacteristics::Clear() {
// @@protoc_insertion_point(message_clear_start:nugget.app.keymaster.KeyCharacteristics)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && software_enforced_ != nullptr) {
    delete software_enforced_;
  }
  software_enforced_ = nullptr;
  if (GetArena() == nullptr && tee_enforced_ != nullptr) {
    delete tee_enforced_;
  }
  tee_enforced_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeyCharacteristics::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .nugget.app.keymaster.KeyParameters software_enforced = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_software_enforced(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .nugget.app.keymaster.KeyParameters tee_enforced = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_tee_enforced(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* KeyCharacteristics::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nugget.app.keymaster.KeyCharacteristics)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .nugget.app.keymaster.KeyParameters software_enforced = 1;
  if (this->has_software_enforced()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::software_enforced(this), target, stream);
  }

  // .nugget.app.keymaster.KeyParameters tee_enforced = 2;
  if (this->has_tee_enforced()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::tee_enforced(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nugget.app.keymaster.KeyCharacteristics)
  return target;
}

size_t KeyCharacteristics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nugget.app.keymaster.KeyCharacteristics)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .nugget.app.keymaster.KeyParameters software_enforced = 1;
  if (this->has_software_enforced()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *software_enforced_);
  }

  // .nugget.app.keymaster.KeyParameters tee_enforced = 2;
  if (this->has_tee_enforced()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *tee_enforced_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyCharacteristics::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nugget.app.keymaster.KeyCharacteristics)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyCharacteristics* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<KeyCharacteristics>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nugget.app.keymaster.KeyCharacteristics)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nugget.app.keymaster.KeyCharacteristics)
    MergeFrom(*source);
  }
}

void KeyCharacteristics::MergeFrom(const KeyCharacteristics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nugget.app.keymaster.KeyCharacteristics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_software_enforced()) {
    _internal_mutable_software_enforced()->::nugget::app::keymaster::KeyParameters::MergeFrom(from._internal_software_enforced());
  }
  if (from.has_tee_enforced()) {
    _internal_mutable_tee_enforced()->::nugget::app::keymaster::KeyParameters::MergeFrom(from._internal_tee_enforced());
  }
}

void KeyCharacteristics::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nugget.app.keymaster.KeyCharacteristics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyCharacteristics::CopyFrom(const KeyCharacteristics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nugget.app.keymaster.KeyCharacteristics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyCharacteristics::IsInitialized() const {
  return true;
}

void KeyCharacteristics::InternalSwap(KeyCharacteristics* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(KeyCharacteristics, tee_enforced_)
      + sizeof(KeyCharacteristics::tee_enforced_)
      - PROTOBUF_FIELD_OFFSET(KeyCharacteristics, software_enforced_)>(
          reinterpret_cast<char*>(&software_enforced_),
          reinterpret_cast<char*>(&other->software_enforced_));
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyCharacteristics::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class HmacSharingParameters::_Internal {
 public:
};

HmacSharingParameters::HmacSharingParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:nugget.app.keymaster.HmacSharingParameters)
}
HmacSharingParameters::HmacSharingParameters(const HmacSharingParameters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  seed_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_seed().empty()) {
    seed_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_seed(), 
      GetArena());
  }
  nonce_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nonce().empty()) {
    nonce_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nonce(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:nugget.app.keymaster.HmacSharingParameters)
}

void HmacSharingParameters::SharedCtor() {
seed_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
nonce_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

HmacSharingParameters::~HmacSharingParameters() {
  // @@protoc_insertion_point(destructor:nugget.app.keymaster.HmacSharingParameters)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HmacSharingParameters::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  seed_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nonce_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void HmacSharingParameters::ArenaDtor(void* object) {
  HmacSharingParameters* _this = reinterpret_cast< HmacSharingParameters* >(object);
  (void)_this;
}
void HmacSharingParameters::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HmacSharingParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HmacSharingParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:nugget.app.keymaster.HmacSharingParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seed_.ClearToEmpty();
  nonce_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HmacSharingParameters::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes seed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_seed();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes nonce = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_nonce();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HmacSharingParameters::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nugget.app.keymaster.HmacSharingParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes seed = 1;
  if (this->seed().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_seed(), target);
  }

  // bytes nonce = 2;
  if (this->nonce().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_nonce(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nugget.app.keymaster.HmacSharingParameters)
  return target;
}

size_t HmacSharingParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nugget.app.keymaster.HmacSharingParameters)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes seed = 1;
  if (this->seed().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_seed());
  }

  // bytes nonce = 2;
  if (this->nonce().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_nonce());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HmacSharingParameters::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nugget.app.keymaster.HmacSharingParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const HmacSharingParameters* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HmacSharingParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nugget.app.keymaster.HmacSharingParameters)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nugget.app.keymaster.HmacSharingParameters)
    MergeFrom(*source);
  }
}

void HmacSharingParameters::MergeFrom(const HmacSharingParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nugget.app.keymaster.HmacSharingParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seed().size() > 0) {
    _internal_set_seed(from._internal_seed());
  }
  if (from.nonce().size() > 0) {
    _internal_set_nonce(from._internal_nonce());
  }
}

void HmacSharingParameters::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nugget.app.keymaster.HmacSharingParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HmacSharingParameters::CopyFrom(const HmacSharingParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nugget.app.keymaster.HmacSharingParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HmacSharingParameters::IsInitialized() const {
  return true;
}

void HmacSharingParameters::InternalSwap(HmacSharingParameters* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  seed_.Swap(&other->seed_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  nonce_.Swap(&other->nonce_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata HmacSharingParameters::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class HardwareAuthToken::_Internal {
 public:
};

HardwareAuthToken::HardwareAuthToken(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:nugget.app.keymaster.HardwareAuthToken)
}
HardwareAuthToken::HardwareAuthToken(const HardwareAuthToken& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mac().empty()) {
    mac_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mac(), 
      GetArena());
  }
  ::memcpy(&challenge_, &from.challenge_,
    static_cast<size_t>(reinterpret_cast<char*>(&authenticator_type_) -
    reinterpret_cast<char*>(&challenge_)) + sizeof(authenticator_type_));
  // @@protoc_insertion_point(copy_constructor:nugget.app.keymaster.HardwareAuthToken)
}

void HardwareAuthToken::SharedCtor() {
mac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&challenge_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&authenticator_type_) -
    reinterpret_cast<char*>(&challenge_)) + sizeof(authenticator_type_));
}

HardwareAuthToken::~HardwareAuthToken() {
  // @@protoc_insertion_point(destructor:nugget.app.keymaster.HardwareAuthToken)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HardwareAuthToken::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mac_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void HardwareAuthToken::ArenaDtor(void* object) {
  HardwareAuthToken* _this = reinterpret_cast< HardwareAuthToken* >(object);
  (void)_this;
}
void HardwareAuthToken::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HardwareAuthToken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HardwareAuthToken::Clear() {
// @@protoc_insertion_point(message_clear_start:nugget.app.keymaster.HardwareAuthToken)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mac_.ClearToEmpty();
  ::memset(&challenge_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&authenticator_type_) -
      reinterpret_cast<char*>(&challenge_)) + sizeof(authenticator_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HardwareAuthToken::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 challenge = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          challenge_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 authenticator_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          authenticator_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 timestamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes mac = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_mac();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 authenticator_type = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          authenticator_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HardwareAuthToken::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nugget.app.keymaster.HardwareAuthToken)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 challenge = 1;
  if (this->challenge() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_challenge(), target);
  }

  // uint64 user_id = 2;
  if (this->user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_user_id(), target);
  }

  // uint64 authenticator_id = 3;
  if (this->authenticator_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_authenticator_id(), target);
  }

  // uint64 timestamp = 5;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_timestamp(), target);
  }

  // bytes mac = 6;
  if (this->mac().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_mac(), target);
  }

  // uint32 authenticator_type = 7;
  if (this->authenticator_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_authenticator_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nugget.app.keymaster.HardwareAuthToken)
  return target;
}

size_t HardwareAuthToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nugget.app.keymaster.HardwareAuthToken)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes mac = 6;
  if (this->mac().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_mac());
  }

  // uint64 challenge = 1;
  if (this->challenge() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_challenge());
  }

  // uint64 user_id = 2;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_user_id());
  }

  // uint64 authenticator_id = 3;
  if (this->authenticator_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_authenticator_id());
  }

  // uint64 timestamp = 5;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_timestamp());
  }

  // uint32 authenticator_type = 7;
  if (this->authenticator_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_authenticator_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HardwareAuthToken::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nugget.app.keymaster.HardwareAuthToken)
  GOOGLE_DCHECK_NE(&from, this);
  const HardwareAuthToken* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HardwareAuthToken>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nugget.app.keymaster.HardwareAuthToken)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nugget.app.keymaster.HardwareAuthToken)
    MergeFrom(*source);
  }
}

void HardwareAuthToken::MergeFrom(const HardwareAuthToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nugget.app.keymaster.HardwareAuthToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mac().size() > 0) {
    _internal_set_mac(from._internal_mac());
  }
  if (from.challenge() != 0) {
    _internal_set_challenge(from._internal_challenge());
  }
  if (from.user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from.authenticator_id() != 0) {
    _internal_set_authenticator_id(from._internal_authenticator_id());
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  if (from.authenticator_type() != 0) {
    _internal_set_authenticator_type(from._internal_authenticator_type());
  }
}

void HardwareAuthToken::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nugget.app.keymaster.HardwareAuthToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HardwareAuthToken::CopyFrom(const HardwareAuthToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nugget.app.keymaster.HardwareAuthToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HardwareAuthToken::IsInitialized() const {
  return true;
}

void HardwareAuthToken::InternalSwap(HardwareAuthToken* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mac_.Swap(&other->mac_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HardwareAuthToken, authenticator_type_)
      + sizeof(HardwareAuthToken::authenticator_type_)
      - PROTOBUF_FIELD_OFFSET(HardwareAuthToken, challenge_)>(
          reinterpret_cast<char*>(&challenge_),
          reinterpret_cast<char*>(&other->challenge_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HardwareAuthToken::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VerificationToken::_Internal {
 public:
  static const ::nugget::app::keymaster::KeyParameters& params_verified(const VerificationToken* msg);
};

const ::nugget::app::keymaster::KeyParameters&
VerificationToken::_Internal::params_verified(const VerificationToken* msg) {
  return *msg->params_verified_;
}
VerificationToken::VerificationToken(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:nugget.app.keymaster.VerificationToken)
}
VerificationToken::VerificationToken(const VerificationToken& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mac().empty()) {
    mac_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mac(), 
      GetArena());
  }
  if (from._internal_has_params_verified()) {
    params_verified_ = new ::nugget::app::keymaster::KeyParameters(*from.params_verified_);
  } else {
    params_verified_ = nullptr;
  }
  ::memcpy(&challenge_, &from.challenge_,
    static_cast<size_t>(reinterpret_cast<char*>(&security_level_) -
    reinterpret_cast<char*>(&challenge_)) + sizeof(security_level_));
  // @@protoc_insertion_point(copy_constructor:nugget.app.keymaster.VerificationToken)
}

void VerificationToken::SharedCtor() {
mac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&params_verified_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&security_level_) -
    reinterpret_cast<char*>(&params_verified_)) + sizeof(security_level_));
}

VerificationToken::~VerificationToken() {
  // @@protoc_insertion_point(destructor:nugget.app.keymaster.VerificationToken)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VerificationToken::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mac_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete params_verified_;
}

void VerificationToken::ArenaDtor(void* object) {
  VerificationToken* _this = reinterpret_cast< VerificationToken* >(object);
  (void)_this;
}
void VerificationToken::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VerificationToken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VerificationToken::Clear() {
// @@protoc_insertion_point(message_clear_start:nugget.app.keymaster.VerificationToken)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mac_.ClearToEmpty();
  if (GetArena() == nullptr && params_verified_ != nullptr) {
    delete params_verified_;
  }
  params_verified_ = nullptr;
  ::memset(&challenge_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&security_level_) -
      reinterpret_cast<char*>(&challenge_)) + sizeof(security_level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VerificationToken::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 challenge = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          challenge_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .nugget.app.keymaster.KeyParameters params_verified = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_params_verified(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .nugget.app.keymaster.SecurityLevel security_level = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_security_level(static_cast<::nugget::app::keymaster::SecurityLevel>(val));
        } else goto handle_unusual;
        continue;
      // bytes mac = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_mac();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VerificationToken::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nugget.app.keymaster.VerificationToken)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 challenge = 1;
  if (this->challenge() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_challenge(), target);
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_timestamp(), target);
  }

  // .nugget.app.keymaster.KeyParameters params_verified = 3;
  if (this->has_params_verified()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::params_verified(this), target, stream);
  }

  // .nugget.app.keymaster.SecurityLevel security_level = 4;
  if (this->security_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_security_level(), target);
  }

  // bytes mac = 5;
  if (this->mac().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_mac(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nugget.app.keymaster.VerificationToken)
  return target;
}

size_t VerificationToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nugget.app.keymaster.VerificationToken)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes mac = 5;
  if (this->mac().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_mac());
  }

  // .nugget.app.keymaster.KeyParameters params_verified = 3;
  if (this->has_params_verified()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *params_verified_);
  }

  // uint64 challenge = 1;
  if (this->challenge() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_challenge());
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_timestamp());
  }

  // .nugget.app.keymaster.SecurityLevel security_level = 4;
  if (this->security_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_security_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerificationToken::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nugget.app.keymaster.VerificationToken)
  GOOGLE_DCHECK_NE(&from, this);
  const VerificationToken* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VerificationToken>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nugget.app.keymaster.VerificationToken)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nugget.app.keymaster.VerificationToken)
    MergeFrom(*source);
  }
}

void VerificationToken::MergeFrom(const VerificationToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nugget.app.keymaster.VerificationToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mac().size() > 0) {
    _internal_set_mac(from._internal_mac());
  }
  if (from.has_params_verified()) {
    _internal_mutable_params_verified()->::nugget::app::keymaster::KeyParameters::MergeFrom(from._internal_params_verified());
  }
  if (from.challenge() != 0) {
    _internal_set_challenge(from._internal_challenge());
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  if (from.security_level() != 0) {
    _internal_set_security_level(from._internal_security_level());
  }
}

void VerificationToken::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nugget.app.keymaster.VerificationToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerificationToken::CopyFrom(const VerificationToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nugget.app.keymaster.VerificationToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerificationToken::IsInitialized() const {
  return true;
}

void VerificationToken::InternalSwap(VerificationToken* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mac_.Swap(&other->mac_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VerificationToken, security_level_)
      + sizeof(VerificationToken::security_level_)
      - PROTOBUF_FIELD_OFFSET(VerificationToken, params_verified_)>(
          reinterpret_cast<char*>(&params_verified_),
          reinterpret_cast<char*>(&other->params_verified_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VerificationToken::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RSAKey::_Internal {
 public:
};

RSAKey::RSAKey(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:nugget.app.keymaster.RSAKey)
}
RSAKey::RSAKey(const RSAKey& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_d().empty()) {
    d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_d(), 
      GetArena());
  }
  n_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_n().empty()) {
    n_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_n(), 
      GetArena());
  }
  e_ = from.e_;
  // @@protoc_insertion_point(copy_constructor:nugget.app.keymaster.RSAKey)
}

void RSAKey::SharedCtor() {
d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
n_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
e_ = 0u;
}

RSAKey::~RSAKey() {
  // @@protoc_insertion_point(destructor:nugget.app.keymaster.RSAKey)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RSAKey::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  d_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  n_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RSAKey::ArenaDtor(void* object) {
  RSAKey* _this = reinterpret_cast< RSAKey* >(object);
  (void)_this;
}
void RSAKey::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RSAKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RSAKey::Clear() {
// @@protoc_insertion_point(message_clear_start:nugget.app.keymaster.RSAKey)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  d_.ClearToEmpty();
  n_.ClearToEmpty();
  e_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RSAKey::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 e = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          e_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes d = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_d();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes n = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_n();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RSAKey::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nugget.app.keymaster.RSAKey)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 e = 1;
  if (this->e() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_e(), target);
  }

  // bytes d = 2;
  if (this->d().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_d(), target);
  }

  // bytes n = 3;
  if (this->n().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_n(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nugget.app.keymaster.RSAKey)
  return target;
}

size_t RSAKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nugget.app.keymaster.RSAKey)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes d = 2;
  if (this->d().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_d());
  }

  // bytes n = 3;
  if (this->n().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_n());
  }

  // uint32 e = 1;
  if (this->e() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_e());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RSAKey::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nugget.app.keymaster.RSAKey)
  GOOGLE_DCHECK_NE(&from, this);
  const RSAKey* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RSAKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nugget.app.keymaster.RSAKey)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nugget.app.keymaster.RSAKey)
    MergeFrom(*source);
  }
}

void RSAKey::MergeFrom(const RSAKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nugget.app.keymaster.RSAKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.d().size() > 0) {
    _internal_set_d(from._internal_d());
  }
  if (from.n().size() > 0) {
    _internal_set_n(from._internal_n());
  }
  if (from.e() != 0) {
    _internal_set_e(from._internal_e());
  }
}

void RSAKey::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nugget.app.keymaster.RSAKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RSAKey::CopyFrom(const RSAKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nugget.app.keymaster.RSAKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RSAKey::IsInitialized() const {
  return true;
}

void RSAKey::InternalSwap(RSAKey* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  d_.Swap(&other->d_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  n_.Swap(&other->n_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(e_, other->e_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RSAKey::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ECKey::_Internal {
 public:
};

ECKey::ECKey(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:nugget.app.keymaster.ECKey)
}
ECKey::ECKey(const ECKey& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_d().empty()) {
    d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_d(), 
      GetArena());
  }
  x_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_x().empty()) {
    x_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_x(), 
      GetArena());
  }
  y_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_y().empty()) {
    y_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_y(), 
      GetArena());
  }
  curve_id_ = from.curve_id_;
  // @@protoc_insertion_point(copy_constructor:nugget.app.keymaster.ECKey)
}

void ECKey::SharedCtor() {
d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
x_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
y_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
curve_id_ = 0u;
}

ECKey::~ECKey() {
  // @@protoc_insertion_point(destructor:nugget.app.keymaster.ECKey)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ECKey::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  d_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  x_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  y_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ECKey::ArenaDtor(void* object) {
  ECKey* _this = reinterpret_cast< ECKey* >(object);
  (void)_this;
}
void ECKey::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ECKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ECKey::Clear() {
// @@protoc_insertion_point(message_clear_start:nugget.app.keymaster.ECKey)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  d_.ClearToEmpty();
  x_.ClearToEmpty();
  y_.ClearToEmpty();
  curve_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ECKey::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 curve_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          curve_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes d = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_d();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes x = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_x();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes y = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_y();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ECKey::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nugget.app.keymaster.ECKey)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 curve_id = 1;
  if (this->curve_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_curve_id(), target);
  }

  // bytes d = 2;
  if (this->d().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_d(), target);
  }

  // bytes x = 3;
  if (this->x().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_x(), target);
  }

  // bytes y = 4;
  if (this->y().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nugget.app.keymaster.ECKey)
  return target;
}

size_t ECKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nugget.app.keymaster.ECKey)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes d = 2;
  if (this->d().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_d());
  }

  // bytes x = 3;
  if (this->x().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_x());
  }

  // bytes y = 4;
  if (this->y().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_y());
  }

  // uint32 curve_id = 1;
  if (this->curve_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_curve_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ECKey::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nugget.app.keymaster.ECKey)
  GOOGLE_DCHECK_NE(&from, this);
  const ECKey* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ECKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nugget.app.keymaster.ECKey)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nugget.app.keymaster.ECKey)
    MergeFrom(*source);
  }
}

void ECKey::MergeFrom(const ECKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nugget.app.keymaster.ECKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.d().size() > 0) {
    _internal_set_d(from._internal_d());
  }
  if (from.x().size() > 0) {
    _internal_set_x(from._internal_x());
  }
  if (from.y().size() > 0) {
    _internal_set_y(from._internal_y());
  }
  if (from.curve_id() != 0) {
    _internal_set_curve_id(from._internal_curve_id());
  }
}

void ECKey::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nugget.app.keymaster.ECKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ECKey::CopyFrom(const ECKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nugget.app.keymaster.ECKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ECKey::IsInitialized() const {
  return true;
}

void ECKey::InternalSwap(ECKey* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  d_.Swap(&other->d_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  x_.Swap(&other->x_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  y_.Swap(&other->y_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(curve_id_, other->curve_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ECKey::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SymmetricKey::_Internal {
 public:
};

SymmetricKey::SymmetricKey(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:nugget.app.keymaster.SymmetricKey)
}
SymmetricKey::SymmetricKey(const SymmetricKey& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  material_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_material().empty()) {
    material_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_material(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:nugget.app.keymaster.SymmetricKey)
}

void SymmetricKey::SharedCtor() {
material_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SymmetricKey::~SymmetricKey() {
  // @@protoc_insertion_point(destructor:nugget.app.keymaster.SymmetricKey)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SymmetricKey::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  material_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SymmetricKey::ArenaDtor(void* object) {
  SymmetricKey* _this = reinterpret_cast< SymmetricKey* >(object);
  (void)_this;
}
void SymmetricKey::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SymmetricKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SymmetricKey::Clear() {
// @@protoc_insertion_point(message_clear_start:nugget.app.keymaster.SymmetricKey)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  material_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SymmetricKey::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes material = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_material();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SymmetricKey::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nugget.app.keymaster.SymmetricKey)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes material = 1;
  if (this->material().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_material(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nugget.app.keymaster.SymmetricKey)
  return target;
}

size_t SymmetricKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nugget.app.keymaster.SymmetricKey)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes material = 1;
  if (this->material().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_material());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SymmetricKey::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nugget.app.keymaster.SymmetricKey)
  GOOGLE_DCHECK_NE(&from, this);
  const SymmetricKey* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SymmetricKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nugget.app.keymaster.SymmetricKey)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nugget.app.keymaster.SymmetricKey)
    MergeFrom(*source);
  }
}

void SymmetricKey::MergeFrom(const SymmetricKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nugget.app.keymaster.SymmetricKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.material().size() > 0) {
    _internal_set_material(from._internal_material());
  }
}

void SymmetricKey::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nugget.app.keymaster.SymmetricKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SymmetricKey::CopyFrom(const SymmetricKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nugget.app.keymaster.SymmetricKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SymmetricKey::IsInitialized() const {
  return true;
}

void SymmetricKey::InternalSwap(SymmetricKey* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  material_.Swap(&other->material_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SymmetricKey::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VigoKey::_Internal {
 public:
};

VigoKey::VigoKey(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:nugget.app.keymaster.VigoKey)
}
VigoKey::VigoKey(const VigoKey& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  x_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_x().empty()) {
    x_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_x(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:nugget.app.keymaster.VigoKey)
}

void VigoKey::SharedCtor() {
x_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

VigoKey::~VigoKey() {
  // @@protoc_insertion_point(destructor:nugget.app.keymaster.VigoKey)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VigoKey::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  x_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void VigoKey::ArenaDtor(void* object) {
  VigoKey* _this = reinterpret_cast< VigoKey* >(object);
  (void)_this;
}
void VigoKey::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VigoKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VigoKey::Clear() {
// @@protoc_insertion_point(message_clear_start:nugget.app.keymaster.VigoKey)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  x_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VigoKey::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_x();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VigoKey::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nugget.app.keymaster.VigoKey)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes x = 1;
  if (this->x().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_x(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nugget.app.keymaster.VigoKey)
  return target;
}

size_t VigoKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nugget.app.keymaster.VigoKey)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes x = 1;
  if (this->x().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_x());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VigoKey::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nugget.app.keymaster.VigoKey)
  GOOGLE_DCHECK_NE(&from, this);
  const VigoKey* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VigoKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nugget.app.keymaster.VigoKey)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nugget.app.keymaster.VigoKey)
    MergeFrom(*source);
  }
}

void VigoKey::MergeFrom(const VigoKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nugget.app.keymaster.VigoKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x().size() > 0) {
    _internal_set_x(from._internal_x());
  }
}

void VigoKey::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nugget.app.keymaster.VigoKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VigoKey::CopyFrom(const VigoKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nugget.app.keymaster.VigoKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VigoKey::IsInitialized() const {
  return true;
}

void VigoKey::InternalSwap(VigoKey* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  x_.Swap(&other->x_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata VigoKey::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VigoSignature::_Internal {
 public:
};

VigoSignature::VigoSignature(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:nugget.app.keymaster.VigoSignature)
}
VigoSignature::VigoSignature(const VigoSignature& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  r_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_r().empty()) {
    r_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_r(), 
      GetArena());
  }
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s().empty()) {
    s_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_s(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:nugget.app.keymaster.VigoSignature)
}

void VigoSignature::SharedCtor() {
r_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

VigoSignature::~VigoSignature() {
  // @@protoc_insertion_point(destructor:nugget.app.keymaster.VigoSignature)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VigoSignature::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  r_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  s_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void VigoSignature::ArenaDtor(void* object) {
  VigoSignature* _this = reinterpret_cast< VigoSignature* >(object);
  (void)_this;
}
void VigoSignature::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VigoSignature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VigoSignature::Clear() {
// @@protoc_insertion_point(message_clear_start:nugget.app.keymaster.VigoSignature)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  r_.ClearToEmpty();
  s_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VigoSignature::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes r = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_r();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes s = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_s();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VigoSignature::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nugget.app.keymaster.VigoSignature)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes r = 1;
  if (this->r().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_r(), target);
  }

  // bytes s = 2;
  if (this->s().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_s(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nugget.app.keymaster.VigoSignature)
  return target;
}

size_t VigoSignature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nugget.app.keymaster.VigoSignature)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes r = 1;
  if (this->r().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_r());
  }

  // bytes s = 2;
  if (this->s().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_s());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VigoSignature::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nugget.app.keymaster.VigoSignature)
  GOOGLE_DCHECK_NE(&from, this);
  const VigoSignature* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VigoSignature>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nugget.app.keymaster.VigoSignature)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nugget.app.keymaster.VigoSignature)
    MergeFrom(*source);
  }
}

void VigoSignature::MergeFrom(const VigoSignature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nugget.app.keymaster.VigoSignature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.r().size() > 0) {
    _internal_set_r(from._internal_r());
  }
  if (from.s().size() > 0) {
    _internal_set_s(from._internal_s());
  }
}

void VigoSignature::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nugget.app.keymaster.VigoSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VigoSignature::CopyFrom(const VigoSignature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nugget.app.keymaster.VigoSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VigoSignature::IsInitialized() const {
  return true;
}

void VigoSignature::InternalSwap(VigoSignature* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  r_.Swap(&other->r_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  s_.Swap(&other->s_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata VigoSignature::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VigoSecret::_Internal {
 public:
};

VigoSecret::VigoSecret(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:nugget.app.keymaster.VigoSecret)
}
VigoSecret::VigoSecret(const VigoSecret& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  material_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_material().empty()) {
    material_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_material(), 
      GetArena());
  }
  iv_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_iv().empty()) {
    iv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_iv(), 
      GetArena());
  }
  tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tag().empty()) {
    tag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tag(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:nugget.app.keymaster.VigoSecret)
}

void VigoSecret::SharedCtor() {
material_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
iv_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

VigoSecret::~VigoSecret() {
  // @@protoc_insertion_point(destructor:nugget.app.keymaster.VigoSecret)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VigoSecret::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  material_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  iv_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void VigoSecret::ArenaDtor(void* object) {
  VigoSecret* _this = reinterpret_cast< VigoSecret* >(object);
  (void)_this;
}
void VigoSecret::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VigoSecret::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VigoSecret::Clear() {
// @@protoc_insertion_point(message_clear_start:nugget.app.keymaster.VigoSecret)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  material_.ClearToEmpty();
  iv_.ClearToEmpty();
  tag_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VigoSecret::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes material = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_material();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes iv = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_iv();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes tag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_tag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VigoSecret::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nugget.app.keymaster.VigoSecret)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes material = 1;
  if (this->material().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_material(), target);
  }

  // bytes iv = 2;
  if (this->iv().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_iv(), target);
  }

  // bytes tag = 3;
  if (this->tag().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_tag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nugget.app.keymaster.VigoSecret)
  return target;
}

size_t VigoSecret::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nugget.app.keymaster.VigoSecret)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes material = 1;
  if (this->material().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_material());
  }

  // bytes iv = 2;
  if (this->iv().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_iv());
  }

  // bytes tag = 3;
  if (this->tag().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_tag());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VigoSecret::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nugget.app.keymaster.VigoSecret)
  GOOGLE_DCHECK_NE(&from, this);
  const VigoSecret* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VigoSecret>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nugget.app.keymaster.VigoSecret)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nugget.app.keymaster.VigoSecret)
    MergeFrom(*source);
  }
}

void VigoSecret::MergeFrom(const VigoSecret& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nugget.app.keymaster.VigoSecret)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.material().size() > 0) {
    _internal_set_material(from._internal_material());
  }
  if (from.iv().size() > 0) {
    _internal_set_iv(from._internal_iv());
  }
  if (from.tag().size() > 0) {
    _internal_set_tag(from._internal_tag());
  }
}

void VigoSecret::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nugget.app.keymaster.VigoSecret)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VigoSecret::CopyFrom(const VigoSecret& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nugget.app.keymaster.VigoSecret)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VigoSecret::IsInitialized() const {
  return true;
}

void VigoSecret::InternalSwap(VigoSecret* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  material_.Swap(&other->material_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  iv_.Swap(&other->iv_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tag_.Swap(&other->tag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata VigoSecret::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace keymaster
}  // namespace app
}  // namespace nugget
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::nugget::app::keymaster::KeyParameter* Arena::CreateMaybeMessage< ::nugget::app::keymaster::KeyParameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nugget::app::keymaster::KeyParameter >(arena);
}
template<> PROTOBUF_NOINLINE ::nugget::app::keymaster::KeyParameters* Arena::CreateMaybeMessage< ::nugget::app::keymaster::KeyParameters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nugget::app::keymaster::KeyParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::nugget::app::keymaster::KeyBlob* Arena::CreateMaybeMessage< ::nugget::app::keymaster::KeyBlob >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nugget::app::keymaster::KeyBlob >(arena);
}
template<> PROTOBUF_NOINLINE ::nugget::app::keymaster::OperationHandle* Arena::CreateMaybeMessage< ::nugget::app::keymaster::OperationHandle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nugget::app::keymaster::OperationHandle >(arena);
}
template<> PROTOBUF_NOINLINE ::nugget::app::keymaster::Certificate* Arena::CreateMaybeMessage< ::nugget::app::keymaster::Certificate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nugget::app::keymaster::Certificate >(arena);
}
template<> PROTOBUF_NOINLINE ::nugget::app::keymaster::CertificateChain* Arena::CreateMaybeMessage< ::nugget::app::keymaster::CertificateChain >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nugget::app::keymaster::CertificateChain >(arena);
}
template<> PROTOBUF_NOINLINE ::nugget::app::keymaster::KeyCharacteristics* Arena::CreateMaybeMessage< ::nugget::app::keymaster::KeyCharacteristics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nugget::app::keymaster::KeyCharacteristics >(arena);
}
template<> PROTOBUF_NOINLINE ::nugget::app::keymaster::HmacSharingParameters* Arena::CreateMaybeMessage< ::nugget::app::keymaster::HmacSharingParameters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nugget::app::keymaster::HmacSharingParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::nugget::app::keymaster::HardwareAuthToken* Arena::CreateMaybeMessage< ::nugget::app::keymaster::HardwareAuthToken >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nugget::app::keymaster::HardwareAuthToken >(arena);
}
template<> PROTOBUF_NOINLINE ::nugget::app::keymaster::VerificationToken* Arena::CreateMaybeMessage< ::nugget::app::keymaster::VerificationToken >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nugget::app::keymaster::VerificationToken >(arena);
}
template<> PROTOBUF_NOINLINE ::nugget::app::keymaster::RSAKey* Arena::CreateMaybeMessage< ::nugget::app::keymaster::RSAKey >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nugget::app::keymaster::RSAKey >(arena);
}
template<> PROTOBUF_NOINLINE ::nugget::app::keymaster::ECKey* Arena::CreateMaybeMessage< ::nugget::app::keymaster::ECKey >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nugget::app::keymaster::ECKey >(arena);
}
template<> PROTOBUF_NOINLINE ::nugget::app::keymaster::SymmetricKey* Arena::CreateMaybeMessage< ::nugget::app::keymaster::SymmetricKey >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nugget::app::keymaster::SymmetricKey >(arena);
}
template<> PROTOBUF_NOINLINE ::nugget::app::keymaster::VigoKey* Arena::CreateMaybeMessage< ::nugget::app::keymaster::VigoKey >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nugget::app::keymaster::VigoKey >(arena);
}
template<> PROTOBUF_NOINLINE ::nugget::app::keymaster::VigoSignature* Arena::CreateMaybeMessage< ::nugget::app::keymaster::VigoSignature >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nugget::app::keymaster::VigoSignature >(arena);
}
template<> PROTOBUF_NOINLINE ::nugget::app::keymaster::VigoSecret* Arena::CreateMaybeMessage< ::nugget::app::keymaster::VigoSecret >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nugget::app::keymaster::VigoSecret >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
