// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nugget/app/keymaster/keymaster.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015005 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "nugget/app/keymaster/keymaster_defs.pb.h"
#include "nugget/app/keymaster/keymaster_types.pb.h"
#include "nugget/protobuf/options.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[77]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(int index);
namespace nugget {
namespace app {
namespace keymaster {
class AbortOperationRequest;
struct AbortOperationRequestDefaultTypeInternal;
extern AbortOperationRequestDefaultTypeInternal _AbortOperationRequest_default_instance_;
class AbortOperationResponse;
struct AbortOperationResponseDefaultTypeInternal;
extern AbortOperationResponseDefaultTypeInternal _AbortOperationResponse_default_instance_;
class AddRngEntropyRequest;
struct AddRngEntropyRequestDefaultTypeInternal;
extern AddRngEntropyRequestDefaultTypeInternal _AddRngEntropyRequest_default_instance_;
class AddRngEntropyResponse;
struct AddRngEntropyResponseDefaultTypeInternal;
extern AddRngEntropyResponseDefaultTypeInternal _AddRngEntropyResponse_default_instance_;
class BeginOperationRequest;
struct BeginOperationRequestDefaultTypeInternal;
extern BeginOperationRequestDefaultTypeInternal _BeginOperationRequest_default_instance_;
class BeginOperationResponse;
struct BeginOperationResponseDefaultTypeInternal;
extern BeginOperationResponseDefaultTypeInternal _BeginOperationResponse_default_instance_;
class ComputeSharedHmacRequest;
struct ComputeSharedHmacRequestDefaultTypeInternal;
extern ComputeSharedHmacRequestDefaultTypeInternal _ComputeSharedHmacRequest_default_instance_;
class ComputeSharedHmacResponse;
struct ComputeSharedHmacResponseDefaultTypeInternal;
extern ComputeSharedHmacResponseDefaultTypeInternal _ComputeSharedHmacResponse_default_instance_;
class ContinueAttestKeyRequest;
struct ContinueAttestKeyRequestDefaultTypeInternal;
extern ContinueAttestKeyRequestDefaultTypeInternal _ContinueAttestKeyRequest_default_instance_;
class ContinueAttestKeyResponse;
struct ContinueAttestKeyResponseDefaultTypeInternal;
extern ContinueAttestKeyResponseDefaultTypeInternal _ContinueAttestKeyResponse_default_instance_;
class DTupFetchInputEventRequest;
struct DTupFetchInputEventRequestDefaultTypeInternal;
extern DTupFetchInputEventRequestDefaultTypeInternal _DTupFetchInputEventRequest_default_instance_;
class DTupFetchInputEventResponse;
struct DTupFetchInputEventResponseDefaultTypeInternal;
extern DTupFetchInputEventResponseDefaultTypeInternal _DTupFetchInputEventResponse_default_instance_;
class DTupHandshakeRequest;
struct DTupHandshakeRequestDefaultTypeInternal;
extern DTupHandshakeRequestDefaultTypeInternal _DTupHandshakeRequest_default_instance_;
class DTupHandshakeResponse;
struct DTupHandshakeResponseDefaultTypeInternal;
extern DTupHandshakeResponseDefaultTypeInternal _DTupHandshakeResponse_default_instance_;
class DeleteAllKeysRequest;
struct DeleteAllKeysRequestDefaultTypeInternal;
extern DeleteAllKeysRequestDefaultTypeInternal _DeleteAllKeysRequest_default_instance_;
class DeleteAllKeysResponse;
struct DeleteAllKeysResponseDefaultTypeInternal;
extern DeleteAllKeysResponseDefaultTypeInternal _DeleteAllKeysResponse_default_instance_;
class DeleteKeyRequest;
struct DeleteKeyRequestDefaultTypeInternal;
extern DeleteKeyRequestDefaultTypeInternal _DeleteKeyRequest_default_instance_;
class DeleteKeyResponse;
struct DeleteKeyResponseDefaultTypeInternal;
extern DeleteKeyResponseDefaultTypeInternal _DeleteKeyResponse_default_instance_;
class DestroyAttestationIdsRequest;
struct DestroyAttestationIdsRequestDefaultTypeInternal;
extern DestroyAttestationIdsRequestDefaultTypeInternal _DestroyAttestationIdsRequest_default_instance_;
class DestroyAttestationIdsResponse;
struct DestroyAttestationIdsResponseDefaultTypeInternal;
extern DestroyAttestationIdsResponseDefaultTypeInternal _DestroyAttestationIdsResponse_default_instance_;
class DeviceLockedRequest;
struct DeviceLockedRequestDefaultTypeInternal;
extern DeviceLockedRequestDefaultTypeInternal _DeviceLockedRequest_default_instance_;
class DeviceLockedResponse;
struct DeviceLockedResponseDefaultTypeInternal;
extern DeviceLockedResponseDefaultTypeInternal _DeviceLockedResponse_default_instance_;
class EarlyBootEndedRequest;
struct EarlyBootEndedRequestDefaultTypeInternal;
extern EarlyBootEndedRequestDefaultTypeInternal _EarlyBootEndedRequest_default_instance_;
class EarlyBootEndedResponse;
struct EarlyBootEndedResponseDefaultTypeInternal;
extern EarlyBootEndedResponseDefaultTypeInternal _EarlyBootEndedResponse_default_instance_;
class ExportKeyRequest;
struct ExportKeyRequestDefaultTypeInternal;
extern ExportKeyRequestDefaultTypeInternal _ExportKeyRequest_default_instance_;
class ExportKeyResponse;
struct ExportKeyResponseDefaultTypeInternal;
extern ExportKeyResponseDefaultTypeInternal _ExportKeyResponse_default_instance_;
class FinishAttestKeyRequest;
struct FinishAttestKeyRequestDefaultTypeInternal;
extern FinishAttestKeyRequestDefaultTypeInternal _FinishAttestKeyRequest_default_instance_;
class FinishAttestKeyResponse;
struct FinishAttestKeyResponseDefaultTypeInternal;
extern FinishAttestKeyResponseDefaultTypeInternal _FinishAttestKeyResponse_default_instance_;
class FinishOperationRequest;
struct FinishOperationRequestDefaultTypeInternal;
extern FinishOperationRequestDefaultTypeInternal _FinishOperationRequest_default_instance_;
class FinishOperationResponse;
struct FinishOperationResponseDefaultTypeInternal;
extern FinishOperationResponseDefaultTypeInternal _FinishOperationResponse_default_instance_;
class GenerateKeyRequest;
struct GenerateKeyRequestDefaultTypeInternal;
extern GenerateKeyRequestDefaultTypeInternal _GenerateKeyRequest_default_instance_;
class GenerateKeyResponse;
struct GenerateKeyResponseDefaultTypeInternal;
extern GenerateKeyResponseDefaultTypeInternal _GenerateKeyResponse_default_instance_;
class GetBootInfoRequest;
struct GetBootInfoRequestDefaultTypeInternal;
extern GetBootInfoRequestDefaultTypeInternal _GetBootInfoRequest_default_instance_;
class GetBootInfoResponse;
struct GetBootInfoResponseDefaultTypeInternal;
extern GetBootInfoResponseDefaultTypeInternal _GetBootInfoResponse_default_instance_;
class GetHmacSharingParametersRequest;
struct GetHmacSharingParametersRequestDefaultTypeInternal;
extern GetHmacSharingParametersRequestDefaultTypeInternal _GetHmacSharingParametersRequest_default_instance_;
class GetHmacSharingParametersResponse;
struct GetHmacSharingParametersResponseDefaultTypeInternal;
extern GetHmacSharingParametersResponseDefaultTypeInternal _GetHmacSharingParametersResponse_default_instance_;
class GetKeyCharacteristicsRequest;
struct GetKeyCharacteristicsRequestDefaultTypeInternal;
extern GetKeyCharacteristicsRequestDefaultTypeInternal _GetKeyCharacteristicsRequest_default_instance_;
class GetKeyCharacteristicsResponse;
struct GetKeyCharacteristicsResponseDefaultTypeInternal;
extern GetKeyCharacteristicsResponseDefaultTypeInternal _GetKeyCharacteristicsResponse_default_instance_;
class GetPerFactoryResetValueRequest;
struct GetPerFactoryResetValueRequestDefaultTypeInternal;
extern GetPerFactoryResetValueRequestDefaultTypeInternal _GetPerFactoryResetValueRequest_default_instance_;
class GetPerFactoryResetValueResponse;
struct GetPerFactoryResetValueResponseDefaultTypeInternal;
extern GetPerFactoryResetValueResponseDefaultTypeInternal _GetPerFactoryResetValueResponse_default_instance_;
class IdentityFinishAttestKeyRequest;
struct IdentityFinishAttestKeyRequestDefaultTypeInternal;
extern IdentityFinishAttestKeyRequestDefaultTypeInternal _IdentityFinishAttestKeyRequest_default_instance_;
class IdentityFinishAttestKeyResponse;
struct IdentityFinishAttestKeyResponseDefaultTypeInternal;
extern IdentityFinishAttestKeyResponseDefaultTypeInternal _IdentityFinishAttestKeyResponse_default_instance_;
class IdentityStartAttestKeyRequest;
struct IdentityStartAttestKeyRequestDefaultTypeInternal;
extern IdentityStartAttestKeyRequestDefaultTypeInternal _IdentityStartAttestKeyRequest_default_instance_;
class IdentityStartAttestKeyResponse;
struct IdentityStartAttestKeyResponseDefaultTypeInternal;
extern IdentityStartAttestKeyResponseDefaultTypeInternal _IdentityStartAttestKeyResponse_default_instance_;
class ImportKeyRequest;
struct ImportKeyRequestDefaultTypeInternal;
extern ImportKeyRequestDefaultTypeInternal _ImportKeyRequest_default_instance_;
class ImportKeyResponse;
struct ImportKeyResponseDefaultTypeInternal;
extern ImportKeyResponseDefaultTypeInternal _ImportKeyResponse_default_instance_;
class ImportWrappedKeyRequest;
struct ImportWrappedKeyRequestDefaultTypeInternal;
extern ImportWrappedKeyRequestDefaultTypeInternal _ImportWrappedKeyRequest_default_instance_;
class ProvisionCertificatesRequest;
struct ProvisionCertificatesRequestDefaultTypeInternal;
extern ProvisionCertificatesRequestDefaultTypeInternal _ProvisionCertificatesRequest_default_instance_;
class ProvisionCertificatesResponse;
struct ProvisionCertificatesResponseDefaultTypeInternal;
extern ProvisionCertificatesResponseDefaultTypeInternal _ProvisionCertificatesResponse_default_instance_;
class ProvisionDeviceIdsRequest;
struct ProvisionDeviceIdsRequestDefaultTypeInternal;
extern ProvisionDeviceIdsRequestDefaultTypeInternal _ProvisionDeviceIdsRequest_default_instance_;
class ProvisionDeviceIdsResponse;
struct ProvisionDeviceIdsResponseDefaultTypeInternal;
extern ProvisionDeviceIdsResponseDefaultTypeInternal _ProvisionDeviceIdsResponse_default_instance_;
class ProvisionPresharedSecretRequest;
struct ProvisionPresharedSecretRequestDefaultTypeInternal;
extern ProvisionPresharedSecretRequestDefaultTypeInternal _ProvisionPresharedSecretRequest_default_instance_;
class ProvisionPresharedSecretResponse;
struct ProvisionPresharedSecretResponseDefaultTypeInternal;
extern ProvisionPresharedSecretResponseDefaultTypeInternal _ProvisionPresharedSecretResponse_default_instance_;
class ReadCertificateRequest;
struct ReadCertificateRequestDefaultTypeInternal;
extern ReadCertificateRequestDefaultTypeInternal _ReadCertificateRequest_default_instance_;
class ReadCertificateResponse;
struct ReadCertificateResponseDefaultTypeInternal;
extern ReadCertificateResponseDefaultTypeInternal _ReadCertificateResponse_default_instance_;
class ReadTeeBatchCertificateRequest;
struct ReadTeeBatchCertificateRequestDefaultTypeInternal;
extern ReadTeeBatchCertificateRequestDefaultTypeInternal _ReadTeeBatchCertificateRequest_default_instance_;
class ReadTeeBatchCertificateResponse;
struct ReadTeeBatchCertificateResponseDefaultTypeInternal;
extern ReadTeeBatchCertificateResponseDefaultTypeInternal _ReadTeeBatchCertificateResponse_default_instance_;
class SetBootStateRequest;
struct SetBootStateRequestDefaultTypeInternal;
extern SetBootStateRequestDefaultTypeInternal _SetBootStateRequest_default_instance_;
class SetBootStateResponse;
struct SetBootStateResponseDefaultTypeInternal;
extern SetBootStateResponseDefaultTypeInternal _SetBootStateResponse_default_instance_;
class SetRootOfTrustRequest;
struct SetRootOfTrustRequestDefaultTypeInternal;
extern SetRootOfTrustRequestDefaultTypeInternal _SetRootOfTrustRequest_default_instance_;
class SetRootOfTrustResponse;
struct SetRootOfTrustResponseDefaultTypeInternal;
extern SetRootOfTrustResponseDefaultTypeInternal _SetRootOfTrustResponse_default_instance_;
class SetSystemVersionInfoRequest;
struct SetSystemVersionInfoRequestDefaultTypeInternal;
extern SetSystemVersionInfoRequestDefaultTypeInternal _SetSystemVersionInfoRequest_default_instance_;
class SetSystemVersionInfoResponse;
struct SetSystemVersionInfoResponseDefaultTypeInternal;
extern SetSystemVersionInfoResponseDefaultTypeInternal _SetSystemVersionInfoResponse_default_instance_;
class StartAttestKeyRequest;
struct StartAttestKeyRequestDefaultTypeInternal;
extern StartAttestKeyRequestDefaultTypeInternal _StartAttestKeyRequest_default_instance_;
class StartAttestKeyResponse;
struct StartAttestKeyResponseDefaultTypeInternal;
extern StartAttestKeyResponseDefaultTypeInternal _StartAttestKeyResponse_default_instance_;
class UpdateOperationRequest;
struct UpdateOperationRequestDefaultTypeInternal;
extern UpdateOperationRequestDefaultTypeInternal _UpdateOperationRequest_default_instance_;
class UpdateOperationResponse;
struct UpdateOperationResponseDefaultTypeInternal;
extern UpdateOperationResponseDefaultTypeInternal _UpdateOperationResponse_default_instance_;
class UpgradeKeyRequest;
struct UpgradeKeyRequestDefaultTypeInternal;
extern UpgradeKeyRequestDefaultTypeInternal _UpgradeKeyRequest_default_instance_;
class UpgradeKeyResponse;
struct UpgradeKeyResponseDefaultTypeInternal;
extern UpgradeKeyResponseDefaultTypeInternal _UpgradeKeyResponse_default_instance_;
class VigoReadVSRequest;
struct VigoReadVSRequestDefaultTypeInternal;
extern VigoReadVSRequestDefaultTypeInternal _VigoReadVSRequest_default_instance_;
class VigoReadVSResponse;
struct VigoReadVSResponseDefaultTypeInternal;
extern VigoReadVSResponseDefaultTypeInternal _VigoReadVSResponse_default_instance_;
class VigoReleaseSecretRequest;
struct VigoReleaseSecretRequestDefaultTypeInternal;
extern VigoReleaseSecretRequestDefaultTypeInternal _VigoReleaseSecretRequest_default_instance_;
class VigoReleaseSecretResponse;
struct VigoReleaseSecretResponseDefaultTypeInternal;
extern VigoReleaseSecretResponseDefaultTypeInternal _VigoReleaseSecretResponse_default_instance_;
class VigoStartChannelRequest;
struct VigoStartChannelRequestDefaultTypeInternal;
extern VigoStartChannelRequestDefaultTypeInternal _VigoStartChannelRequest_default_instance_;
class VigoStartChannelResponse;
struct VigoStartChannelResponseDefaultTypeInternal;
extern VigoStartChannelResponseDefaultTypeInternal _VigoStartChannelResponse_default_instance_;
class VigoStoreSecretRequest;
struct VigoStoreSecretRequestDefaultTypeInternal;
extern VigoStoreSecretRequestDefaultTypeInternal _VigoStoreSecretRequest_default_instance_;
class VigoStoreSecretResponse;
struct VigoStoreSecretResponseDefaultTypeInternal;
extern VigoStoreSecretResponseDefaultTypeInternal _VigoStoreSecretResponse_default_instance_;
}  // namespace keymaster
}  // namespace app
}  // namespace nugget
PROTOBUF_NAMESPACE_OPEN
template<> ::nugget::app::keymaster::AbortOperationRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::AbortOperationRequest>(Arena*);
template<> ::nugget::app::keymaster::AbortOperationResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::AbortOperationResponse>(Arena*);
template<> ::nugget::app::keymaster::AddRngEntropyRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::AddRngEntropyRequest>(Arena*);
template<> ::nugget::app::keymaster::AddRngEntropyResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::AddRngEntropyResponse>(Arena*);
template<> ::nugget::app::keymaster::BeginOperationRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::BeginOperationRequest>(Arena*);
template<> ::nugget::app::keymaster::BeginOperationResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::BeginOperationResponse>(Arena*);
template<> ::nugget::app::keymaster::ComputeSharedHmacRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::ComputeSharedHmacRequest>(Arena*);
template<> ::nugget::app::keymaster::ComputeSharedHmacResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::ComputeSharedHmacResponse>(Arena*);
template<> ::nugget::app::keymaster::ContinueAttestKeyRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::ContinueAttestKeyRequest>(Arena*);
template<> ::nugget::app::keymaster::ContinueAttestKeyResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::ContinueAttestKeyResponse>(Arena*);
template<> ::nugget::app::keymaster::DTupFetchInputEventRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::DTupFetchInputEventRequest>(Arena*);
template<> ::nugget::app::keymaster::DTupFetchInputEventResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::DTupFetchInputEventResponse>(Arena*);
template<> ::nugget::app::keymaster::DTupHandshakeRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::DTupHandshakeRequest>(Arena*);
template<> ::nugget::app::keymaster::DTupHandshakeResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::DTupHandshakeResponse>(Arena*);
template<> ::nugget::app::keymaster::DeleteAllKeysRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::DeleteAllKeysRequest>(Arena*);
template<> ::nugget::app::keymaster::DeleteAllKeysResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::DeleteAllKeysResponse>(Arena*);
template<> ::nugget::app::keymaster::DeleteKeyRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::DeleteKeyRequest>(Arena*);
template<> ::nugget::app::keymaster::DeleteKeyResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::DeleteKeyResponse>(Arena*);
template<> ::nugget::app::keymaster::DestroyAttestationIdsRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::DestroyAttestationIdsRequest>(Arena*);
template<> ::nugget::app::keymaster::DestroyAttestationIdsResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::DestroyAttestationIdsResponse>(Arena*);
template<> ::nugget::app::keymaster::DeviceLockedRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::DeviceLockedRequest>(Arena*);
template<> ::nugget::app::keymaster::DeviceLockedResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::DeviceLockedResponse>(Arena*);
template<> ::nugget::app::keymaster::EarlyBootEndedRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::EarlyBootEndedRequest>(Arena*);
template<> ::nugget::app::keymaster::EarlyBootEndedResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::EarlyBootEndedResponse>(Arena*);
template<> ::nugget::app::keymaster::ExportKeyRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::ExportKeyRequest>(Arena*);
template<> ::nugget::app::keymaster::ExportKeyResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::ExportKeyResponse>(Arena*);
template<> ::nugget::app::keymaster::FinishAttestKeyRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::FinishAttestKeyRequest>(Arena*);
template<> ::nugget::app::keymaster::FinishAttestKeyResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::FinishAttestKeyResponse>(Arena*);
template<> ::nugget::app::keymaster::FinishOperationRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::FinishOperationRequest>(Arena*);
template<> ::nugget::app::keymaster::FinishOperationResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::FinishOperationResponse>(Arena*);
template<> ::nugget::app::keymaster::GenerateKeyRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::GenerateKeyRequest>(Arena*);
template<> ::nugget::app::keymaster::GenerateKeyResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::GenerateKeyResponse>(Arena*);
template<> ::nugget::app::keymaster::GetBootInfoRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::GetBootInfoRequest>(Arena*);
template<> ::nugget::app::keymaster::GetBootInfoResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::GetBootInfoResponse>(Arena*);
template<> ::nugget::app::keymaster::GetHmacSharingParametersRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::GetHmacSharingParametersRequest>(Arena*);
template<> ::nugget::app::keymaster::GetHmacSharingParametersResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::GetHmacSharingParametersResponse>(Arena*);
template<> ::nugget::app::keymaster::GetKeyCharacteristicsRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::GetKeyCharacteristicsRequest>(Arena*);
template<> ::nugget::app::keymaster::GetKeyCharacteristicsResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::GetKeyCharacteristicsResponse>(Arena*);
template<> ::nugget::app::keymaster::GetPerFactoryResetValueRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::GetPerFactoryResetValueRequest>(Arena*);
template<> ::nugget::app::keymaster::GetPerFactoryResetValueResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::GetPerFactoryResetValueResponse>(Arena*);
template<> ::nugget::app::keymaster::IdentityFinishAttestKeyRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::IdentityFinishAttestKeyRequest>(Arena*);
template<> ::nugget::app::keymaster::IdentityFinishAttestKeyResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::IdentityFinishAttestKeyResponse>(Arena*);
template<> ::nugget::app::keymaster::IdentityStartAttestKeyRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::IdentityStartAttestKeyRequest>(Arena*);
template<> ::nugget::app::keymaster::IdentityStartAttestKeyResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::IdentityStartAttestKeyResponse>(Arena*);
template<> ::nugget::app::keymaster::ImportKeyRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::ImportKeyRequest>(Arena*);
template<> ::nugget::app::keymaster::ImportKeyResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::ImportKeyResponse>(Arena*);
template<> ::nugget::app::keymaster::ImportWrappedKeyRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::ImportWrappedKeyRequest>(Arena*);
template<> ::nugget::app::keymaster::ProvisionCertificatesRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::ProvisionCertificatesRequest>(Arena*);
template<> ::nugget::app::keymaster::ProvisionCertificatesResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::ProvisionCertificatesResponse>(Arena*);
template<> ::nugget::app::keymaster::ProvisionDeviceIdsRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::ProvisionDeviceIdsRequest>(Arena*);
template<> ::nugget::app::keymaster::ProvisionDeviceIdsResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::ProvisionDeviceIdsResponse>(Arena*);
template<> ::nugget::app::keymaster::ProvisionPresharedSecretRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::ProvisionPresharedSecretRequest>(Arena*);
template<> ::nugget::app::keymaster::ProvisionPresharedSecretResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::ProvisionPresharedSecretResponse>(Arena*);
template<> ::nugget::app::keymaster::ReadCertificateRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::ReadCertificateRequest>(Arena*);
template<> ::nugget::app::keymaster::ReadCertificateResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::ReadCertificateResponse>(Arena*);
template<> ::nugget::app::keymaster::ReadTeeBatchCertificateRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::ReadTeeBatchCertificateRequest>(Arena*);
template<> ::nugget::app::keymaster::ReadTeeBatchCertificateResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::ReadTeeBatchCertificateResponse>(Arena*);
template<> ::nugget::app::keymaster::SetBootStateRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::SetBootStateRequest>(Arena*);
template<> ::nugget::app::keymaster::SetBootStateResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::SetBootStateResponse>(Arena*);
template<> ::nugget::app::keymaster::SetRootOfTrustRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::SetRootOfTrustRequest>(Arena*);
template<> ::nugget::app::keymaster::SetRootOfTrustResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::SetRootOfTrustResponse>(Arena*);
template<> ::nugget::app::keymaster::SetSystemVersionInfoRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::SetSystemVersionInfoRequest>(Arena*);
template<> ::nugget::app::keymaster::SetSystemVersionInfoResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::SetSystemVersionInfoResponse>(Arena*);
template<> ::nugget::app::keymaster::StartAttestKeyRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::StartAttestKeyRequest>(Arena*);
template<> ::nugget::app::keymaster::StartAttestKeyResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::StartAttestKeyResponse>(Arena*);
template<> ::nugget::app::keymaster::UpdateOperationRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::UpdateOperationRequest>(Arena*);
template<> ::nugget::app::keymaster::UpdateOperationResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::UpdateOperationResponse>(Arena*);
template<> ::nugget::app::keymaster::UpgradeKeyRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::UpgradeKeyRequest>(Arena*);
template<> ::nugget::app::keymaster::UpgradeKeyResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::UpgradeKeyResponse>(Arena*);
template<> ::nugget::app::keymaster::VigoReadVSRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::VigoReadVSRequest>(Arena*);
template<> ::nugget::app::keymaster::VigoReadVSResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::VigoReadVSResponse>(Arena*);
template<> ::nugget::app::keymaster::VigoReleaseSecretRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::VigoReleaseSecretRequest>(Arena*);
template<> ::nugget::app::keymaster::VigoReleaseSecretResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::VigoReleaseSecretResponse>(Arena*);
template<> ::nugget::app::keymaster::VigoStartChannelRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::VigoStartChannelRequest>(Arena*);
template<> ::nugget::app::keymaster::VigoStartChannelResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::VigoStartChannelResponse>(Arena*);
template<> ::nugget::app::keymaster::VigoStoreSecretRequest* Arena::CreateMaybeMessage<::nugget::app::keymaster::VigoStoreSecretRequest>(Arena*);
template<> ::nugget::app::keymaster::VigoStoreSecretResponse* Arena::CreateMaybeMessage<::nugget::app::keymaster::VigoStoreSecretResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace nugget {
namespace app {
namespace keymaster {

// ===================================================================

class AddRngEntropyRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.AddRngEntropyRequest) */ {
 public:
  inline AddRngEntropyRequest() : AddRngEntropyRequest(nullptr) {}
  virtual ~AddRngEntropyRequest();
  explicit constexpr AddRngEntropyRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AddRngEntropyRequest(const AddRngEntropyRequest& from);
  AddRngEntropyRequest(AddRngEntropyRequest&& from) noexcept
    : AddRngEntropyRequest() {
    *this = ::std::move(from);
  }

  inline AddRngEntropyRequest& operator=(const AddRngEntropyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddRngEntropyRequest& operator=(AddRngEntropyRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AddRngEntropyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddRngEntropyRequest* internal_default_instance() {
    return reinterpret_cast<const AddRngEntropyRequest*>(
               &_AddRngEntropyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AddRngEntropyRequest& a, AddRngEntropyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AddRngEntropyRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddRngEntropyRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AddRngEntropyRequest* New() const final {
    return CreateMaybeMessage<AddRngEntropyRequest>(nullptr);
  }

  AddRngEntropyRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AddRngEntropyRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AddRngEntropyRequest& from);
  void MergeFrom(const AddRngEntropyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddRngEntropyRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.AddRngEntropyRequest";
  }
  protected:
  explicit AddRngEntropyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1;
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.AddRngEntropyRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class AddRngEntropyResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.AddRngEntropyResponse) */ {
 public:
  inline AddRngEntropyResponse() : AddRngEntropyResponse(nullptr) {}
  virtual ~AddRngEntropyResponse();
  explicit constexpr AddRngEntropyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AddRngEntropyResponse(const AddRngEntropyResponse& from);
  AddRngEntropyResponse(AddRngEntropyResponse&& from) noexcept
    : AddRngEntropyResponse() {
    *this = ::std::move(from);
  }

  inline AddRngEntropyResponse& operator=(const AddRngEntropyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddRngEntropyResponse& operator=(AddRngEntropyResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AddRngEntropyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddRngEntropyResponse* internal_default_instance() {
    return reinterpret_cast<const AddRngEntropyResponse*>(
               &_AddRngEntropyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AddRngEntropyResponse& a, AddRngEntropyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AddRngEntropyResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddRngEntropyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AddRngEntropyResponse* New() const final {
    return CreateMaybeMessage<AddRngEntropyResponse>(nullptr);
  }

  AddRngEntropyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AddRngEntropyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AddRngEntropyResponse& from);
  void MergeFrom(const AddRngEntropyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddRngEntropyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.AddRngEntropyResponse";
  }
  protected:
  explicit AddRngEntropyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.AddRngEntropyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class GenerateKeyRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.GenerateKeyRequest) */ {
 public:
  inline GenerateKeyRequest() : GenerateKeyRequest(nullptr) {}
  virtual ~GenerateKeyRequest();
  explicit constexpr GenerateKeyRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerateKeyRequest(const GenerateKeyRequest& from);
  GenerateKeyRequest(GenerateKeyRequest&& from) noexcept
    : GenerateKeyRequest() {
    *this = ::std::move(from);
  }

  inline GenerateKeyRequest& operator=(const GenerateKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerateKeyRequest& operator=(GenerateKeyRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerateKeyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerateKeyRequest* internal_default_instance() {
    return reinterpret_cast<const GenerateKeyRequest*>(
               &_GenerateKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GenerateKeyRequest& a, GenerateKeyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerateKeyRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerateKeyRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerateKeyRequest* New() const final {
    return CreateMaybeMessage<GenerateKeyRequest>(nullptr);
  }

  GenerateKeyRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerateKeyRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerateKeyRequest& from);
  void MergeFrom(const GenerateKeyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateKeyRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.GenerateKeyRequest";
  }
  protected:
  explicit GenerateKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParamsFieldNumber = 1,
    kCreationTimeMsFieldNumber = 2,
  };
  // .nugget.app.keymaster.KeyParameters params = 1;
  bool has_params() const;
  private:
  bool _internal_has_params() const;
  public:
  void clear_params();
  const ::nugget::app::keymaster::KeyParameters& params() const;
  ::nugget::app::keymaster::KeyParameters* release_params();
  ::nugget::app::keymaster::KeyParameters* mutable_params();
  void set_allocated_params(::nugget::app::keymaster::KeyParameters* params);
  private:
  const ::nugget::app::keymaster::KeyParameters& _internal_params() const;
  ::nugget::app::keymaster::KeyParameters* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::nugget::app::keymaster::KeyParameters* params);
  ::nugget::app::keymaster::KeyParameters* unsafe_arena_release_params();

  // uint64 creation_time_ms = 2;
  void clear_creation_time_ms();
  ::PROTOBUF_NAMESPACE_ID::uint64 creation_time_ms() const;
  void set_creation_time_ms(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_creation_time_ms() const;
  void _internal_set_creation_time_ms(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.GenerateKeyRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::KeyParameters* params_;
  ::PROTOBUF_NAMESPACE_ID::uint64 creation_time_ms_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class GenerateKeyResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.GenerateKeyResponse) */ {
 public:
  inline GenerateKeyResponse() : GenerateKeyResponse(nullptr) {}
  virtual ~GenerateKeyResponse();
  explicit constexpr GenerateKeyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerateKeyResponse(const GenerateKeyResponse& from);
  GenerateKeyResponse(GenerateKeyResponse&& from) noexcept
    : GenerateKeyResponse() {
    *this = ::std::move(from);
  }

  inline GenerateKeyResponse& operator=(const GenerateKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerateKeyResponse& operator=(GenerateKeyResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerateKeyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerateKeyResponse* internal_default_instance() {
    return reinterpret_cast<const GenerateKeyResponse*>(
               &_GenerateKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GenerateKeyResponse& a, GenerateKeyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerateKeyResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerateKeyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerateKeyResponse* New() const final {
    return CreateMaybeMessage<GenerateKeyResponse>(nullptr);
  }

  GenerateKeyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerateKeyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerateKeyResponse& from);
  void MergeFrom(const GenerateKeyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateKeyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.GenerateKeyResponse";
  }
  protected:
  explicit GenerateKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlobFieldNumber = 2,
    kCharacteristicsFieldNumber = 3,
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.KeyBlob blob = 2;
  bool has_blob() const;
  private:
  bool _internal_has_blob() const;
  public:
  void clear_blob();
  const ::nugget::app::keymaster::KeyBlob& blob() const;
  ::nugget::app::keymaster::KeyBlob* release_blob();
  ::nugget::app::keymaster::KeyBlob* mutable_blob();
  void set_allocated_blob(::nugget::app::keymaster::KeyBlob* blob);
  private:
  const ::nugget::app::keymaster::KeyBlob& _internal_blob() const;
  ::nugget::app::keymaster::KeyBlob* _internal_mutable_blob();
  public:
  void unsafe_arena_set_allocated_blob(
      ::nugget::app::keymaster::KeyBlob* blob);
  ::nugget::app::keymaster::KeyBlob* unsafe_arena_release_blob();

  // .nugget.app.keymaster.KeyCharacteristics characteristics = 3;
  bool has_characteristics() const;
  private:
  bool _internal_has_characteristics() const;
  public:
  void clear_characteristics();
  const ::nugget::app::keymaster::KeyCharacteristics& characteristics() const;
  ::nugget::app::keymaster::KeyCharacteristics* release_characteristics();
  ::nugget::app::keymaster::KeyCharacteristics* mutable_characteristics();
  void set_allocated_characteristics(::nugget::app::keymaster::KeyCharacteristics* characteristics);
  private:
  const ::nugget::app::keymaster::KeyCharacteristics& _internal_characteristics() const;
  ::nugget::app::keymaster::KeyCharacteristics* _internal_mutable_characteristics();
  public:
  void unsafe_arena_set_allocated_characteristics(
      ::nugget::app::keymaster::KeyCharacteristics* characteristics);
  ::nugget::app::keymaster::KeyCharacteristics* unsafe_arena_release_characteristics();

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.GenerateKeyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::KeyBlob* blob_;
  ::nugget::app::keymaster::KeyCharacteristics* characteristics_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class GetKeyCharacteristicsRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.GetKeyCharacteristicsRequest) */ {
 public:
  inline GetKeyCharacteristicsRequest() : GetKeyCharacteristicsRequest(nullptr) {}
  virtual ~GetKeyCharacteristicsRequest();
  explicit constexpr GetKeyCharacteristicsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetKeyCharacteristicsRequest(const GetKeyCharacteristicsRequest& from);
  GetKeyCharacteristicsRequest(GetKeyCharacteristicsRequest&& from) noexcept
    : GetKeyCharacteristicsRequest() {
    *this = ::std::move(from);
  }

  inline GetKeyCharacteristicsRequest& operator=(const GetKeyCharacteristicsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetKeyCharacteristicsRequest& operator=(GetKeyCharacteristicsRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetKeyCharacteristicsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetKeyCharacteristicsRequest* internal_default_instance() {
    return reinterpret_cast<const GetKeyCharacteristicsRequest*>(
               &_GetKeyCharacteristicsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GetKeyCharacteristicsRequest& a, GetKeyCharacteristicsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetKeyCharacteristicsRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetKeyCharacteristicsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetKeyCharacteristicsRequest* New() const final {
    return CreateMaybeMessage<GetKeyCharacteristicsRequest>(nullptr);
  }

  GetKeyCharacteristicsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetKeyCharacteristicsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetKeyCharacteristicsRequest& from);
  void MergeFrom(const GetKeyCharacteristicsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetKeyCharacteristicsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.GetKeyCharacteristicsRequest";
  }
  protected:
  explicit GetKeyCharacteristicsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClientIdFieldNumber = 2,
    kAppDataFieldNumber = 3,
    kBlobFieldNumber = 1,
  };
  // bytes client_id = 2;
  void clear_client_id();
  const std::string& client_id() const;
  void set_client_id(const std::string& value);
  void set_client_id(std::string&& value);
  void set_client_id(const char* value);
  void set_client_id(const void* value, size_t size);
  std::string* mutable_client_id();
  std::string* release_client_id();
  void set_allocated_client_id(std::string* client_id);
  private:
  const std::string& _internal_client_id() const;
  void _internal_set_client_id(const std::string& value);
  std::string* _internal_mutable_client_id();
  public:

  // bytes app_data = 3;
  void clear_app_data();
  const std::string& app_data() const;
  void set_app_data(const std::string& value);
  void set_app_data(std::string&& value);
  void set_app_data(const char* value);
  void set_app_data(const void* value, size_t size);
  std::string* mutable_app_data();
  std::string* release_app_data();
  void set_allocated_app_data(std::string* app_data);
  private:
  const std::string& _internal_app_data() const;
  void _internal_set_app_data(const std::string& value);
  std::string* _internal_mutable_app_data();
  public:

  // .nugget.app.keymaster.KeyBlob blob = 1;
  bool has_blob() const;
  private:
  bool _internal_has_blob() const;
  public:
  void clear_blob();
  const ::nugget::app::keymaster::KeyBlob& blob() const;
  ::nugget::app::keymaster::KeyBlob* release_blob();
  ::nugget::app::keymaster::KeyBlob* mutable_blob();
  void set_allocated_blob(::nugget::app::keymaster::KeyBlob* blob);
  private:
  const ::nugget::app::keymaster::KeyBlob& _internal_blob() const;
  ::nugget::app::keymaster::KeyBlob* _internal_mutable_blob();
  public:
  void unsafe_arena_set_allocated_blob(
      ::nugget::app::keymaster::KeyBlob* blob);
  ::nugget::app::keymaster::KeyBlob* unsafe_arena_release_blob();

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.GetKeyCharacteristicsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr client_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr app_data_;
  ::nugget::app::keymaster::KeyBlob* blob_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class GetKeyCharacteristicsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.GetKeyCharacteristicsResponse) */ {
 public:
  inline GetKeyCharacteristicsResponse() : GetKeyCharacteristicsResponse(nullptr) {}
  virtual ~GetKeyCharacteristicsResponse();
  explicit constexpr GetKeyCharacteristicsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetKeyCharacteristicsResponse(const GetKeyCharacteristicsResponse& from);
  GetKeyCharacteristicsResponse(GetKeyCharacteristicsResponse&& from) noexcept
    : GetKeyCharacteristicsResponse() {
    *this = ::std::move(from);
  }

  inline GetKeyCharacteristicsResponse& operator=(const GetKeyCharacteristicsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetKeyCharacteristicsResponse& operator=(GetKeyCharacteristicsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetKeyCharacteristicsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetKeyCharacteristicsResponse* internal_default_instance() {
    return reinterpret_cast<const GetKeyCharacteristicsResponse*>(
               &_GetKeyCharacteristicsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GetKeyCharacteristicsResponse& a, GetKeyCharacteristicsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetKeyCharacteristicsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetKeyCharacteristicsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetKeyCharacteristicsResponse* New() const final {
    return CreateMaybeMessage<GetKeyCharacteristicsResponse>(nullptr);
  }

  GetKeyCharacteristicsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetKeyCharacteristicsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetKeyCharacteristicsResponse& from);
  void MergeFrom(const GetKeyCharacteristicsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetKeyCharacteristicsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.GetKeyCharacteristicsResponse";
  }
  protected:
  explicit GetKeyCharacteristicsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharacteristicsFieldNumber = 2,
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.KeyCharacteristics characteristics = 2;
  bool has_characteristics() const;
  private:
  bool _internal_has_characteristics() const;
  public:
  void clear_characteristics();
  const ::nugget::app::keymaster::KeyCharacteristics& characteristics() const;
  ::nugget::app::keymaster::KeyCharacteristics* release_characteristics();
  ::nugget::app::keymaster::KeyCharacteristics* mutable_characteristics();
  void set_allocated_characteristics(::nugget::app::keymaster::KeyCharacteristics* characteristics);
  private:
  const ::nugget::app::keymaster::KeyCharacteristics& _internal_characteristics() const;
  ::nugget::app::keymaster::KeyCharacteristics* _internal_mutable_characteristics();
  public:
  void unsafe_arena_set_allocated_characteristics(
      ::nugget::app::keymaster::KeyCharacteristics* characteristics);
  ::nugget::app::keymaster::KeyCharacteristics* unsafe_arena_release_characteristics();

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.GetKeyCharacteristicsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::KeyCharacteristics* characteristics_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class ImportKeyRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.ImportKeyRequest) */ {
 public:
  inline ImportKeyRequest() : ImportKeyRequest(nullptr) {}
  virtual ~ImportKeyRequest();
  explicit constexpr ImportKeyRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ImportKeyRequest(const ImportKeyRequest& from);
  ImportKeyRequest(ImportKeyRequest&& from) noexcept
    : ImportKeyRequest() {
    *this = ::std::move(from);
  }

  inline ImportKeyRequest& operator=(const ImportKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImportKeyRequest& operator=(ImportKeyRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ImportKeyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImportKeyRequest* internal_default_instance() {
    return reinterpret_cast<const ImportKeyRequest*>(
               &_ImportKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ImportKeyRequest& a, ImportKeyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ImportKeyRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImportKeyRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ImportKeyRequest* New() const final {
    return CreateMaybeMessage<ImportKeyRequest>(nullptr);
  }

  ImportKeyRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ImportKeyRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ImportKeyRequest& from);
  void MergeFrom(const ImportKeyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImportKeyRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.ImportKeyRequest";
  }
  protected:
  explicit ImportKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParamsFieldNumber = 1,
    kRsaFieldNumber = 2,
    kEcFieldNumber = 3,
    kSymmetricKeyFieldNumber = 4,
    kCreationTimeMsFieldNumber = 5,
  };
  // .nugget.app.keymaster.KeyParameters params = 1;
  bool has_params() const;
  private:
  bool _internal_has_params() const;
  public:
  void clear_params();
  const ::nugget::app::keymaster::KeyParameters& params() const;
  ::nugget::app::keymaster::KeyParameters* release_params();
  ::nugget::app::keymaster::KeyParameters* mutable_params();
  void set_allocated_params(::nugget::app::keymaster::KeyParameters* params);
  private:
  const ::nugget::app::keymaster::KeyParameters& _internal_params() const;
  ::nugget::app::keymaster::KeyParameters* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::nugget::app::keymaster::KeyParameters* params);
  ::nugget::app::keymaster::KeyParameters* unsafe_arena_release_params();

  // .nugget.app.keymaster.RSAKey rsa = 2;
  bool has_rsa() const;
  private:
  bool _internal_has_rsa() const;
  public:
  void clear_rsa();
  const ::nugget::app::keymaster::RSAKey& rsa() const;
  ::nugget::app::keymaster::RSAKey* release_rsa();
  ::nugget::app::keymaster::RSAKey* mutable_rsa();
  void set_allocated_rsa(::nugget::app::keymaster::RSAKey* rsa);
  private:
  const ::nugget::app::keymaster::RSAKey& _internal_rsa() const;
  ::nugget::app::keymaster::RSAKey* _internal_mutable_rsa();
  public:
  void unsafe_arena_set_allocated_rsa(
      ::nugget::app::keymaster::RSAKey* rsa);
  ::nugget::app::keymaster::RSAKey* unsafe_arena_release_rsa();

  // .nugget.app.keymaster.ECKey ec = 3;
  bool has_ec() const;
  private:
  bool _internal_has_ec() const;
  public:
  void clear_ec();
  const ::nugget::app::keymaster::ECKey& ec() const;
  ::nugget::app::keymaster::ECKey* release_ec();
  ::nugget::app::keymaster::ECKey* mutable_ec();
  void set_allocated_ec(::nugget::app::keymaster::ECKey* ec);
  private:
  const ::nugget::app::keymaster::ECKey& _internal_ec() const;
  ::nugget::app::keymaster::ECKey* _internal_mutable_ec();
  public:
  void unsafe_arena_set_allocated_ec(
      ::nugget::app::keymaster::ECKey* ec);
  ::nugget::app::keymaster::ECKey* unsafe_arena_release_ec();

  // .nugget.app.keymaster.SymmetricKey symmetric_key = 4;
  bool has_symmetric_key() const;
  private:
  bool _internal_has_symmetric_key() const;
  public:
  void clear_symmetric_key();
  const ::nugget::app::keymaster::SymmetricKey& symmetric_key() const;
  ::nugget::app::keymaster::SymmetricKey* release_symmetric_key();
  ::nugget::app::keymaster::SymmetricKey* mutable_symmetric_key();
  void set_allocated_symmetric_key(::nugget::app::keymaster::SymmetricKey* symmetric_key);
  private:
  const ::nugget::app::keymaster::SymmetricKey& _internal_symmetric_key() const;
  ::nugget::app::keymaster::SymmetricKey* _internal_mutable_symmetric_key();
  public:
  void unsafe_arena_set_allocated_symmetric_key(
      ::nugget::app::keymaster::SymmetricKey* symmetric_key);
  ::nugget::app::keymaster::SymmetricKey* unsafe_arena_release_symmetric_key();

  // uint64 creation_time_ms = 5;
  void clear_creation_time_ms();
  ::PROTOBUF_NAMESPACE_ID::uint64 creation_time_ms() const;
  void set_creation_time_ms(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_creation_time_ms() const;
  void _internal_set_creation_time_ms(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.ImportKeyRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::KeyParameters* params_;
  ::nugget::app::keymaster::RSAKey* rsa_;
  ::nugget::app::keymaster::ECKey* ec_;
  ::nugget::app::keymaster::SymmetricKey* symmetric_key_;
  ::PROTOBUF_NAMESPACE_ID::uint64 creation_time_ms_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class ImportKeyResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.ImportKeyResponse) */ {
 public:
  inline ImportKeyResponse() : ImportKeyResponse(nullptr) {}
  virtual ~ImportKeyResponse();
  explicit constexpr ImportKeyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ImportKeyResponse(const ImportKeyResponse& from);
  ImportKeyResponse(ImportKeyResponse&& from) noexcept
    : ImportKeyResponse() {
    *this = ::std::move(from);
  }

  inline ImportKeyResponse& operator=(const ImportKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImportKeyResponse& operator=(ImportKeyResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ImportKeyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImportKeyResponse* internal_default_instance() {
    return reinterpret_cast<const ImportKeyResponse*>(
               &_ImportKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ImportKeyResponse& a, ImportKeyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ImportKeyResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImportKeyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ImportKeyResponse* New() const final {
    return CreateMaybeMessage<ImportKeyResponse>(nullptr);
  }

  ImportKeyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ImportKeyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ImportKeyResponse& from);
  void MergeFrom(const ImportKeyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImportKeyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.ImportKeyResponse";
  }
  protected:
  explicit ImportKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlobFieldNumber = 2,
    kCharacteristicsFieldNumber = 3,
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.KeyBlob blob = 2;
  bool has_blob() const;
  private:
  bool _internal_has_blob() const;
  public:
  void clear_blob();
  const ::nugget::app::keymaster::KeyBlob& blob() const;
  ::nugget::app::keymaster::KeyBlob* release_blob();
  ::nugget::app::keymaster::KeyBlob* mutable_blob();
  void set_allocated_blob(::nugget::app::keymaster::KeyBlob* blob);
  private:
  const ::nugget::app::keymaster::KeyBlob& _internal_blob() const;
  ::nugget::app::keymaster::KeyBlob* _internal_mutable_blob();
  public:
  void unsafe_arena_set_allocated_blob(
      ::nugget::app::keymaster::KeyBlob* blob);
  ::nugget::app::keymaster::KeyBlob* unsafe_arena_release_blob();

  // .nugget.app.keymaster.KeyCharacteristics characteristics = 3;
  bool has_characteristics() const;
  private:
  bool _internal_has_characteristics() const;
  public:
  void clear_characteristics();
  const ::nugget::app::keymaster::KeyCharacteristics& characteristics() const;
  ::nugget::app::keymaster::KeyCharacteristics* release_characteristics();
  ::nugget::app::keymaster::KeyCharacteristics* mutable_characteristics();
  void set_allocated_characteristics(::nugget::app::keymaster::KeyCharacteristics* characteristics);
  private:
  const ::nugget::app::keymaster::KeyCharacteristics& _internal_characteristics() const;
  ::nugget::app::keymaster::KeyCharacteristics* _internal_mutable_characteristics();
  public:
  void unsafe_arena_set_allocated_characteristics(
      ::nugget::app::keymaster::KeyCharacteristics* characteristics);
  ::nugget::app::keymaster::KeyCharacteristics* unsafe_arena_release_characteristics();

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.ImportKeyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::KeyBlob* blob_;
  ::nugget::app::keymaster::KeyCharacteristics* characteristics_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class ExportKeyRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.ExportKeyRequest) */ {
 public:
  inline ExportKeyRequest() : ExportKeyRequest(nullptr) {}
  virtual ~ExportKeyRequest();
  explicit constexpr ExportKeyRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ExportKeyRequest(const ExportKeyRequest& from);
  ExportKeyRequest(ExportKeyRequest&& from) noexcept
    : ExportKeyRequest() {
    *this = ::std::move(from);
  }

  inline ExportKeyRequest& operator=(const ExportKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExportKeyRequest& operator=(ExportKeyRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ExportKeyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExportKeyRequest* internal_default_instance() {
    return reinterpret_cast<const ExportKeyRequest*>(
               &_ExportKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ExportKeyRequest& a, ExportKeyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ExportKeyRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExportKeyRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ExportKeyRequest* New() const final {
    return CreateMaybeMessage<ExportKeyRequest>(nullptr);
  }

  ExportKeyRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ExportKeyRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ExportKeyRequest& from);
  void MergeFrom(const ExportKeyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExportKeyRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.ExportKeyRequest";
  }
  protected:
  explicit ExportKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClientIdFieldNumber = 3,
    kAppDataFieldNumber = 4,
    kBlobFieldNumber = 2,
    kFormatFieldNumber = 1,
  };
  // bytes client_id = 3;
  void clear_client_id();
  const std::string& client_id() const;
  void set_client_id(const std::string& value);
  void set_client_id(std::string&& value);
  void set_client_id(const char* value);
  void set_client_id(const void* value, size_t size);
  std::string* mutable_client_id();
  std::string* release_client_id();
  void set_allocated_client_id(std::string* client_id);
  private:
  const std::string& _internal_client_id() const;
  void _internal_set_client_id(const std::string& value);
  std::string* _internal_mutable_client_id();
  public:

  // bytes app_data = 4;
  void clear_app_data();
  const std::string& app_data() const;
  void set_app_data(const std::string& value);
  void set_app_data(std::string&& value);
  void set_app_data(const char* value);
  void set_app_data(const void* value, size_t size);
  std::string* mutable_app_data();
  std::string* release_app_data();
  void set_allocated_app_data(std::string* app_data);
  private:
  const std::string& _internal_app_data() const;
  void _internal_set_app_data(const std::string& value);
  std::string* _internal_mutable_app_data();
  public:

  // .nugget.app.keymaster.KeyBlob blob = 2;
  bool has_blob() const;
  private:
  bool _internal_has_blob() const;
  public:
  void clear_blob();
  const ::nugget::app::keymaster::KeyBlob& blob() const;
  ::nugget::app::keymaster::KeyBlob* release_blob();
  ::nugget::app::keymaster::KeyBlob* mutable_blob();
  void set_allocated_blob(::nugget::app::keymaster::KeyBlob* blob);
  private:
  const ::nugget::app::keymaster::KeyBlob& _internal_blob() const;
  ::nugget::app::keymaster::KeyBlob* _internal_mutable_blob();
  public:
  void unsafe_arena_set_allocated_blob(
      ::nugget::app::keymaster::KeyBlob* blob);
  ::nugget::app::keymaster::KeyBlob* unsafe_arena_release_blob();

  // .nugget.app.keymaster.KeyFormat format = 1;
  void clear_format();
  ::nugget::app::keymaster::KeyFormat format() const;
  void set_format(::nugget::app::keymaster::KeyFormat value);
  private:
  ::nugget::app::keymaster::KeyFormat _internal_format() const;
  void _internal_set_format(::nugget::app::keymaster::KeyFormat value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.ExportKeyRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr client_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr app_data_;
  ::nugget::app::keymaster::KeyBlob* blob_;
  int format_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class ExportKeyResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.ExportKeyResponse) */ {
 public:
  inline ExportKeyResponse() : ExportKeyResponse(nullptr) {}
  virtual ~ExportKeyResponse();
  explicit constexpr ExportKeyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ExportKeyResponse(const ExportKeyResponse& from);
  ExportKeyResponse(ExportKeyResponse&& from) noexcept
    : ExportKeyResponse() {
    *this = ::std::move(from);
  }

  inline ExportKeyResponse& operator=(const ExportKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExportKeyResponse& operator=(ExportKeyResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ExportKeyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExportKeyResponse* internal_default_instance() {
    return reinterpret_cast<const ExportKeyResponse*>(
               &_ExportKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ExportKeyResponse& a, ExportKeyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ExportKeyResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExportKeyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ExportKeyResponse* New() const final {
    return CreateMaybeMessage<ExportKeyResponse>(nullptr);
  }

  ExportKeyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ExportKeyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ExportKeyResponse& from);
  void MergeFrom(const ExportKeyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExportKeyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.ExportKeyResponse";
  }
  protected:
  explicit ExportKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRsaFieldNumber = 3,
    kEcFieldNumber = 4,
    kErrorCodeFieldNumber = 1,
    kAlgorithmFieldNumber = 2,
  };
  // .nugget.app.keymaster.RSAKey rsa = 3;
  bool has_rsa() const;
  private:
  bool _internal_has_rsa() const;
  public:
  void clear_rsa();
  const ::nugget::app::keymaster::RSAKey& rsa() const;
  ::nugget::app::keymaster::RSAKey* release_rsa();
  ::nugget::app::keymaster::RSAKey* mutable_rsa();
  void set_allocated_rsa(::nugget::app::keymaster::RSAKey* rsa);
  private:
  const ::nugget::app::keymaster::RSAKey& _internal_rsa() const;
  ::nugget::app::keymaster::RSAKey* _internal_mutable_rsa();
  public:
  void unsafe_arena_set_allocated_rsa(
      ::nugget::app::keymaster::RSAKey* rsa);
  ::nugget::app::keymaster::RSAKey* unsafe_arena_release_rsa();

  // .nugget.app.keymaster.ECKey ec = 4;
  bool has_ec() const;
  private:
  bool _internal_has_ec() const;
  public:
  void clear_ec();
  const ::nugget::app::keymaster::ECKey& ec() const;
  ::nugget::app::keymaster::ECKey* release_ec();
  ::nugget::app::keymaster::ECKey* mutable_ec();
  void set_allocated_ec(::nugget::app::keymaster::ECKey* ec);
  private:
  const ::nugget::app::keymaster::ECKey& _internal_ec() const;
  ::nugget::app::keymaster::ECKey* _internal_mutable_ec();
  public:
  void unsafe_arena_set_allocated_ec(
      ::nugget::app::keymaster::ECKey* ec);
  ::nugget::app::keymaster::ECKey* unsafe_arena_release_ec();

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // .nugget.app.keymaster.Algorithm algorithm = 2;
  void clear_algorithm();
  ::nugget::app::keymaster::Algorithm algorithm() const;
  void set_algorithm(::nugget::app::keymaster::Algorithm value);
  private:
  ::nugget::app::keymaster::Algorithm _internal_algorithm() const;
  void _internal_set_algorithm(::nugget::app::keymaster::Algorithm value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.ExportKeyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::RSAKey* rsa_;
  ::nugget::app::keymaster::ECKey* ec_;
  int error_code_;
  int algorithm_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class StartAttestKeyRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.StartAttestKeyRequest) */ {
 public:
  inline StartAttestKeyRequest() : StartAttestKeyRequest(nullptr) {}
  virtual ~StartAttestKeyRequest();
  explicit constexpr StartAttestKeyRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StartAttestKeyRequest(const StartAttestKeyRequest& from);
  StartAttestKeyRequest(StartAttestKeyRequest&& from) noexcept
    : StartAttestKeyRequest() {
    *this = ::std::move(from);
  }

  inline StartAttestKeyRequest& operator=(const StartAttestKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartAttestKeyRequest& operator=(StartAttestKeyRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StartAttestKeyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartAttestKeyRequest* internal_default_instance() {
    return reinterpret_cast<const StartAttestKeyRequest*>(
               &_StartAttestKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(StartAttestKeyRequest& a, StartAttestKeyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StartAttestKeyRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartAttestKeyRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StartAttestKeyRequest* New() const final {
    return CreateMaybeMessage<StartAttestKeyRequest>(nullptr);
  }

  StartAttestKeyRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StartAttestKeyRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StartAttestKeyRequest& from);
  void MergeFrom(const StartAttestKeyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartAttestKeyRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.StartAttestKeyRequest";
  }
  protected:
  explicit StartAttestKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNotBeforeFieldNumber = 5,
    kNotAfterFieldNumber = 6,
    kCallerIssuerSubjNameFieldNumber = 7,
    kBlobFieldNumber = 1,
    kParamsFieldNumber = 2,
    kCallerKeyParamsFieldNumber = 8,
    kAttestationAppIdLenFieldNumber = 3,
    kSelectorFieldNumber = 4,
  };
  // bytes not_before = 5;
  void clear_not_before();
  const std::string& not_before() const;
  void set_not_before(const std::string& value);
  void set_not_before(std::string&& value);
  void set_not_before(const char* value);
  void set_not_before(const void* value, size_t size);
  std::string* mutable_not_before();
  std::string* release_not_before();
  void set_allocated_not_before(std::string* not_before);
  private:
  const std::string& _internal_not_before() const;
  void _internal_set_not_before(const std::string& value);
  std::string* _internal_mutable_not_before();
  public:

  // bytes not_after = 6;
  void clear_not_after();
  const std::string& not_after() const;
  void set_not_after(const std::string& value);
  void set_not_after(std::string&& value);
  void set_not_after(const char* value);
  void set_not_after(const void* value, size_t size);
  std::string* mutable_not_after();
  std::string* release_not_after();
  void set_allocated_not_after(std::string* not_after);
  private:
  const std::string& _internal_not_after() const;
  void _internal_set_not_after(const std::string& value);
  std::string* _internal_mutable_not_after();
  public:

  // bytes caller_issuer_subj_name = 7;
  void clear_caller_issuer_subj_name();
  const std::string& caller_issuer_subj_name() const;
  void set_caller_issuer_subj_name(const std::string& value);
  void set_caller_issuer_subj_name(std::string&& value);
  void set_caller_issuer_subj_name(const char* value);
  void set_caller_issuer_subj_name(const void* value, size_t size);
  std::string* mutable_caller_issuer_subj_name();
  std::string* release_caller_issuer_subj_name();
  void set_allocated_caller_issuer_subj_name(std::string* caller_issuer_subj_name);
  private:
  const std::string& _internal_caller_issuer_subj_name() const;
  void _internal_set_caller_issuer_subj_name(const std::string& value);
  std::string* _internal_mutable_caller_issuer_subj_name();
  public:

  // .nugget.app.keymaster.KeyBlob blob = 1;
  bool has_blob() const;
  private:
  bool _internal_has_blob() const;
  public:
  void clear_blob();
  const ::nugget::app::keymaster::KeyBlob& blob() const;
  ::nugget::app::keymaster::KeyBlob* release_blob();
  ::nugget::app::keymaster::KeyBlob* mutable_blob();
  void set_allocated_blob(::nugget::app::keymaster::KeyBlob* blob);
  private:
  const ::nugget::app::keymaster::KeyBlob& _internal_blob() const;
  ::nugget::app::keymaster::KeyBlob* _internal_mutable_blob();
  public:
  void unsafe_arena_set_allocated_blob(
      ::nugget::app::keymaster::KeyBlob* blob);
  ::nugget::app::keymaster::KeyBlob* unsafe_arena_release_blob();

  // .nugget.app.keymaster.KeyParameters params = 2;
  bool has_params() const;
  private:
  bool _internal_has_params() const;
  public:
  void clear_params();
  const ::nugget::app::keymaster::KeyParameters& params() const;
  ::nugget::app::keymaster::KeyParameters* release_params();
  ::nugget::app::keymaster::KeyParameters* mutable_params();
  void set_allocated_params(::nugget::app::keymaster::KeyParameters* params);
  private:
  const ::nugget::app::keymaster::KeyParameters& _internal_params() const;
  ::nugget::app::keymaster::KeyParameters* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::nugget::app::keymaster::KeyParameters* params);
  ::nugget::app::keymaster::KeyParameters* unsafe_arena_release_params();

  // .nugget.app.keymaster.KeyParameters caller_key_params = 8;
  bool has_caller_key_params() const;
  private:
  bool _internal_has_caller_key_params() const;
  public:
  void clear_caller_key_params();
  const ::nugget::app::keymaster::KeyParameters& caller_key_params() const;
  ::nugget::app::keymaster::KeyParameters* release_caller_key_params();
  ::nugget::app::keymaster::KeyParameters* mutable_caller_key_params();
  void set_allocated_caller_key_params(::nugget::app::keymaster::KeyParameters* caller_key_params);
  private:
  const ::nugget::app::keymaster::KeyParameters& _internal_caller_key_params() const;
  ::nugget::app::keymaster::KeyParameters* _internal_mutable_caller_key_params();
  public:
  void unsafe_arena_set_allocated_caller_key_params(
      ::nugget::app::keymaster::KeyParameters* caller_key_params);
  ::nugget::app::keymaster::KeyParameters* unsafe_arena_release_caller_key_params();

  // uint32 attestation_app_id_len = 3;
  void clear_attestation_app_id_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 attestation_app_id_len() const;
  void set_attestation_app_id_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_attestation_app_id_len() const;
  void _internal_set_attestation_app_id_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .nugget.app.keymaster.AttestationSelector selector = 4;
  void clear_selector();
  ::nugget::app::keymaster::AttestationSelector selector() const;
  void set_selector(::nugget::app::keymaster::AttestationSelector value);
  private:
  ::nugget::app::keymaster::AttestationSelector _internal_selector() const;
  void _internal_set_selector(::nugget::app::keymaster::AttestationSelector value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.StartAttestKeyRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr not_before_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr not_after_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr caller_issuer_subj_name_;
  ::nugget::app::keymaster::KeyBlob* blob_;
  ::nugget::app::keymaster::KeyParameters* params_;
  ::nugget::app::keymaster::KeyParameters* caller_key_params_;
  ::PROTOBUF_NAMESPACE_ID::uint32 attestation_app_id_len_;
  int selector_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class StartAttestKeyResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.StartAttestKeyResponse) */ {
 public:
  inline StartAttestKeyResponse() : StartAttestKeyResponse(nullptr) {}
  virtual ~StartAttestKeyResponse();
  explicit constexpr StartAttestKeyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StartAttestKeyResponse(const StartAttestKeyResponse& from);
  StartAttestKeyResponse(StartAttestKeyResponse&& from) noexcept
    : StartAttestKeyResponse() {
    *this = ::std::move(from);
  }

  inline StartAttestKeyResponse& operator=(const StartAttestKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartAttestKeyResponse& operator=(StartAttestKeyResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StartAttestKeyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartAttestKeyResponse* internal_default_instance() {
    return reinterpret_cast<const StartAttestKeyResponse*>(
               &_StartAttestKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(StartAttestKeyResponse& a, StartAttestKeyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(StartAttestKeyResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartAttestKeyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StartAttestKeyResponse* New() const final {
    return CreateMaybeMessage<StartAttestKeyResponse>(nullptr);
  }

  StartAttestKeyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StartAttestKeyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StartAttestKeyResponse& from);
  void MergeFrom(const StartAttestKeyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartAttestKeyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.StartAttestKeyResponse";
  }
  protected:
  explicit StartAttestKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCertificatePrologueFieldNumber = 3,
    kHandleFieldNumber = 2,
    kErrorCodeFieldNumber = 1,
  };
  // bytes certificate_prologue = 3;
  void clear_certificate_prologue();
  const std::string& certificate_prologue() const;
  void set_certificate_prologue(const std::string& value);
  void set_certificate_prologue(std::string&& value);
  void set_certificate_prologue(const char* value);
  void set_certificate_prologue(const void* value, size_t size);
  std::string* mutable_certificate_prologue();
  std::string* release_certificate_prologue();
  void set_allocated_certificate_prologue(std::string* certificate_prologue);
  private:
  const std::string& _internal_certificate_prologue() const;
  void _internal_set_certificate_prologue(const std::string& value);
  std::string* _internal_mutable_certificate_prologue();
  public:

  // .nugget.app.keymaster.OperationHandle handle = 2;
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  const ::nugget::app::keymaster::OperationHandle& handle() const;
  ::nugget::app::keymaster::OperationHandle* release_handle();
  ::nugget::app::keymaster::OperationHandle* mutable_handle();
  void set_allocated_handle(::nugget::app::keymaster::OperationHandle* handle);
  private:
  const ::nugget::app::keymaster::OperationHandle& _internal_handle() const;
  ::nugget::app::keymaster::OperationHandle* _internal_mutable_handle();
  public:
  void unsafe_arena_set_allocated_handle(
      ::nugget::app::keymaster::OperationHandle* handle);
  ::nugget::app::keymaster::OperationHandle* unsafe_arena_release_handle();

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.StartAttestKeyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr certificate_prologue_;
  ::nugget::app::keymaster::OperationHandle* handle_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class ContinueAttestKeyRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.ContinueAttestKeyRequest) */ {
 public:
  inline ContinueAttestKeyRequest() : ContinueAttestKeyRequest(nullptr) {}
  virtual ~ContinueAttestKeyRequest();
  explicit constexpr ContinueAttestKeyRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ContinueAttestKeyRequest(const ContinueAttestKeyRequest& from);
  ContinueAttestKeyRequest(ContinueAttestKeyRequest&& from) noexcept
    : ContinueAttestKeyRequest() {
    *this = ::std::move(from);
  }

  inline ContinueAttestKeyRequest& operator=(const ContinueAttestKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ContinueAttestKeyRequest& operator=(ContinueAttestKeyRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ContinueAttestKeyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ContinueAttestKeyRequest* internal_default_instance() {
    return reinterpret_cast<const ContinueAttestKeyRequest*>(
               &_ContinueAttestKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(ContinueAttestKeyRequest& a, ContinueAttestKeyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ContinueAttestKeyRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ContinueAttestKeyRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ContinueAttestKeyRequest* New() const final {
    return CreateMaybeMessage<ContinueAttestKeyRequest>(nullptr);
  }

  ContinueAttestKeyRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ContinueAttestKeyRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ContinueAttestKeyRequest& from);
  void MergeFrom(const ContinueAttestKeyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContinueAttestKeyRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.ContinueAttestKeyRequest";
  }
  protected:
  explicit ContinueAttestKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHandleFieldNumber = 1,
    kParamsFieldNumber = 3,
  };
  // .nugget.app.keymaster.OperationHandle handle = 1;
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  const ::nugget::app::keymaster::OperationHandle& handle() const;
  ::nugget::app::keymaster::OperationHandle* release_handle();
  ::nugget::app::keymaster::OperationHandle* mutable_handle();
  void set_allocated_handle(::nugget::app::keymaster::OperationHandle* handle);
  private:
  const ::nugget::app::keymaster::OperationHandle& _internal_handle() const;
  ::nugget::app::keymaster::OperationHandle* _internal_mutable_handle();
  public:
  void unsafe_arena_set_allocated_handle(
      ::nugget::app::keymaster::OperationHandle* handle);
  ::nugget::app::keymaster::OperationHandle* unsafe_arena_release_handle();

  // .nugget.app.keymaster.KeyParameters params = 3;
  bool has_params() const;
  private:
  bool _internal_has_params() const;
  public:
  void clear_params();
  const ::nugget::app::keymaster::KeyParameters& params() const;
  ::nugget::app::keymaster::KeyParameters* release_params();
  ::nugget::app::keymaster::KeyParameters* mutable_params();
  void set_allocated_params(::nugget::app::keymaster::KeyParameters* params);
  private:
  const ::nugget::app::keymaster::KeyParameters& _internal_params() const;
  ::nugget::app::keymaster::KeyParameters* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::nugget::app::keymaster::KeyParameters* params);
  ::nugget::app::keymaster::KeyParameters* unsafe_arena_release_params();

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.ContinueAttestKeyRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::OperationHandle* handle_;
  ::nugget::app::keymaster::KeyParameters* params_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class ContinueAttestKeyResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.ContinueAttestKeyResponse) */ {
 public:
  inline ContinueAttestKeyResponse() : ContinueAttestKeyResponse(nullptr) {}
  virtual ~ContinueAttestKeyResponse();
  explicit constexpr ContinueAttestKeyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ContinueAttestKeyResponse(const ContinueAttestKeyResponse& from);
  ContinueAttestKeyResponse(ContinueAttestKeyResponse&& from) noexcept
    : ContinueAttestKeyResponse() {
    *this = ::std::move(from);
  }

  inline ContinueAttestKeyResponse& operator=(const ContinueAttestKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ContinueAttestKeyResponse& operator=(ContinueAttestKeyResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ContinueAttestKeyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ContinueAttestKeyResponse* internal_default_instance() {
    return reinterpret_cast<const ContinueAttestKeyResponse*>(
               &_ContinueAttestKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(ContinueAttestKeyResponse& a, ContinueAttestKeyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ContinueAttestKeyResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ContinueAttestKeyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ContinueAttestKeyResponse* New() const final {
    return CreateMaybeMessage<ContinueAttestKeyResponse>(nullptr);
  }

  ContinueAttestKeyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ContinueAttestKeyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ContinueAttestKeyResponse& from);
  void MergeFrom(const ContinueAttestKeyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContinueAttestKeyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.ContinueAttestKeyResponse";
  }
  protected:
  explicit ContinueAttestKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCertificateBodyFieldNumber = 2,
    kErrorCodeFieldNumber = 1,
  };
  // bytes certificate_body = 2;
  void clear_certificate_body();
  const std::string& certificate_body() const;
  void set_certificate_body(const std::string& value);
  void set_certificate_body(std::string&& value);
  void set_certificate_body(const char* value);
  void set_certificate_body(const void* value, size_t size);
  std::string* mutable_certificate_body();
  std::string* release_certificate_body();
  void set_allocated_certificate_body(std::string* certificate_body);
  private:
  const std::string& _internal_certificate_body() const;
  void _internal_set_certificate_body(const std::string& value);
  std::string* _internal_mutable_certificate_body();
  public:

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.ContinueAttestKeyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr certificate_body_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class FinishAttestKeyRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.FinishAttestKeyRequest) */ {
 public:
  inline FinishAttestKeyRequest() : FinishAttestKeyRequest(nullptr) {}
  virtual ~FinishAttestKeyRequest();
  explicit constexpr FinishAttestKeyRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FinishAttestKeyRequest(const FinishAttestKeyRequest& from);
  FinishAttestKeyRequest(FinishAttestKeyRequest&& from) noexcept
    : FinishAttestKeyRequest() {
    *this = ::std::move(from);
  }

  inline FinishAttestKeyRequest& operator=(const FinishAttestKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FinishAttestKeyRequest& operator=(FinishAttestKeyRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FinishAttestKeyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FinishAttestKeyRequest* internal_default_instance() {
    return reinterpret_cast<const FinishAttestKeyRequest*>(
               &_FinishAttestKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(FinishAttestKeyRequest& a, FinishAttestKeyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(FinishAttestKeyRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FinishAttestKeyRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FinishAttestKeyRequest* New() const final {
    return CreateMaybeMessage<FinishAttestKeyRequest>(nullptr);
  }

  FinishAttestKeyRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FinishAttestKeyRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FinishAttestKeyRequest& from);
  void MergeFrom(const FinishAttestKeyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FinishAttestKeyRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.FinishAttestKeyRequest";
  }
  protected:
  explicit FinishAttestKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHandleFieldNumber = 1,
    kCallerBlobFieldNumber = 2,
    kCallerKeyParamsFieldNumber = 3,
  };
  // .nugget.app.keymaster.OperationHandle handle = 1;
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  const ::nugget::app::keymaster::OperationHandle& handle() const;
  ::nugget::app::keymaster::OperationHandle* release_handle();
  ::nugget::app::keymaster::OperationHandle* mutable_handle();
  void set_allocated_handle(::nugget::app::keymaster::OperationHandle* handle);
  private:
  const ::nugget::app::keymaster::OperationHandle& _internal_handle() const;
  ::nugget::app::keymaster::OperationHandle* _internal_mutable_handle();
  public:
  void unsafe_arena_set_allocated_handle(
      ::nugget::app::keymaster::OperationHandle* handle);
  ::nugget::app::keymaster::OperationHandle* unsafe_arena_release_handle();

  // .nugget.app.keymaster.KeyBlob caller_blob = 2;
  bool has_caller_blob() const;
  private:
  bool _internal_has_caller_blob() const;
  public:
  void clear_caller_blob();
  const ::nugget::app::keymaster::KeyBlob& caller_blob() const;
  ::nugget::app::keymaster::KeyBlob* release_caller_blob();
  ::nugget::app::keymaster::KeyBlob* mutable_caller_blob();
  void set_allocated_caller_blob(::nugget::app::keymaster::KeyBlob* caller_blob);
  private:
  const ::nugget::app::keymaster::KeyBlob& _internal_caller_blob() const;
  ::nugget::app::keymaster::KeyBlob* _internal_mutable_caller_blob();
  public:
  void unsafe_arena_set_allocated_caller_blob(
      ::nugget::app::keymaster::KeyBlob* caller_blob);
  ::nugget::app::keymaster::KeyBlob* unsafe_arena_release_caller_blob();

  // .nugget.app.keymaster.KeyParameters caller_key_params = 3;
  bool has_caller_key_params() const;
  private:
  bool _internal_has_caller_key_params() const;
  public:
  void clear_caller_key_params();
  const ::nugget::app::keymaster::KeyParameters& caller_key_params() const;
  ::nugget::app::keymaster::KeyParameters* release_caller_key_params();
  ::nugget::app::keymaster::KeyParameters* mutable_caller_key_params();
  void set_allocated_caller_key_params(::nugget::app::keymaster::KeyParameters* caller_key_params);
  private:
  const ::nugget::app::keymaster::KeyParameters& _internal_caller_key_params() const;
  ::nugget::app::keymaster::KeyParameters* _internal_mutable_caller_key_params();
  public:
  void unsafe_arena_set_allocated_caller_key_params(
      ::nugget::app::keymaster::KeyParameters* caller_key_params);
  ::nugget::app::keymaster::KeyParameters* unsafe_arena_release_caller_key_params();

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.FinishAttestKeyRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::OperationHandle* handle_;
  ::nugget::app::keymaster::KeyBlob* caller_blob_;
  ::nugget::app::keymaster::KeyParameters* caller_key_params_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class FinishAttestKeyResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.FinishAttestKeyResponse) */ {
 public:
  inline FinishAttestKeyResponse() : FinishAttestKeyResponse(nullptr) {}
  virtual ~FinishAttestKeyResponse();
  explicit constexpr FinishAttestKeyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FinishAttestKeyResponse(const FinishAttestKeyResponse& from);
  FinishAttestKeyResponse(FinishAttestKeyResponse&& from) noexcept
    : FinishAttestKeyResponse() {
    *this = ::std::move(from);
  }

  inline FinishAttestKeyResponse& operator=(const FinishAttestKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FinishAttestKeyResponse& operator=(FinishAttestKeyResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FinishAttestKeyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FinishAttestKeyResponse* internal_default_instance() {
    return reinterpret_cast<const FinishAttestKeyResponse*>(
               &_FinishAttestKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(FinishAttestKeyResponse& a, FinishAttestKeyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(FinishAttestKeyResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FinishAttestKeyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FinishAttestKeyResponse* New() const final {
    return CreateMaybeMessage<FinishAttestKeyResponse>(nullptr);
  }

  FinishAttestKeyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FinishAttestKeyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FinishAttestKeyResponse& from);
  void MergeFrom(const FinishAttestKeyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FinishAttestKeyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.FinishAttestKeyResponse";
  }
  protected:
  explicit FinishAttestKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCertificateEpilogueFieldNumber = 2,
    kErrorCodeFieldNumber = 1,
    kChipFusingFieldNumber = 3,
    kNodelockedRoFieldNumber = 4,
  };
  // bytes certificate_epilogue = 2;
  void clear_certificate_epilogue();
  const std::string& certificate_epilogue() const;
  void set_certificate_epilogue(const std::string& value);
  void set_certificate_epilogue(std::string&& value);
  void set_certificate_epilogue(const char* value);
  void set_certificate_epilogue(const void* value, size_t size);
  std::string* mutable_certificate_epilogue();
  std::string* release_certificate_epilogue();
  void set_allocated_certificate_epilogue(std::string* certificate_epilogue);
  private:
  const std::string& _internal_certificate_epilogue() const;
  void _internal_set_certificate_epilogue(const std::string& value);
  std::string* _internal_mutable_certificate_epilogue();
  public:

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // .nugget.app.keymaster.ChipFusing chip_fusing = 3;
  void clear_chip_fusing();
  ::nugget::app::keymaster::ChipFusing chip_fusing() const;
  void set_chip_fusing(::nugget::app::keymaster::ChipFusing value);
  private:
  ::nugget::app::keymaster::ChipFusing _internal_chip_fusing() const;
  void _internal_set_chip_fusing(::nugget::app::keymaster::ChipFusing value);
  public:

  // bool nodelocked_ro = 4;
  void clear_nodelocked_ro();
  bool nodelocked_ro() const;
  void set_nodelocked_ro(bool value);
  private:
  bool _internal_nodelocked_ro() const;
  void _internal_set_nodelocked_ro(bool value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.FinishAttestKeyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr certificate_epilogue_;
  int error_code_;
  int chip_fusing_;
  bool nodelocked_ro_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class UpgradeKeyRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.UpgradeKeyRequest) */ {
 public:
  inline UpgradeKeyRequest() : UpgradeKeyRequest(nullptr) {}
  virtual ~UpgradeKeyRequest();
  explicit constexpr UpgradeKeyRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UpgradeKeyRequest(const UpgradeKeyRequest& from);
  UpgradeKeyRequest(UpgradeKeyRequest&& from) noexcept
    : UpgradeKeyRequest() {
    *this = ::std::move(from);
  }

  inline UpgradeKeyRequest& operator=(const UpgradeKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpgradeKeyRequest& operator=(UpgradeKeyRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpgradeKeyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpgradeKeyRequest* internal_default_instance() {
    return reinterpret_cast<const UpgradeKeyRequest*>(
               &_UpgradeKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(UpgradeKeyRequest& a, UpgradeKeyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpgradeKeyRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpgradeKeyRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpgradeKeyRequest* New() const final {
    return CreateMaybeMessage<UpgradeKeyRequest>(nullptr);
  }

  UpgradeKeyRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpgradeKeyRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpgradeKeyRequest& from);
  void MergeFrom(const UpgradeKeyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpgradeKeyRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.UpgradeKeyRequest";
  }
  protected:
  explicit UpgradeKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlobFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // .nugget.app.keymaster.KeyBlob blob = 1;
  bool has_blob() const;
  private:
  bool _internal_has_blob() const;
  public:
  void clear_blob();
  const ::nugget::app::keymaster::KeyBlob& blob() const;
  ::nugget::app::keymaster::KeyBlob* release_blob();
  ::nugget::app::keymaster::KeyBlob* mutable_blob();
  void set_allocated_blob(::nugget::app::keymaster::KeyBlob* blob);
  private:
  const ::nugget::app::keymaster::KeyBlob& _internal_blob() const;
  ::nugget::app::keymaster::KeyBlob* _internal_mutable_blob();
  public:
  void unsafe_arena_set_allocated_blob(
      ::nugget::app::keymaster::KeyBlob* blob);
  ::nugget::app::keymaster::KeyBlob* unsafe_arena_release_blob();

  // .nugget.app.keymaster.KeyParameters params = 2;
  bool has_params() const;
  private:
  bool _internal_has_params() const;
  public:
  void clear_params();
  const ::nugget::app::keymaster::KeyParameters& params() const;
  ::nugget::app::keymaster::KeyParameters* release_params();
  ::nugget::app::keymaster::KeyParameters* mutable_params();
  void set_allocated_params(::nugget::app::keymaster::KeyParameters* params);
  private:
  const ::nugget::app::keymaster::KeyParameters& _internal_params() const;
  ::nugget::app::keymaster::KeyParameters* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::nugget::app::keymaster::KeyParameters* params);
  ::nugget::app::keymaster::KeyParameters* unsafe_arena_release_params();

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.UpgradeKeyRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::KeyBlob* blob_;
  ::nugget::app::keymaster::KeyParameters* params_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class UpgradeKeyResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.UpgradeKeyResponse) */ {
 public:
  inline UpgradeKeyResponse() : UpgradeKeyResponse(nullptr) {}
  virtual ~UpgradeKeyResponse();
  explicit constexpr UpgradeKeyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UpgradeKeyResponse(const UpgradeKeyResponse& from);
  UpgradeKeyResponse(UpgradeKeyResponse&& from) noexcept
    : UpgradeKeyResponse() {
    *this = ::std::move(from);
  }

  inline UpgradeKeyResponse& operator=(const UpgradeKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpgradeKeyResponse& operator=(UpgradeKeyResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpgradeKeyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpgradeKeyResponse* internal_default_instance() {
    return reinterpret_cast<const UpgradeKeyResponse*>(
               &_UpgradeKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(UpgradeKeyResponse& a, UpgradeKeyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UpgradeKeyResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpgradeKeyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpgradeKeyResponse* New() const final {
    return CreateMaybeMessage<UpgradeKeyResponse>(nullptr);
  }

  UpgradeKeyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpgradeKeyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpgradeKeyResponse& from);
  void MergeFrom(const UpgradeKeyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpgradeKeyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.UpgradeKeyResponse";
  }
  protected:
  explicit UpgradeKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlobFieldNumber = 2,
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.KeyBlob blob = 2;
  bool has_blob() const;
  private:
  bool _internal_has_blob() const;
  public:
  void clear_blob();
  const ::nugget::app::keymaster::KeyBlob& blob() const;
  ::nugget::app::keymaster::KeyBlob* release_blob();
  ::nugget::app::keymaster::KeyBlob* mutable_blob();
  void set_allocated_blob(::nugget::app::keymaster::KeyBlob* blob);
  private:
  const ::nugget::app::keymaster::KeyBlob& _internal_blob() const;
  ::nugget::app::keymaster::KeyBlob* _internal_mutable_blob();
  public:
  void unsafe_arena_set_allocated_blob(
      ::nugget::app::keymaster::KeyBlob* blob);
  ::nugget::app::keymaster::KeyBlob* unsafe_arena_release_blob();

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.UpgradeKeyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::KeyBlob* blob_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class DeleteKeyRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.DeleteKeyRequest) */ {
 public:
  inline DeleteKeyRequest() : DeleteKeyRequest(nullptr) {}
  virtual ~DeleteKeyRequest();
  explicit constexpr DeleteKeyRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeleteKeyRequest(const DeleteKeyRequest& from);
  DeleteKeyRequest(DeleteKeyRequest&& from) noexcept
    : DeleteKeyRequest() {
    *this = ::std::move(from);
  }

  inline DeleteKeyRequest& operator=(const DeleteKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteKeyRequest& operator=(DeleteKeyRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteKeyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteKeyRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteKeyRequest*>(
               &_DeleteKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(DeleteKeyRequest& a, DeleteKeyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteKeyRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteKeyRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteKeyRequest* New() const final {
    return CreateMaybeMessage<DeleteKeyRequest>(nullptr);
  }

  DeleteKeyRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteKeyRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteKeyRequest& from);
  void MergeFrom(const DeleteKeyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteKeyRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.DeleteKeyRequest";
  }
  protected:
  explicit DeleteKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlobFieldNumber = 1,
  };
  // .nugget.app.keymaster.KeyBlob blob = 1;
  bool has_blob() const;
  private:
  bool _internal_has_blob() const;
  public:
  void clear_blob();
  const ::nugget::app::keymaster::KeyBlob& blob() const;
  ::nugget::app::keymaster::KeyBlob* release_blob();
  ::nugget::app::keymaster::KeyBlob* mutable_blob();
  void set_allocated_blob(::nugget::app::keymaster::KeyBlob* blob);
  private:
  const ::nugget::app::keymaster::KeyBlob& _internal_blob() const;
  ::nugget::app::keymaster::KeyBlob* _internal_mutable_blob();
  public:
  void unsafe_arena_set_allocated_blob(
      ::nugget::app::keymaster::KeyBlob* blob);
  ::nugget::app::keymaster::KeyBlob* unsafe_arena_release_blob();

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.DeleteKeyRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::KeyBlob* blob_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class DeleteKeyResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.DeleteKeyResponse) */ {
 public:
  inline DeleteKeyResponse() : DeleteKeyResponse(nullptr) {}
  virtual ~DeleteKeyResponse();
  explicit constexpr DeleteKeyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeleteKeyResponse(const DeleteKeyResponse& from);
  DeleteKeyResponse(DeleteKeyResponse&& from) noexcept
    : DeleteKeyResponse() {
    *this = ::std::move(from);
  }

  inline DeleteKeyResponse& operator=(const DeleteKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteKeyResponse& operator=(DeleteKeyResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteKeyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteKeyResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteKeyResponse*>(
               &_DeleteKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(DeleteKeyResponse& a, DeleteKeyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteKeyResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteKeyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteKeyResponse* New() const final {
    return CreateMaybeMessage<DeleteKeyResponse>(nullptr);
  }

  DeleteKeyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteKeyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteKeyResponse& from);
  void MergeFrom(const DeleteKeyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteKeyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.DeleteKeyResponse";
  }
  protected:
  explicit DeleteKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.DeleteKeyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class DeleteAllKeysRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.DeleteAllKeysRequest) */ {
 public:
  inline DeleteAllKeysRequest() : DeleteAllKeysRequest(nullptr) {}
  virtual ~DeleteAllKeysRequest();
  explicit constexpr DeleteAllKeysRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeleteAllKeysRequest(const DeleteAllKeysRequest& from);
  DeleteAllKeysRequest(DeleteAllKeysRequest&& from) noexcept
    : DeleteAllKeysRequest() {
    *this = ::std::move(from);
  }

  inline DeleteAllKeysRequest& operator=(const DeleteAllKeysRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteAllKeysRequest& operator=(DeleteAllKeysRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteAllKeysRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteAllKeysRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteAllKeysRequest*>(
               &_DeleteAllKeysRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(DeleteAllKeysRequest& a, DeleteAllKeysRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteAllKeysRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteAllKeysRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteAllKeysRequest* New() const final {
    return CreateMaybeMessage<DeleteAllKeysRequest>(nullptr);
  }

  DeleteAllKeysRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteAllKeysRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteAllKeysRequest& from);
  void MergeFrom(const DeleteAllKeysRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteAllKeysRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.DeleteAllKeysRequest";
  }
  protected:
  explicit DeleteAllKeysRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.DeleteAllKeysRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class DeleteAllKeysResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.DeleteAllKeysResponse) */ {
 public:
  inline DeleteAllKeysResponse() : DeleteAllKeysResponse(nullptr) {}
  virtual ~DeleteAllKeysResponse();
  explicit constexpr DeleteAllKeysResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeleteAllKeysResponse(const DeleteAllKeysResponse& from);
  DeleteAllKeysResponse(DeleteAllKeysResponse&& from) noexcept
    : DeleteAllKeysResponse() {
    *this = ::std::move(from);
  }

  inline DeleteAllKeysResponse& operator=(const DeleteAllKeysResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteAllKeysResponse& operator=(DeleteAllKeysResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteAllKeysResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteAllKeysResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteAllKeysResponse*>(
               &_DeleteAllKeysResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(DeleteAllKeysResponse& a, DeleteAllKeysResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteAllKeysResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteAllKeysResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteAllKeysResponse* New() const final {
    return CreateMaybeMessage<DeleteAllKeysResponse>(nullptr);
  }

  DeleteAllKeysResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteAllKeysResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteAllKeysResponse& from);
  void MergeFrom(const DeleteAllKeysResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteAllKeysResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.DeleteAllKeysResponse";
  }
  protected:
  explicit DeleteAllKeysResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.DeleteAllKeysResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class DestroyAttestationIdsRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.DestroyAttestationIdsRequest) */ {
 public:
  inline DestroyAttestationIdsRequest() : DestroyAttestationIdsRequest(nullptr) {}
  virtual ~DestroyAttestationIdsRequest();
  explicit constexpr DestroyAttestationIdsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DestroyAttestationIdsRequest(const DestroyAttestationIdsRequest& from);
  DestroyAttestationIdsRequest(DestroyAttestationIdsRequest&& from) noexcept
    : DestroyAttestationIdsRequest() {
    *this = ::std::move(from);
  }

  inline DestroyAttestationIdsRequest& operator=(const DestroyAttestationIdsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DestroyAttestationIdsRequest& operator=(DestroyAttestationIdsRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DestroyAttestationIdsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DestroyAttestationIdsRequest* internal_default_instance() {
    return reinterpret_cast<const DestroyAttestationIdsRequest*>(
               &_DestroyAttestationIdsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(DestroyAttestationIdsRequest& a, DestroyAttestationIdsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DestroyAttestationIdsRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DestroyAttestationIdsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DestroyAttestationIdsRequest* New() const final {
    return CreateMaybeMessage<DestroyAttestationIdsRequest>(nullptr);
  }

  DestroyAttestationIdsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DestroyAttestationIdsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DestroyAttestationIdsRequest& from);
  void MergeFrom(const DestroyAttestationIdsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DestroyAttestationIdsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.DestroyAttestationIdsRequest";
  }
  protected:
  explicit DestroyAttestationIdsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.DestroyAttestationIdsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class DestroyAttestationIdsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.DestroyAttestationIdsResponse) */ {
 public:
  inline DestroyAttestationIdsResponse() : DestroyAttestationIdsResponse(nullptr) {}
  virtual ~DestroyAttestationIdsResponse();
  explicit constexpr DestroyAttestationIdsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DestroyAttestationIdsResponse(const DestroyAttestationIdsResponse& from);
  DestroyAttestationIdsResponse(DestroyAttestationIdsResponse&& from) noexcept
    : DestroyAttestationIdsResponse() {
    *this = ::std::move(from);
  }

  inline DestroyAttestationIdsResponse& operator=(const DestroyAttestationIdsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DestroyAttestationIdsResponse& operator=(DestroyAttestationIdsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DestroyAttestationIdsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DestroyAttestationIdsResponse* internal_default_instance() {
    return reinterpret_cast<const DestroyAttestationIdsResponse*>(
               &_DestroyAttestationIdsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(DestroyAttestationIdsResponse& a, DestroyAttestationIdsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DestroyAttestationIdsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DestroyAttestationIdsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DestroyAttestationIdsResponse* New() const final {
    return CreateMaybeMessage<DestroyAttestationIdsResponse>(nullptr);
  }

  DestroyAttestationIdsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DestroyAttestationIdsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DestroyAttestationIdsResponse& from);
  void MergeFrom(const DestroyAttestationIdsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DestroyAttestationIdsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.DestroyAttestationIdsResponse";
  }
  protected:
  explicit DestroyAttestationIdsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.DestroyAttestationIdsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class BeginOperationRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.BeginOperationRequest) */ {
 public:
  inline BeginOperationRequest() : BeginOperationRequest(nullptr) {}
  virtual ~BeginOperationRequest();
  explicit constexpr BeginOperationRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BeginOperationRequest(const BeginOperationRequest& from);
  BeginOperationRequest(BeginOperationRequest&& from) noexcept
    : BeginOperationRequest() {
    *this = ::std::move(from);
  }

  inline BeginOperationRequest& operator=(const BeginOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BeginOperationRequest& operator=(BeginOperationRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BeginOperationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const BeginOperationRequest* internal_default_instance() {
    return reinterpret_cast<const BeginOperationRequest*>(
               &_BeginOperationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(BeginOperationRequest& a, BeginOperationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(BeginOperationRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BeginOperationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BeginOperationRequest* New() const final {
    return CreateMaybeMessage<BeginOperationRequest>(nullptr);
  }

  BeginOperationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BeginOperationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BeginOperationRequest& from);
  void MergeFrom(const BeginOperationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BeginOperationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.BeginOperationRequest";
  }
  protected:
  explicit BeginOperationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlobFieldNumber = 2,
    kParamsFieldNumber = 3,
    kAuthTokenFieldNumber = 4,
    kPurposeFieldNumber = 1,
  };
  // .nugget.app.keymaster.KeyBlob blob = 2;
  bool has_blob() const;
  private:
  bool _internal_has_blob() const;
  public:
  void clear_blob();
  const ::nugget::app::keymaster::KeyBlob& blob() const;
  ::nugget::app::keymaster::KeyBlob* release_blob();
  ::nugget::app::keymaster::KeyBlob* mutable_blob();
  void set_allocated_blob(::nugget::app::keymaster::KeyBlob* blob);
  private:
  const ::nugget::app::keymaster::KeyBlob& _internal_blob() const;
  ::nugget::app::keymaster::KeyBlob* _internal_mutable_blob();
  public:
  void unsafe_arena_set_allocated_blob(
      ::nugget::app::keymaster::KeyBlob* blob);
  ::nugget::app::keymaster::KeyBlob* unsafe_arena_release_blob();

  // .nugget.app.keymaster.KeyParameters params = 3;
  bool has_params() const;
  private:
  bool _internal_has_params() const;
  public:
  void clear_params();
  const ::nugget::app::keymaster::KeyParameters& params() const;
  ::nugget::app::keymaster::KeyParameters* release_params();
  ::nugget::app::keymaster::KeyParameters* mutable_params();
  void set_allocated_params(::nugget::app::keymaster::KeyParameters* params);
  private:
  const ::nugget::app::keymaster::KeyParameters& _internal_params() const;
  ::nugget::app::keymaster::KeyParameters* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::nugget::app::keymaster::KeyParameters* params);
  ::nugget::app::keymaster::KeyParameters* unsafe_arena_release_params();

  // .nugget.app.keymaster.HardwareAuthToken auth_token = 4;
  bool has_auth_token() const;
  private:
  bool _internal_has_auth_token() const;
  public:
  void clear_auth_token();
  const ::nugget::app::keymaster::HardwareAuthToken& auth_token() const;
  ::nugget::app::keymaster::HardwareAuthToken* release_auth_token();
  ::nugget::app::keymaster::HardwareAuthToken* mutable_auth_token();
  void set_allocated_auth_token(::nugget::app::keymaster::HardwareAuthToken* auth_token);
  private:
  const ::nugget::app::keymaster::HardwareAuthToken& _internal_auth_token() const;
  ::nugget::app::keymaster::HardwareAuthToken* _internal_mutable_auth_token();
  public:
  void unsafe_arena_set_allocated_auth_token(
      ::nugget::app::keymaster::HardwareAuthToken* auth_token);
  ::nugget::app::keymaster::HardwareAuthToken* unsafe_arena_release_auth_token();

  // .nugget.app.keymaster.KeyPurpose purpose = 1;
  void clear_purpose();
  ::nugget::app::keymaster::KeyPurpose purpose() const;
  void set_purpose(::nugget::app::keymaster::KeyPurpose value);
  private:
  ::nugget::app::keymaster::KeyPurpose _internal_purpose() const;
  void _internal_set_purpose(::nugget::app::keymaster::KeyPurpose value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.BeginOperationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::KeyBlob* blob_;
  ::nugget::app::keymaster::KeyParameters* params_;
  ::nugget::app::keymaster::HardwareAuthToken* auth_token_;
  int purpose_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class BeginOperationResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.BeginOperationResponse) */ {
 public:
  inline BeginOperationResponse() : BeginOperationResponse(nullptr) {}
  virtual ~BeginOperationResponse();
  explicit constexpr BeginOperationResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BeginOperationResponse(const BeginOperationResponse& from);
  BeginOperationResponse(BeginOperationResponse&& from) noexcept
    : BeginOperationResponse() {
    *this = ::std::move(from);
  }

  inline BeginOperationResponse& operator=(const BeginOperationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BeginOperationResponse& operator=(BeginOperationResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BeginOperationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const BeginOperationResponse* internal_default_instance() {
    return reinterpret_cast<const BeginOperationResponse*>(
               &_BeginOperationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(BeginOperationResponse& a, BeginOperationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(BeginOperationResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BeginOperationResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BeginOperationResponse* New() const final {
    return CreateMaybeMessage<BeginOperationResponse>(nullptr);
  }

  BeginOperationResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BeginOperationResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BeginOperationResponse& from);
  void MergeFrom(const BeginOperationResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BeginOperationResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.BeginOperationResponse";
  }
  protected:
  explicit BeginOperationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParamsFieldNumber = 2,
    kHandleFieldNumber = 3,
    kErrorCodeFieldNumber = 1,
    kAlgorithmFieldNumber = 4,
    kKeyBitsFieldNumber = 5,
  };
  // .nugget.app.keymaster.KeyParameters params = 2;
  bool has_params() const;
  private:
  bool _internal_has_params() const;
  public:
  void clear_params();
  const ::nugget::app::keymaster::KeyParameters& params() const;
  ::nugget::app::keymaster::KeyParameters* release_params();
  ::nugget::app::keymaster::KeyParameters* mutable_params();
  void set_allocated_params(::nugget::app::keymaster::KeyParameters* params);
  private:
  const ::nugget::app::keymaster::KeyParameters& _internal_params() const;
  ::nugget::app::keymaster::KeyParameters* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::nugget::app::keymaster::KeyParameters* params);
  ::nugget::app::keymaster::KeyParameters* unsafe_arena_release_params();

  // .nugget.app.keymaster.OperationHandle handle = 3;
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  const ::nugget::app::keymaster::OperationHandle& handle() const;
  ::nugget::app::keymaster::OperationHandle* release_handle();
  ::nugget::app::keymaster::OperationHandle* mutable_handle();
  void set_allocated_handle(::nugget::app::keymaster::OperationHandle* handle);
  private:
  const ::nugget::app::keymaster::OperationHandle& _internal_handle() const;
  ::nugget::app::keymaster::OperationHandle* _internal_mutable_handle();
  public:
  void unsafe_arena_set_allocated_handle(
      ::nugget::app::keymaster::OperationHandle* handle);
  ::nugget::app::keymaster::OperationHandle* unsafe_arena_release_handle();

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // .nugget.app.keymaster.Algorithm algorithm = 4;
  void clear_algorithm();
  ::nugget::app::keymaster::Algorithm algorithm() const;
  void set_algorithm(::nugget::app::keymaster::Algorithm value);
  private:
  ::nugget::app::keymaster::Algorithm _internal_algorithm() const;
  void _internal_set_algorithm(::nugget::app::keymaster::Algorithm value);
  public:

  // uint32 key_bits = 5;
  void clear_key_bits();
  ::PROTOBUF_NAMESPACE_ID::uint32 key_bits() const;
  void set_key_bits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_key_bits() const;
  void _internal_set_key_bits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.BeginOperationResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::KeyParameters* params_;
  ::nugget::app::keymaster::OperationHandle* handle_;
  int error_code_;
  int algorithm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 key_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class UpdateOperationRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.UpdateOperationRequest) */ {
 public:
  inline UpdateOperationRequest() : UpdateOperationRequest(nullptr) {}
  virtual ~UpdateOperationRequest();
  explicit constexpr UpdateOperationRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UpdateOperationRequest(const UpdateOperationRequest& from);
  UpdateOperationRequest(UpdateOperationRequest&& from) noexcept
    : UpdateOperationRequest() {
    *this = ::std::move(from);
  }

  inline UpdateOperationRequest& operator=(const UpdateOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateOperationRequest& operator=(UpdateOperationRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateOperationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateOperationRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateOperationRequest*>(
               &_UpdateOperationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(UpdateOperationRequest& a, UpdateOperationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateOperationRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateOperationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateOperationRequest* New() const final {
    return CreateMaybeMessage<UpdateOperationRequest>(nullptr);
  }

  UpdateOperationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateOperationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateOperationRequest& from);
  void MergeFrom(const UpdateOperationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateOperationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.UpdateOperationRequest";
  }
  protected:
  explicit UpdateOperationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInputFieldNumber = 3,
    kHandleFieldNumber = 1,
    kParamsFieldNumber = 2,
    kAuthTokenFieldNumber = 4,
    kVerificationTokenFieldNumber = 5,
  };
  // bytes input = 3;
  void clear_input();
  const std::string& input() const;
  void set_input(const std::string& value);
  void set_input(std::string&& value);
  void set_input(const char* value);
  void set_input(const void* value, size_t size);
  std::string* mutable_input();
  std::string* release_input();
  void set_allocated_input(std::string* input);
  private:
  const std::string& _internal_input() const;
  void _internal_set_input(const std::string& value);
  std::string* _internal_mutable_input();
  public:

  // .nugget.app.keymaster.OperationHandle handle = 1;
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  const ::nugget::app::keymaster::OperationHandle& handle() const;
  ::nugget::app::keymaster::OperationHandle* release_handle();
  ::nugget::app::keymaster::OperationHandle* mutable_handle();
  void set_allocated_handle(::nugget::app::keymaster::OperationHandle* handle);
  private:
  const ::nugget::app::keymaster::OperationHandle& _internal_handle() const;
  ::nugget::app::keymaster::OperationHandle* _internal_mutable_handle();
  public:
  void unsafe_arena_set_allocated_handle(
      ::nugget::app::keymaster::OperationHandle* handle);
  ::nugget::app::keymaster::OperationHandle* unsafe_arena_release_handle();

  // .nugget.app.keymaster.KeyParameters params = 2;
  bool has_params() const;
  private:
  bool _internal_has_params() const;
  public:
  void clear_params();
  const ::nugget::app::keymaster::KeyParameters& params() const;
  ::nugget::app::keymaster::KeyParameters* release_params();
  ::nugget::app::keymaster::KeyParameters* mutable_params();
  void set_allocated_params(::nugget::app::keymaster::KeyParameters* params);
  private:
  const ::nugget::app::keymaster::KeyParameters& _internal_params() const;
  ::nugget::app::keymaster::KeyParameters* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::nugget::app::keymaster::KeyParameters* params);
  ::nugget::app::keymaster::KeyParameters* unsafe_arena_release_params();

  // .nugget.app.keymaster.HardwareAuthToken auth_token = 4;
  bool has_auth_token() const;
  private:
  bool _internal_has_auth_token() const;
  public:
  void clear_auth_token();
  const ::nugget::app::keymaster::HardwareAuthToken& auth_token() const;
  ::nugget::app::keymaster::HardwareAuthToken* release_auth_token();
  ::nugget::app::keymaster::HardwareAuthToken* mutable_auth_token();
  void set_allocated_auth_token(::nugget::app::keymaster::HardwareAuthToken* auth_token);
  private:
  const ::nugget::app::keymaster::HardwareAuthToken& _internal_auth_token() const;
  ::nugget::app::keymaster::HardwareAuthToken* _internal_mutable_auth_token();
  public:
  void unsafe_arena_set_allocated_auth_token(
      ::nugget::app::keymaster::HardwareAuthToken* auth_token);
  ::nugget::app::keymaster::HardwareAuthToken* unsafe_arena_release_auth_token();

  // .nugget.app.keymaster.VerificationToken verification_token = 5;
  bool has_verification_token() const;
  private:
  bool _internal_has_verification_token() const;
  public:
  void clear_verification_token();
  const ::nugget::app::keymaster::VerificationToken& verification_token() const;
  ::nugget::app::keymaster::VerificationToken* release_verification_token();
  ::nugget::app::keymaster::VerificationToken* mutable_verification_token();
  void set_allocated_verification_token(::nugget::app::keymaster::VerificationToken* verification_token);
  private:
  const ::nugget::app::keymaster::VerificationToken& _internal_verification_token() const;
  ::nugget::app::keymaster::VerificationToken* _internal_mutable_verification_token();
  public:
  void unsafe_arena_set_allocated_verification_token(
      ::nugget::app::keymaster::VerificationToken* verification_token);
  ::nugget::app::keymaster::VerificationToken* unsafe_arena_release_verification_token();

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.UpdateOperationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr input_;
  ::nugget::app::keymaster::OperationHandle* handle_;
  ::nugget::app::keymaster::KeyParameters* params_;
  ::nugget::app::keymaster::HardwareAuthToken* auth_token_;
  ::nugget::app::keymaster::VerificationToken* verification_token_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class UpdateOperationResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.UpdateOperationResponse) */ {
 public:
  inline UpdateOperationResponse() : UpdateOperationResponse(nullptr) {}
  virtual ~UpdateOperationResponse();
  explicit constexpr UpdateOperationResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UpdateOperationResponse(const UpdateOperationResponse& from);
  UpdateOperationResponse(UpdateOperationResponse&& from) noexcept
    : UpdateOperationResponse() {
    *this = ::std::move(from);
  }

  inline UpdateOperationResponse& operator=(const UpdateOperationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateOperationResponse& operator=(UpdateOperationResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateOperationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateOperationResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateOperationResponse*>(
               &_UpdateOperationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(UpdateOperationResponse& a, UpdateOperationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateOperationResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateOperationResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateOperationResponse* New() const final {
    return CreateMaybeMessage<UpdateOperationResponse>(nullptr);
  }

  UpdateOperationResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateOperationResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateOperationResponse& from);
  void MergeFrom(const UpdateOperationResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateOperationResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.UpdateOperationResponse";
  }
  protected:
  explicit UpdateOperationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOutputFieldNumber = 4,
    kParamsFieldNumber = 3,
    kErrorCodeFieldNumber = 1,
    kConsumedFieldNumber = 2,
  };
  // bytes output = 4;
  void clear_output();
  const std::string& output() const;
  void set_output(const std::string& value);
  void set_output(std::string&& value);
  void set_output(const char* value);
  void set_output(const void* value, size_t size);
  std::string* mutable_output();
  std::string* release_output();
  void set_allocated_output(std::string* output);
  private:
  const std::string& _internal_output() const;
  void _internal_set_output(const std::string& value);
  std::string* _internal_mutable_output();
  public:

  // .nugget.app.keymaster.KeyParameters params = 3;
  bool has_params() const;
  private:
  bool _internal_has_params() const;
  public:
  void clear_params();
  const ::nugget::app::keymaster::KeyParameters& params() const;
  ::nugget::app::keymaster::KeyParameters* release_params();
  ::nugget::app::keymaster::KeyParameters* mutable_params();
  void set_allocated_params(::nugget::app::keymaster::KeyParameters* params);
  private:
  const ::nugget::app::keymaster::KeyParameters& _internal_params() const;
  ::nugget::app::keymaster::KeyParameters* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::nugget::app::keymaster::KeyParameters* params);
  ::nugget::app::keymaster::KeyParameters* unsafe_arena_release_params();

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // uint32 consumed = 2;
  void clear_consumed();
  ::PROTOBUF_NAMESPACE_ID::uint32 consumed() const;
  void set_consumed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_consumed() const;
  void _internal_set_consumed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.UpdateOperationResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr output_;
  ::nugget::app::keymaster::KeyParameters* params_;
  int error_code_;
  ::PROTOBUF_NAMESPACE_ID::uint32 consumed_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class FinishOperationRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.FinishOperationRequest) */ {
 public:
  inline FinishOperationRequest() : FinishOperationRequest(nullptr) {}
  virtual ~FinishOperationRequest();
  explicit constexpr FinishOperationRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FinishOperationRequest(const FinishOperationRequest& from);
  FinishOperationRequest(FinishOperationRequest&& from) noexcept
    : FinishOperationRequest() {
    *this = ::std::move(from);
  }

  inline FinishOperationRequest& operator=(const FinishOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FinishOperationRequest& operator=(FinishOperationRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FinishOperationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FinishOperationRequest* internal_default_instance() {
    return reinterpret_cast<const FinishOperationRequest*>(
               &_FinishOperationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(FinishOperationRequest& a, FinishOperationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(FinishOperationRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FinishOperationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FinishOperationRequest* New() const final {
    return CreateMaybeMessage<FinishOperationRequest>(nullptr);
  }

  FinishOperationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FinishOperationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FinishOperationRequest& from);
  void MergeFrom(const FinishOperationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FinishOperationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.FinishOperationRequest";
  }
  protected:
  explicit FinishOperationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInputFieldNumber = 3,
    kSignatureFieldNumber = 4,
    kHandleFieldNumber = 1,
    kParamsFieldNumber = 2,
    kAuthTokenFieldNumber = 5,
    kVerificationTokenFieldNumber = 6,
  };
  // bytes input = 3;
  void clear_input();
  const std::string& input() const;
  void set_input(const std::string& value);
  void set_input(std::string&& value);
  void set_input(const char* value);
  void set_input(const void* value, size_t size);
  std::string* mutable_input();
  std::string* release_input();
  void set_allocated_input(std::string* input);
  private:
  const std::string& _internal_input() const;
  void _internal_set_input(const std::string& value);
  std::string* _internal_mutable_input();
  public:

  // bytes signature = 4;
  void clear_signature();
  const std::string& signature() const;
  void set_signature(const std::string& value);
  void set_signature(std::string&& value);
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  std::string* mutable_signature();
  std::string* release_signature();
  void set_allocated_signature(std::string* signature);
  private:
  const std::string& _internal_signature() const;
  void _internal_set_signature(const std::string& value);
  std::string* _internal_mutable_signature();
  public:

  // .nugget.app.keymaster.OperationHandle handle = 1;
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  const ::nugget::app::keymaster::OperationHandle& handle() const;
  ::nugget::app::keymaster::OperationHandle* release_handle();
  ::nugget::app::keymaster::OperationHandle* mutable_handle();
  void set_allocated_handle(::nugget::app::keymaster::OperationHandle* handle);
  private:
  const ::nugget::app::keymaster::OperationHandle& _internal_handle() const;
  ::nugget::app::keymaster::OperationHandle* _internal_mutable_handle();
  public:
  void unsafe_arena_set_allocated_handle(
      ::nugget::app::keymaster::OperationHandle* handle);
  ::nugget::app::keymaster::OperationHandle* unsafe_arena_release_handle();

  // .nugget.app.keymaster.KeyParameters params = 2;
  bool has_params() const;
  private:
  bool _internal_has_params() const;
  public:
  void clear_params();
  const ::nugget::app::keymaster::KeyParameters& params() const;
  ::nugget::app::keymaster::KeyParameters* release_params();
  ::nugget::app::keymaster::KeyParameters* mutable_params();
  void set_allocated_params(::nugget::app::keymaster::KeyParameters* params);
  private:
  const ::nugget::app::keymaster::KeyParameters& _internal_params() const;
  ::nugget::app::keymaster::KeyParameters* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::nugget::app::keymaster::KeyParameters* params);
  ::nugget::app::keymaster::KeyParameters* unsafe_arena_release_params();

  // .nugget.app.keymaster.HardwareAuthToken auth_token = 5;
  bool has_auth_token() const;
  private:
  bool _internal_has_auth_token() const;
  public:
  void clear_auth_token();
  const ::nugget::app::keymaster::HardwareAuthToken& auth_token() const;
  ::nugget::app::keymaster::HardwareAuthToken* release_auth_token();
  ::nugget::app::keymaster::HardwareAuthToken* mutable_auth_token();
  void set_allocated_auth_token(::nugget::app::keymaster::HardwareAuthToken* auth_token);
  private:
  const ::nugget::app::keymaster::HardwareAuthToken& _internal_auth_token() const;
  ::nugget::app::keymaster::HardwareAuthToken* _internal_mutable_auth_token();
  public:
  void unsafe_arena_set_allocated_auth_token(
      ::nugget::app::keymaster::HardwareAuthToken* auth_token);
  ::nugget::app::keymaster::HardwareAuthToken* unsafe_arena_release_auth_token();

  // .nugget.app.keymaster.VerificationToken verification_token = 6;
  bool has_verification_token() const;
  private:
  bool _internal_has_verification_token() const;
  public:
  void clear_verification_token();
  const ::nugget::app::keymaster::VerificationToken& verification_token() const;
  ::nugget::app::keymaster::VerificationToken* release_verification_token();
  ::nugget::app::keymaster::VerificationToken* mutable_verification_token();
  void set_allocated_verification_token(::nugget::app::keymaster::VerificationToken* verification_token);
  private:
  const ::nugget::app::keymaster::VerificationToken& _internal_verification_token() const;
  ::nugget::app::keymaster::VerificationToken* _internal_mutable_verification_token();
  public:
  void unsafe_arena_set_allocated_verification_token(
      ::nugget::app::keymaster::VerificationToken* verification_token);
  ::nugget::app::keymaster::VerificationToken* unsafe_arena_release_verification_token();

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.FinishOperationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr input_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signature_;
  ::nugget::app::keymaster::OperationHandle* handle_;
  ::nugget::app::keymaster::KeyParameters* params_;
  ::nugget::app::keymaster::HardwareAuthToken* auth_token_;
  ::nugget::app::keymaster::VerificationToken* verification_token_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class FinishOperationResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.FinishOperationResponse) */ {
 public:
  inline FinishOperationResponse() : FinishOperationResponse(nullptr) {}
  virtual ~FinishOperationResponse();
  explicit constexpr FinishOperationResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FinishOperationResponse(const FinishOperationResponse& from);
  FinishOperationResponse(FinishOperationResponse&& from) noexcept
    : FinishOperationResponse() {
    *this = ::std::move(from);
  }

  inline FinishOperationResponse& operator=(const FinishOperationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FinishOperationResponse& operator=(FinishOperationResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FinishOperationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FinishOperationResponse* internal_default_instance() {
    return reinterpret_cast<const FinishOperationResponse*>(
               &_FinishOperationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(FinishOperationResponse& a, FinishOperationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(FinishOperationResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FinishOperationResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FinishOperationResponse* New() const final {
    return CreateMaybeMessage<FinishOperationResponse>(nullptr);
  }

  FinishOperationResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FinishOperationResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FinishOperationResponse& from);
  void MergeFrom(const FinishOperationResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FinishOperationResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.FinishOperationResponse";
  }
  protected:
  explicit FinishOperationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOutputFieldNumber = 3,
    kParamsFieldNumber = 2,
    kErrorCodeFieldNumber = 1,
  };
  // bytes output = 3;
  void clear_output();
  const std::string& output() const;
  void set_output(const std::string& value);
  void set_output(std::string&& value);
  void set_output(const char* value);
  void set_output(const void* value, size_t size);
  std::string* mutable_output();
  std::string* release_output();
  void set_allocated_output(std::string* output);
  private:
  const std::string& _internal_output() const;
  void _internal_set_output(const std::string& value);
  std::string* _internal_mutable_output();
  public:

  // .nugget.app.keymaster.KeyParameters params = 2;
  bool has_params() const;
  private:
  bool _internal_has_params() const;
  public:
  void clear_params();
  const ::nugget::app::keymaster::KeyParameters& params() const;
  ::nugget::app::keymaster::KeyParameters* release_params();
  ::nugget::app::keymaster::KeyParameters* mutable_params();
  void set_allocated_params(::nugget::app::keymaster::KeyParameters* params);
  private:
  const ::nugget::app::keymaster::KeyParameters& _internal_params() const;
  ::nugget::app::keymaster::KeyParameters* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::nugget::app::keymaster::KeyParameters* params);
  ::nugget::app::keymaster::KeyParameters* unsafe_arena_release_params();

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.FinishOperationResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr output_;
  ::nugget::app::keymaster::KeyParameters* params_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class AbortOperationRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.AbortOperationRequest) */ {
 public:
  inline AbortOperationRequest() : AbortOperationRequest(nullptr) {}
  virtual ~AbortOperationRequest();
  explicit constexpr AbortOperationRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AbortOperationRequest(const AbortOperationRequest& from);
  AbortOperationRequest(AbortOperationRequest&& from) noexcept
    : AbortOperationRequest() {
    *this = ::std::move(from);
  }

  inline AbortOperationRequest& operator=(const AbortOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AbortOperationRequest& operator=(AbortOperationRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AbortOperationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AbortOperationRequest* internal_default_instance() {
    return reinterpret_cast<const AbortOperationRequest*>(
               &_AbortOperationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(AbortOperationRequest& a, AbortOperationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AbortOperationRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AbortOperationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AbortOperationRequest* New() const final {
    return CreateMaybeMessage<AbortOperationRequest>(nullptr);
  }

  AbortOperationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AbortOperationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AbortOperationRequest& from);
  void MergeFrom(const AbortOperationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AbortOperationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.AbortOperationRequest";
  }
  protected:
  explicit AbortOperationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHandleFieldNumber = 1,
  };
  // .nugget.app.keymaster.OperationHandle handle = 1;
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  const ::nugget::app::keymaster::OperationHandle& handle() const;
  ::nugget::app::keymaster::OperationHandle* release_handle();
  ::nugget::app::keymaster::OperationHandle* mutable_handle();
  void set_allocated_handle(::nugget::app::keymaster::OperationHandle* handle);
  private:
  const ::nugget::app::keymaster::OperationHandle& _internal_handle() const;
  ::nugget::app::keymaster::OperationHandle* _internal_mutable_handle();
  public:
  void unsafe_arena_set_allocated_handle(
      ::nugget::app::keymaster::OperationHandle* handle);
  ::nugget::app::keymaster::OperationHandle* unsafe_arena_release_handle();

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.AbortOperationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::OperationHandle* handle_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class AbortOperationResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.AbortOperationResponse) */ {
 public:
  inline AbortOperationResponse() : AbortOperationResponse(nullptr) {}
  virtual ~AbortOperationResponse();
  explicit constexpr AbortOperationResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AbortOperationResponse(const AbortOperationResponse& from);
  AbortOperationResponse(AbortOperationResponse&& from) noexcept
    : AbortOperationResponse() {
    *this = ::std::move(from);
  }

  inline AbortOperationResponse& operator=(const AbortOperationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AbortOperationResponse& operator=(AbortOperationResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AbortOperationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AbortOperationResponse* internal_default_instance() {
    return reinterpret_cast<const AbortOperationResponse*>(
               &_AbortOperationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(AbortOperationResponse& a, AbortOperationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AbortOperationResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AbortOperationResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AbortOperationResponse* New() const final {
    return CreateMaybeMessage<AbortOperationResponse>(nullptr);
  }

  AbortOperationResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AbortOperationResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AbortOperationResponse& from);
  void MergeFrom(const AbortOperationResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AbortOperationResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.AbortOperationResponse";
  }
  protected:
  explicit AbortOperationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.AbortOperationResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class ImportWrappedKeyRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.ImportWrappedKeyRequest) */ {
 public:
  inline ImportWrappedKeyRequest() : ImportWrappedKeyRequest(nullptr) {}
  virtual ~ImportWrappedKeyRequest();
  explicit constexpr ImportWrappedKeyRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ImportWrappedKeyRequest(const ImportWrappedKeyRequest& from);
  ImportWrappedKeyRequest(ImportWrappedKeyRequest&& from) noexcept
    : ImportWrappedKeyRequest() {
    *this = ::std::move(from);
  }

  inline ImportWrappedKeyRequest& operator=(const ImportWrappedKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImportWrappedKeyRequest& operator=(ImportWrappedKeyRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ImportWrappedKeyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImportWrappedKeyRequest* internal_default_instance() {
    return reinterpret_cast<const ImportWrappedKeyRequest*>(
               &_ImportWrappedKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(ImportWrappedKeyRequest& a, ImportWrappedKeyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ImportWrappedKeyRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImportWrappedKeyRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ImportWrappedKeyRequest* New() const final {
    return CreateMaybeMessage<ImportWrappedKeyRequest>(nullptr);
  }

  ImportWrappedKeyRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ImportWrappedKeyRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ImportWrappedKeyRequest& from);
  void MergeFrom(const ImportWrappedKeyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImportWrappedKeyRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.ImportWrappedKeyRequest";
  }
  protected:
  explicit ImportWrappedKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRsaEnvelopeFieldNumber = 3,
    kInitializationVectorFieldNumber = 4,
    kEncryptedImportKeyFieldNumber = 5,
    kAadFieldNumber = 6,
    kGcmTagFieldNumber = 7,
    kMaskingKeyFieldNumber = 9,
    kParamsFieldNumber = 2,
    kWrappingKeyBlobFieldNumber = 8,
    kCreationTimeMsFieldNumber = 10,
    kKeyFormatFieldNumber = 1,
  };
  // bytes rsa_envelope = 3;
  void clear_rsa_envelope();
  const std::string& rsa_envelope() const;
  void set_rsa_envelope(const std::string& value);
  void set_rsa_envelope(std::string&& value);
  void set_rsa_envelope(const char* value);
  void set_rsa_envelope(const void* value, size_t size);
  std::string* mutable_rsa_envelope();
  std::string* release_rsa_envelope();
  void set_allocated_rsa_envelope(std::string* rsa_envelope);
  private:
  const std::string& _internal_rsa_envelope() const;
  void _internal_set_rsa_envelope(const std::string& value);
  std::string* _internal_mutable_rsa_envelope();
  public:

  // bytes initialization_vector = 4;
  void clear_initialization_vector();
  const std::string& initialization_vector() const;
  void set_initialization_vector(const std::string& value);
  void set_initialization_vector(std::string&& value);
  void set_initialization_vector(const char* value);
  void set_initialization_vector(const void* value, size_t size);
  std::string* mutable_initialization_vector();
  std::string* release_initialization_vector();
  void set_allocated_initialization_vector(std::string* initialization_vector);
  private:
  const std::string& _internal_initialization_vector() const;
  void _internal_set_initialization_vector(const std::string& value);
  std::string* _internal_mutable_initialization_vector();
  public:

  // bytes encrypted_import_key = 5;
  void clear_encrypted_import_key();
  const std::string& encrypted_import_key() const;
  void set_encrypted_import_key(const std::string& value);
  void set_encrypted_import_key(std::string&& value);
  void set_encrypted_import_key(const char* value);
  void set_encrypted_import_key(const void* value, size_t size);
  std::string* mutable_encrypted_import_key();
  std::string* release_encrypted_import_key();
  void set_allocated_encrypted_import_key(std::string* encrypted_import_key);
  private:
  const std::string& _internal_encrypted_import_key() const;
  void _internal_set_encrypted_import_key(const std::string& value);
  std::string* _internal_mutable_encrypted_import_key();
  public:

  // bytes aad = 6;
  void clear_aad();
  const std::string& aad() const;
  void set_aad(const std::string& value);
  void set_aad(std::string&& value);
  void set_aad(const char* value);
  void set_aad(const void* value, size_t size);
  std::string* mutable_aad();
  std::string* release_aad();
  void set_allocated_aad(std::string* aad);
  private:
  const std::string& _internal_aad() const;
  void _internal_set_aad(const std::string& value);
  std::string* _internal_mutable_aad();
  public:

  // bytes gcm_tag = 7;
  void clear_gcm_tag();
  const std::string& gcm_tag() const;
  void set_gcm_tag(const std::string& value);
  void set_gcm_tag(std::string&& value);
  void set_gcm_tag(const char* value);
  void set_gcm_tag(const void* value, size_t size);
  std::string* mutable_gcm_tag();
  std::string* release_gcm_tag();
  void set_allocated_gcm_tag(std::string* gcm_tag);
  private:
  const std::string& _internal_gcm_tag() const;
  void _internal_set_gcm_tag(const std::string& value);
  std::string* _internal_mutable_gcm_tag();
  public:

  // bytes masking_key = 9;
  void clear_masking_key();
  const std::string& masking_key() const;
  void set_masking_key(const std::string& value);
  void set_masking_key(std::string&& value);
  void set_masking_key(const char* value);
  void set_masking_key(const void* value, size_t size);
  std::string* mutable_masking_key();
  std::string* release_masking_key();
  void set_allocated_masking_key(std::string* masking_key);
  private:
  const std::string& _internal_masking_key() const;
  void _internal_set_masking_key(const std::string& value);
  std::string* _internal_mutable_masking_key();
  public:

  // .nugget.app.keymaster.KeyParameters params = 2;
  bool has_params() const;
  private:
  bool _internal_has_params() const;
  public:
  void clear_params();
  const ::nugget::app::keymaster::KeyParameters& params() const;
  ::nugget::app::keymaster::KeyParameters* release_params();
  ::nugget::app::keymaster::KeyParameters* mutable_params();
  void set_allocated_params(::nugget::app::keymaster::KeyParameters* params);
  private:
  const ::nugget::app::keymaster::KeyParameters& _internal_params() const;
  ::nugget::app::keymaster::KeyParameters* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::nugget::app::keymaster::KeyParameters* params);
  ::nugget::app::keymaster::KeyParameters* unsafe_arena_release_params();

  // .nugget.app.keymaster.KeyBlob wrapping_key_blob = 8;
  bool has_wrapping_key_blob() const;
  private:
  bool _internal_has_wrapping_key_blob() const;
  public:
  void clear_wrapping_key_blob();
  const ::nugget::app::keymaster::KeyBlob& wrapping_key_blob() const;
  ::nugget::app::keymaster::KeyBlob* release_wrapping_key_blob();
  ::nugget::app::keymaster::KeyBlob* mutable_wrapping_key_blob();
  void set_allocated_wrapping_key_blob(::nugget::app::keymaster::KeyBlob* wrapping_key_blob);
  private:
  const ::nugget::app::keymaster::KeyBlob& _internal_wrapping_key_blob() const;
  ::nugget::app::keymaster::KeyBlob* _internal_mutable_wrapping_key_blob();
  public:
  void unsafe_arena_set_allocated_wrapping_key_blob(
      ::nugget::app::keymaster::KeyBlob* wrapping_key_blob);
  ::nugget::app::keymaster::KeyBlob* unsafe_arena_release_wrapping_key_blob();

  // uint64 creation_time_ms = 10;
  void clear_creation_time_ms();
  ::PROTOBUF_NAMESPACE_ID::uint64 creation_time_ms() const;
  void set_creation_time_ms(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_creation_time_ms() const;
  void _internal_set_creation_time_ms(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 key_format = 1;
  void clear_key_format();
  ::PROTOBUF_NAMESPACE_ID::uint32 key_format() const;
  void set_key_format(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_key_format() const;
  void _internal_set_key_format(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.ImportWrappedKeyRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rsa_envelope_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr initialization_vector_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr encrypted_import_key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr aad_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gcm_tag_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr masking_key_;
  ::nugget::app::keymaster::KeyParameters* params_;
  ::nugget::app::keymaster::KeyBlob* wrapping_key_blob_;
  ::PROTOBUF_NAMESPACE_ID::uint64 creation_time_ms_;
  ::PROTOBUF_NAMESPACE_ID::uint32 key_format_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class GetHmacSharingParametersRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.GetHmacSharingParametersRequest) */ {
 public:
  inline GetHmacSharingParametersRequest() : GetHmacSharingParametersRequest(nullptr) {}
  virtual ~GetHmacSharingParametersRequest();
  explicit constexpr GetHmacSharingParametersRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetHmacSharingParametersRequest(const GetHmacSharingParametersRequest& from);
  GetHmacSharingParametersRequest(GetHmacSharingParametersRequest&& from) noexcept
    : GetHmacSharingParametersRequest() {
    *this = ::std::move(from);
  }

  inline GetHmacSharingParametersRequest& operator=(const GetHmacSharingParametersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetHmacSharingParametersRequest& operator=(GetHmacSharingParametersRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetHmacSharingParametersRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetHmacSharingParametersRequest* internal_default_instance() {
    return reinterpret_cast<const GetHmacSharingParametersRequest*>(
               &_GetHmacSharingParametersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(GetHmacSharingParametersRequest& a, GetHmacSharingParametersRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetHmacSharingParametersRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetHmacSharingParametersRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetHmacSharingParametersRequest* New() const final {
    return CreateMaybeMessage<GetHmacSharingParametersRequest>(nullptr);
  }

  GetHmacSharingParametersRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetHmacSharingParametersRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetHmacSharingParametersRequest& from);
  void MergeFrom(const GetHmacSharingParametersRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetHmacSharingParametersRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.GetHmacSharingParametersRequest";
  }
  protected:
  explicit GetHmacSharingParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.GetHmacSharingParametersRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class GetHmacSharingParametersResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.GetHmacSharingParametersResponse) */ {
 public:
  inline GetHmacSharingParametersResponse() : GetHmacSharingParametersResponse(nullptr) {}
  virtual ~GetHmacSharingParametersResponse();
  explicit constexpr GetHmacSharingParametersResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetHmacSharingParametersResponse(const GetHmacSharingParametersResponse& from);
  GetHmacSharingParametersResponse(GetHmacSharingParametersResponse&& from) noexcept
    : GetHmacSharingParametersResponse() {
    *this = ::std::move(from);
  }

  inline GetHmacSharingParametersResponse& operator=(const GetHmacSharingParametersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetHmacSharingParametersResponse& operator=(GetHmacSharingParametersResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetHmacSharingParametersResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetHmacSharingParametersResponse* internal_default_instance() {
    return reinterpret_cast<const GetHmacSharingParametersResponse*>(
               &_GetHmacSharingParametersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(GetHmacSharingParametersResponse& a, GetHmacSharingParametersResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetHmacSharingParametersResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetHmacSharingParametersResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetHmacSharingParametersResponse* New() const final {
    return CreateMaybeMessage<GetHmacSharingParametersResponse>(nullptr);
  }

  GetHmacSharingParametersResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetHmacSharingParametersResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetHmacSharingParametersResponse& from);
  void MergeFrom(const GetHmacSharingParametersResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetHmacSharingParametersResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.GetHmacSharingParametersResponse";
  }
  protected:
  explicit GetHmacSharingParametersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHmacSharingParamsFieldNumber = 2,
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.HmacSharingParameters hmac_sharing_params = 2;
  bool has_hmac_sharing_params() const;
  private:
  bool _internal_has_hmac_sharing_params() const;
  public:
  void clear_hmac_sharing_params();
  const ::nugget::app::keymaster::HmacSharingParameters& hmac_sharing_params() const;
  ::nugget::app::keymaster::HmacSharingParameters* release_hmac_sharing_params();
  ::nugget::app::keymaster::HmacSharingParameters* mutable_hmac_sharing_params();
  void set_allocated_hmac_sharing_params(::nugget::app::keymaster::HmacSharingParameters* hmac_sharing_params);
  private:
  const ::nugget::app::keymaster::HmacSharingParameters& _internal_hmac_sharing_params() const;
  ::nugget::app::keymaster::HmacSharingParameters* _internal_mutable_hmac_sharing_params();
  public:
  void unsafe_arena_set_allocated_hmac_sharing_params(
      ::nugget::app::keymaster::HmacSharingParameters* hmac_sharing_params);
  ::nugget::app::keymaster::HmacSharingParameters* unsafe_arena_release_hmac_sharing_params();

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.GetHmacSharingParametersResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::HmacSharingParameters* hmac_sharing_params_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class ComputeSharedHmacRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.ComputeSharedHmacRequest) */ {
 public:
  inline ComputeSharedHmacRequest() : ComputeSharedHmacRequest(nullptr) {}
  virtual ~ComputeSharedHmacRequest();
  explicit constexpr ComputeSharedHmacRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ComputeSharedHmacRequest(const ComputeSharedHmacRequest& from);
  ComputeSharedHmacRequest(ComputeSharedHmacRequest&& from) noexcept
    : ComputeSharedHmacRequest() {
    *this = ::std::move(from);
  }

  inline ComputeSharedHmacRequest& operator=(const ComputeSharedHmacRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComputeSharedHmacRequest& operator=(ComputeSharedHmacRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ComputeSharedHmacRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComputeSharedHmacRequest* internal_default_instance() {
    return reinterpret_cast<const ComputeSharedHmacRequest*>(
               &_ComputeSharedHmacRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(ComputeSharedHmacRequest& a, ComputeSharedHmacRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ComputeSharedHmacRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComputeSharedHmacRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ComputeSharedHmacRequest* New() const final {
    return CreateMaybeMessage<ComputeSharedHmacRequest>(nullptr);
  }

  ComputeSharedHmacRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ComputeSharedHmacRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ComputeSharedHmacRequest& from);
  void MergeFrom(const ComputeSharedHmacRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComputeSharedHmacRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.ComputeSharedHmacRequest";
  }
  protected:
  explicit ComputeSharedHmacRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHmacSharingParamsFieldNumber = 1,
  };
  // repeated .nugget.app.keymaster.HmacSharingParameters hmac_sharing_params = 1;
  int hmac_sharing_params_size() const;
  private:
  int _internal_hmac_sharing_params_size() const;
  public:
  void clear_hmac_sharing_params();
  ::nugget::app::keymaster::HmacSharingParameters* mutable_hmac_sharing_params(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::nugget::app::keymaster::HmacSharingParameters >*
      mutable_hmac_sharing_params();
  private:
  const ::nugget::app::keymaster::HmacSharingParameters& _internal_hmac_sharing_params(int index) const;
  ::nugget::app::keymaster::HmacSharingParameters* _internal_add_hmac_sharing_params();
  public:
  const ::nugget::app::keymaster::HmacSharingParameters& hmac_sharing_params(int index) const;
  ::nugget::app::keymaster::HmacSharingParameters* add_hmac_sharing_params();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::nugget::app::keymaster::HmacSharingParameters >&
      hmac_sharing_params() const;

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.ComputeSharedHmacRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::nugget::app::keymaster::HmacSharingParameters > hmac_sharing_params_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class ComputeSharedHmacResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.ComputeSharedHmacResponse) */ {
 public:
  inline ComputeSharedHmacResponse() : ComputeSharedHmacResponse(nullptr) {}
  virtual ~ComputeSharedHmacResponse();
  explicit constexpr ComputeSharedHmacResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ComputeSharedHmacResponse(const ComputeSharedHmacResponse& from);
  ComputeSharedHmacResponse(ComputeSharedHmacResponse&& from) noexcept
    : ComputeSharedHmacResponse() {
    *this = ::std::move(from);
  }

  inline ComputeSharedHmacResponse& operator=(const ComputeSharedHmacResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComputeSharedHmacResponse& operator=(ComputeSharedHmacResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ComputeSharedHmacResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComputeSharedHmacResponse* internal_default_instance() {
    return reinterpret_cast<const ComputeSharedHmacResponse*>(
               &_ComputeSharedHmacResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(ComputeSharedHmacResponse& a, ComputeSharedHmacResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ComputeSharedHmacResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComputeSharedHmacResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ComputeSharedHmacResponse* New() const final {
    return CreateMaybeMessage<ComputeSharedHmacResponse>(nullptr);
  }

  ComputeSharedHmacResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ComputeSharedHmacResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ComputeSharedHmacResponse& from);
  void MergeFrom(const ComputeSharedHmacResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComputeSharedHmacResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.ComputeSharedHmacResponse";
  }
  protected:
  explicit ComputeSharedHmacResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSharingCheckFieldNumber = 2,
    kErrorCodeFieldNumber = 1,
  };
  // bytes sharing_check = 2;
  void clear_sharing_check();
  const std::string& sharing_check() const;
  void set_sharing_check(const std::string& value);
  void set_sharing_check(std::string&& value);
  void set_sharing_check(const char* value);
  void set_sharing_check(const void* value, size_t size);
  std::string* mutable_sharing_check();
  std::string* release_sharing_check();
  void set_allocated_sharing_check(std::string* sharing_check);
  private:
  const std::string& _internal_sharing_check() const;
  void _internal_set_sharing_check(const std::string& value);
  std::string* _internal_mutable_sharing_check();
  public:

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.ComputeSharedHmacResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sharing_check_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class DeviceLockedRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.DeviceLockedRequest) */ {
 public:
  inline DeviceLockedRequest() : DeviceLockedRequest(nullptr) {}
  virtual ~DeviceLockedRequest();
  explicit constexpr DeviceLockedRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeviceLockedRequest(const DeviceLockedRequest& from);
  DeviceLockedRequest(DeviceLockedRequest&& from) noexcept
    : DeviceLockedRequest() {
    *this = ::std::move(from);
  }

  inline DeviceLockedRequest& operator=(const DeviceLockedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceLockedRequest& operator=(DeviceLockedRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeviceLockedRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeviceLockedRequest* internal_default_instance() {
    return reinterpret_cast<const DeviceLockedRequest*>(
               &_DeviceLockedRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(DeviceLockedRequest& a, DeviceLockedRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeviceLockedRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceLockedRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeviceLockedRequest* New() const final {
    return CreateMaybeMessage<DeviceLockedRequest>(nullptr);
  }

  DeviceLockedRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeviceLockedRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeviceLockedRequest& from);
  void MergeFrom(const DeviceLockedRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeviceLockedRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.DeviceLockedRequest";
  }
  protected:
  explicit DeviceLockedRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVerificationTokenFieldNumber = 2,
    kPasswordOnlyFieldNumber = 1,
  };
  // .nugget.app.keymaster.VerificationToken verification_token = 2;
  bool has_verification_token() const;
  private:
  bool _internal_has_verification_token() const;
  public:
  void clear_verification_token();
  const ::nugget::app::keymaster::VerificationToken& verification_token() const;
  ::nugget::app::keymaster::VerificationToken* release_verification_token();
  ::nugget::app::keymaster::VerificationToken* mutable_verification_token();
  void set_allocated_verification_token(::nugget::app::keymaster::VerificationToken* verification_token);
  private:
  const ::nugget::app::keymaster::VerificationToken& _internal_verification_token() const;
  ::nugget::app::keymaster::VerificationToken* _internal_mutable_verification_token();
  public:
  void unsafe_arena_set_allocated_verification_token(
      ::nugget::app::keymaster::VerificationToken* verification_token);
  ::nugget::app::keymaster::VerificationToken* unsafe_arena_release_verification_token();

  // bool password_only = 1;
  void clear_password_only();
  bool password_only() const;
  void set_password_only(bool value);
  private:
  bool _internal_password_only() const;
  void _internal_set_password_only(bool value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.DeviceLockedRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::VerificationToken* verification_token_;
  bool password_only_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class DeviceLockedResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.DeviceLockedResponse) */ {
 public:
  inline DeviceLockedResponse() : DeviceLockedResponse(nullptr) {}
  virtual ~DeviceLockedResponse();
  explicit constexpr DeviceLockedResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeviceLockedResponse(const DeviceLockedResponse& from);
  DeviceLockedResponse(DeviceLockedResponse&& from) noexcept
    : DeviceLockedResponse() {
    *this = ::std::move(from);
  }

  inline DeviceLockedResponse& operator=(const DeviceLockedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceLockedResponse& operator=(DeviceLockedResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeviceLockedResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeviceLockedResponse* internal_default_instance() {
    return reinterpret_cast<const DeviceLockedResponse*>(
               &_DeviceLockedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(DeviceLockedResponse& a, DeviceLockedResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DeviceLockedResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceLockedResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeviceLockedResponse* New() const final {
    return CreateMaybeMessage<DeviceLockedResponse>(nullptr);
  }

  DeviceLockedResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeviceLockedResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeviceLockedResponse& from);
  void MergeFrom(const DeviceLockedResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeviceLockedResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.DeviceLockedResponse";
  }
  protected:
  explicit DeviceLockedResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.DeviceLockedResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class EarlyBootEndedRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.EarlyBootEndedRequest) */ {
 public:
  inline EarlyBootEndedRequest() : EarlyBootEndedRequest(nullptr) {}
  virtual ~EarlyBootEndedRequest();
  explicit constexpr EarlyBootEndedRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EarlyBootEndedRequest(const EarlyBootEndedRequest& from);
  EarlyBootEndedRequest(EarlyBootEndedRequest&& from) noexcept
    : EarlyBootEndedRequest() {
    *this = ::std::move(from);
  }

  inline EarlyBootEndedRequest& operator=(const EarlyBootEndedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EarlyBootEndedRequest& operator=(EarlyBootEndedRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EarlyBootEndedRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EarlyBootEndedRequest* internal_default_instance() {
    return reinterpret_cast<const EarlyBootEndedRequest*>(
               &_EarlyBootEndedRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(EarlyBootEndedRequest& a, EarlyBootEndedRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(EarlyBootEndedRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EarlyBootEndedRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EarlyBootEndedRequest* New() const final {
    return CreateMaybeMessage<EarlyBootEndedRequest>(nullptr);
  }

  EarlyBootEndedRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EarlyBootEndedRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EarlyBootEndedRequest& from);
  void MergeFrom(const EarlyBootEndedRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EarlyBootEndedRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.EarlyBootEndedRequest";
  }
  protected:
  explicit EarlyBootEndedRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.EarlyBootEndedRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class EarlyBootEndedResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.EarlyBootEndedResponse) */ {
 public:
  inline EarlyBootEndedResponse() : EarlyBootEndedResponse(nullptr) {}
  virtual ~EarlyBootEndedResponse();
  explicit constexpr EarlyBootEndedResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EarlyBootEndedResponse(const EarlyBootEndedResponse& from);
  EarlyBootEndedResponse(EarlyBootEndedResponse&& from) noexcept
    : EarlyBootEndedResponse() {
    *this = ::std::move(from);
  }

  inline EarlyBootEndedResponse& operator=(const EarlyBootEndedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline EarlyBootEndedResponse& operator=(EarlyBootEndedResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EarlyBootEndedResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const EarlyBootEndedResponse* internal_default_instance() {
    return reinterpret_cast<const EarlyBootEndedResponse*>(
               &_EarlyBootEndedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(EarlyBootEndedResponse& a, EarlyBootEndedResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(EarlyBootEndedResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EarlyBootEndedResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EarlyBootEndedResponse* New() const final {
    return CreateMaybeMessage<EarlyBootEndedResponse>(nullptr);
  }

  EarlyBootEndedResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EarlyBootEndedResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EarlyBootEndedResponse& from);
  void MergeFrom(const EarlyBootEndedResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EarlyBootEndedResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.EarlyBootEndedResponse";
  }
  protected:
  explicit EarlyBootEndedResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.EarlyBootEndedResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class SetRootOfTrustRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.SetRootOfTrustRequest) */ {
 public:
  inline SetRootOfTrustRequest() : SetRootOfTrustRequest(nullptr) {}
  virtual ~SetRootOfTrustRequest();
  explicit constexpr SetRootOfTrustRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetRootOfTrustRequest(const SetRootOfTrustRequest& from);
  SetRootOfTrustRequest(SetRootOfTrustRequest&& from) noexcept
    : SetRootOfTrustRequest() {
    *this = ::std::move(from);
  }

  inline SetRootOfTrustRequest& operator=(const SetRootOfTrustRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetRootOfTrustRequest& operator=(SetRootOfTrustRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetRootOfTrustRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetRootOfTrustRequest* internal_default_instance() {
    return reinterpret_cast<const SetRootOfTrustRequest*>(
               &_SetRootOfTrustRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(SetRootOfTrustRequest& a, SetRootOfTrustRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetRootOfTrustRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetRootOfTrustRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetRootOfTrustRequest* New() const final {
    return CreateMaybeMessage<SetRootOfTrustRequest>(nullptr);
  }

  SetRootOfTrustRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetRootOfTrustRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetRootOfTrustRequest& from);
  void MergeFrom(const SetRootOfTrustRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetRootOfTrustRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.SetRootOfTrustRequest";
  }
  protected:
  explicit SetRootOfTrustRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDigestFieldNumber = 1,
  };
  // bytes digest = 1;
  void clear_digest();
  const std::string& digest() const;
  void set_digest(const std::string& value);
  void set_digest(std::string&& value);
  void set_digest(const char* value);
  void set_digest(const void* value, size_t size);
  std::string* mutable_digest();
  std::string* release_digest();
  void set_allocated_digest(std::string* digest);
  private:
  const std::string& _internal_digest() const;
  void _internal_set_digest(const std::string& value);
  std::string* _internal_mutable_digest();
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.SetRootOfTrustRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr digest_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class SetRootOfTrustResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.SetRootOfTrustResponse) */ {
 public:
  inline SetRootOfTrustResponse() : SetRootOfTrustResponse(nullptr) {}
  virtual ~SetRootOfTrustResponse();
  explicit constexpr SetRootOfTrustResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetRootOfTrustResponse(const SetRootOfTrustResponse& from);
  SetRootOfTrustResponse(SetRootOfTrustResponse&& from) noexcept
    : SetRootOfTrustResponse() {
    *this = ::std::move(from);
  }

  inline SetRootOfTrustResponse& operator=(const SetRootOfTrustResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetRootOfTrustResponse& operator=(SetRootOfTrustResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetRootOfTrustResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetRootOfTrustResponse* internal_default_instance() {
    return reinterpret_cast<const SetRootOfTrustResponse*>(
               &_SetRootOfTrustResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(SetRootOfTrustResponse& a, SetRootOfTrustResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetRootOfTrustResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetRootOfTrustResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetRootOfTrustResponse* New() const final {
    return CreateMaybeMessage<SetRootOfTrustResponse>(nullptr);
  }

  SetRootOfTrustResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetRootOfTrustResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetRootOfTrustResponse& from);
  void MergeFrom(const SetRootOfTrustResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetRootOfTrustResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.SetRootOfTrustResponse";
  }
  protected:
  explicit SetRootOfTrustResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.SetRootOfTrustResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class SetBootStateRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.SetBootStateRequest) */ {
 public:
  inline SetBootStateRequest() : SetBootStateRequest(nullptr) {}
  virtual ~SetBootStateRequest();
  explicit constexpr SetBootStateRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetBootStateRequest(const SetBootStateRequest& from);
  SetBootStateRequest(SetBootStateRequest&& from) noexcept
    : SetBootStateRequest() {
    *this = ::std::move(from);
  }

  inline SetBootStateRequest& operator=(const SetBootStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetBootStateRequest& operator=(SetBootStateRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetBootStateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetBootStateRequest* internal_default_instance() {
    return reinterpret_cast<const SetBootStateRequest*>(
               &_SetBootStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(SetBootStateRequest& a, SetBootStateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetBootStateRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetBootStateRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetBootStateRequest* New() const final {
    return CreateMaybeMessage<SetBootStateRequest>(nullptr);
  }

  SetBootStateRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetBootStateRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetBootStateRequest& from);
  void MergeFrom(const SetBootStateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetBootStateRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.SetBootStateRequest";
  }
  protected:
  explicit SetBootStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPublicKeyFieldNumber = 2,
    kBootHashFieldNumber = 6,
    kIsUnlockedFieldNumber = 1,
    kColorFieldNumber = 3,
    kSystemVersionFieldNumber = 4,
    kSystemSecurityLevelFieldNumber = 5,
  };
  // bytes public_key = 2;
  void clear_public_key();
  const std::string& public_key() const;
  void set_public_key(const std::string& value);
  void set_public_key(std::string&& value);
  void set_public_key(const char* value);
  void set_public_key(const void* value, size_t size);
  std::string* mutable_public_key();
  std::string* release_public_key();
  void set_allocated_public_key(std::string* public_key);
  private:
  const std::string& _internal_public_key() const;
  void _internal_set_public_key(const std::string& value);
  std::string* _internal_mutable_public_key();
  public:

  // bytes boot_hash = 6;
  void clear_boot_hash();
  const std::string& boot_hash() const;
  void set_boot_hash(const std::string& value);
  void set_boot_hash(std::string&& value);
  void set_boot_hash(const char* value);
  void set_boot_hash(const void* value, size_t size);
  std::string* mutable_boot_hash();
  std::string* release_boot_hash();
  void set_allocated_boot_hash(std::string* boot_hash);
  private:
  const std::string& _internal_boot_hash() const;
  void _internal_set_boot_hash(const std::string& value);
  std::string* _internal_mutable_boot_hash();
  public:

  // bool is_unlocked = 1;
  void clear_is_unlocked();
  bool is_unlocked() const;
  void set_is_unlocked(bool value);
  private:
  bool _internal_is_unlocked() const;
  void _internal_set_is_unlocked(bool value);
  public:

  // .nugget.app.keymaster.BootColor color = 3;
  void clear_color();
  ::nugget::app::keymaster::BootColor color() const;
  void set_color(::nugget::app::keymaster::BootColor value);
  private:
  ::nugget::app::keymaster::BootColor _internal_color() const;
  void _internal_set_color(::nugget::app::keymaster::BootColor value);
  public:

  // uint32 system_version = 4;
  void clear_system_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 system_version() const;
  void set_system_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_system_version() const;
  void _internal_set_system_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 system_security_level = 5;
  void clear_system_security_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 system_security_level() const;
  void set_system_security_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_system_security_level() const;
  void _internal_set_system_security_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.SetBootStateRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr public_key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr boot_hash_;
  bool is_unlocked_;
  int color_;
  ::PROTOBUF_NAMESPACE_ID::uint32 system_version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 system_security_level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class SetBootStateResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.SetBootStateResponse) */ {
 public:
  inline SetBootStateResponse() : SetBootStateResponse(nullptr) {}
  virtual ~SetBootStateResponse();
  explicit constexpr SetBootStateResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetBootStateResponse(const SetBootStateResponse& from);
  SetBootStateResponse(SetBootStateResponse&& from) noexcept
    : SetBootStateResponse() {
    *this = ::std::move(from);
  }

  inline SetBootStateResponse& operator=(const SetBootStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetBootStateResponse& operator=(SetBootStateResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetBootStateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetBootStateResponse* internal_default_instance() {
    return reinterpret_cast<const SetBootStateResponse*>(
               &_SetBootStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(SetBootStateResponse& a, SetBootStateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetBootStateResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetBootStateResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetBootStateResponse* New() const final {
    return CreateMaybeMessage<SetBootStateResponse>(nullptr);
  }

  SetBootStateResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetBootStateResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetBootStateResponse& from);
  void MergeFrom(const SetBootStateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetBootStateResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.SetBootStateResponse";
  }
  protected:
  explicit SetBootStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.SetBootStateResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class ProvisionDeviceIdsRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.ProvisionDeviceIdsRequest) */ {
 public:
  inline ProvisionDeviceIdsRequest() : ProvisionDeviceIdsRequest(nullptr) {}
  virtual ~ProvisionDeviceIdsRequest();
  explicit constexpr ProvisionDeviceIdsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProvisionDeviceIdsRequest(const ProvisionDeviceIdsRequest& from);
  ProvisionDeviceIdsRequest(ProvisionDeviceIdsRequest&& from) noexcept
    : ProvisionDeviceIdsRequest() {
    *this = ::std::move(from);
  }

  inline ProvisionDeviceIdsRequest& operator=(const ProvisionDeviceIdsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProvisionDeviceIdsRequest& operator=(ProvisionDeviceIdsRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProvisionDeviceIdsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProvisionDeviceIdsRequest* internal_default_instance() {
    return reinterpret_cast<const ProvisionDeviceIdsRequest*>(
               &_ProvisionDeviceIdsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(ProvisionDeviceIdsRequest& a, ProvisionDeviceIdsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ProvisionDeviceIdsRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProvisionDeviceIdsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProvisionDeviceIdsRequest* New() const final {
    return CreateMaybeMessage<ProvisionDeviceIdsRequest>(nullptr);
  }

  ProvisionDeviceIdsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProvisionDeviceIdsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProvisionDeviceIdsRequest& from);
  void MergeFrom(const ProvisionDeviceIdsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProvisionDeviceIdsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.ProvisionDeviceIdsRequest";
  }
  protected:
  explicit ProvisionDeviceIdsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProductBrandFieldNumber = 1,
    kProductDeviceFieldNumber = 2,
    kProductNameFieldNumber = 3,
    kSerialnoFieldNumber = 4,
    kProductManufacturerFieldNumber = 5,
    kProductModelFieldNumber = 6,
    kImeiFieldNumber = 7,
    kMeidFieldNumber = 8,
  };
  // bytes product_brand = 1;
  void clear_product_brand();
  const std::string& product_brand() const;
  void set_product_brand(const std::string& value);
  void set_product_brand(std::string&& value);
  void set_product_brand(const char* value);
  void set_product_brand(const void* value, size_t size);
  std::string* mutable_product_brand();
  std::string* release_product_brand();
  void set_allocated_product_brand(std::string* product_brand);
  private:
  const std::string& _internal_product_brand() const;
  void _internal_set_product_brand(const std::string& value);
  std::string* _internal_mutable_product_brand();
  public:

  // bytes product_device = 2;
  void clear_product_device();
  const std::string& product_device() const;
  void set_product_device(const std::string& value);
  void set_product_device(std::string&& value);
  void set_product_device(const char* value);
  void set_product_device(const void* value, size_t size);
  std::string* mutable_product_device();
  std::string* release_product_device();
  void set_allocated_product_device(std::string* product_device);
  private:
  const std::string& _internal_product_device() const;
  void _internal_set_product_device(const std::string& value);
  std::string* _internal_mutable_product_device();
  public:

  // bytes product_name = 3;
  void clear_product_name();
  const std::string& product_name() const;
  void set_product_name(const std::string& value);
  void set_product_name(std::string&& value);
  void set_product_name(const char* value);
  void set_product_name(const void* value, size_t size);
  std::string* mutable_product_name();
  std::string* release_product_name();
  void set_allocated_product_name(std::string* product_name);
  private:
  const std::string& _internal_product_name() const;
  void _internal_set_product_name(const std::string& value);
  std::string* _internal_mutable_product_name();
  public:

  // bytes serialno = 4;
  void clear_serialno();
  const std::string& serialno() const;
  void set_serialno(const std::string& value);
  void set_serialno(std::string&& value);
  void set_serialno(const char* value);
  void set_serialno(const void* value, size_t size);
  std::string* mutable_serialno();
  std::string* release_serialno();
  void set_allocated_serialno(std::string* serialno);
  private:
  const std::string& _internal_serialno() const;
  void _internal_set_serialno(const std::string& value);
  std::string* _internal_mutable_serialno();
  public:

  // bytes product_manufacturer = 5;
  void clear_product_manufacturer();
  const std::string& product_manufacturer() const;
  void set_product_manufacturer(const std::string& value);
  void set_product_manufacturer(std::string&& value);
  void set_product_manufacturer(const char* value);
  void set_product_manufacturer(const void* value, size_t size);
  std::string* mutable_product_manufacturer();
  std::string* release_product_manufacturer();
  void set_allocated_product_manufacturer(std::string* product_manufacturer);
  private:
  const std::string& _internal_product_manufacturer() const;
  void _internal_set_product_manufacturer(const std::string& value);
  std::string* _internal_mutable_product_manufacturer();
  public:

  // bytes product_model = 6;
  void clear_product_model();
  const std::string& product_model() const;
  void set_product_model(const std::string& value);
  void set_product_model(std::string&& value);
  void set_product_model(const char* value);
  void set_product_model(const void* value, size_t size);
  std::string* mutable_product_model();
  std::string* release_product_model();
  void set_allocated_product_model(std::string* product_model);
  private:
  const std::string& _internal_product_model() const;
  void _internal_set_product_model(const std::string& value);
  std::string* _internal_mutable_product_model();
  public:

  // bytes imei = 7;
  void clear_imei();
  const std::string& imei() const;
  void set_imei(const std::string& value);
  void set_imei(std::string&& value);
  void set_imei(const char* value);
  void set_imei(const void* value, size_t size);
  std::string* mutable_imei();
  std::string* release_imei();
  void set_allocated_imei(std::string* imei);
  private:
  const std::string& _internal_imei() const;
  void _internal_set_imei(const std::string& value);
  std::string* _internal_mutable_imei();
  public:

  // bytes meid = 8;
  void clear_meid();
  const std::string& meid() const;
  void set_meid(const std::string& value);
  void set_meid(std::string&& value);
  void set_meid(const char* value);
  void set_meid(const void* value, size_t size);
  std::string* mutable_meid();
  std::string* release_meid();
  void set_allocated_meid(std::string* meid);
  private:
  const std::string& _internal_meid() const;
  void _internal_set_meid(const std::string& value);
  std::string* _internal_mutable_meid();
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.ProvisionDeviceIdsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr product_brand_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr product_device_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr product_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr serialno_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr product_manufacturer_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr product_model_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr imei_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr meid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class ProvisionDeviceIdsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.ProvisionDeviceIdsResponse) */ {
 public:
  inline ProvisionDeviceIdsResponse() : ProvisionDeviceIdsResponse(nullptr) {}
  virtual ~ProvisionDeviceIdsResponse();
  explicit constexpr ProvisionDeviceIdsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProvisionDeviceIdsResponse(const ProvisionDeviceIdsResponse& from);
  ProvisionDeviceIdsResponse(ProvisionDeviceIdsResponse&& from) noexcept
    : ProvisionDeviceIdsResponse() {
    *this = ::std::move(from);
  }

  inline ProvisionDeviceIdsResponse& operator=(const ProvisionDeviceIdsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProvisionDeviceIdsResponse& operator=(ProvisionDeviceIdsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProvisionDeviceIdsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProvisionDeviceIdsResponse* internal_default_instance() {
    return reinterpret_cast<const ProvisionDeviceIdsResponse*>(
               &_ProvisionDeviceIdsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(ProvisionDeviceIdsResponse& a, ProvisionDeviceIdsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ProvisionDeviceIdsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProvisionDeviceIdsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProvisionDeviceIdsResponse* New() const final {
    return CreateMaybeMessage<ProvisionDeviceIdsResponse>(nullptr);
  }

  ProvisionDeviceIdsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProvisionDeviceIdsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProvisionDeviceIdsResponse& from);
  void MergeFrom(const ProvisionDeviceIdsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProvisionDeviceIdsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.ProvisionDeviceIdsResponse";
  }
  protected:
  explicit ProvisionDeviceIdsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorCodeFieldNumber = 1,
    kChipFusingFieldNumber = 2,
    kNodelockedRoFieldNumber = 3,
  };
  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // .nugget.app.keymaster.ChipFusing chip_fusing = 2;
  void clear_chip_fusing();
  ::nugget::app::keymaster::ChipFusing chip_fusing() const;
  void set_chip_fusing(::nugget::app::keymaster::ChipFusing value);
  private:
  ::nugget::app::keymaster::ChipFusing _internal_chip_fusing() const;
  void _internal_set_chip_fusing(::nugget::app::keymaster::ChipFusing value);
  public:

  // bool nodelocked_ro = 3;
  void clear_nodelocked_ro();
  bool nodelocked_ro() const;
  void set_nodelocked_ro(bool value);
  private:
  bool _internal_nodelocked_ro() const;
  void _internal_set_nodelocked_ro(bool value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.ProvisionDeviceIdsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int error_code_;
  int chip_fusing_;
  bool nodelocked_ro_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class ReadTeeBatchCertificateRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.ReadTeeBatchCertificateRequest) */ {
 public:
  inline ReadTeeBatchCertificateRequest() : ReadTeeBatchCertificateRequest(nullptr) {}
  virtual ~ReadTeeBatchCertificateRequest();
  explicit constexpr ReadTeeBatchCertificateRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReadTeeBatchCertificateRequest(const ReadTeeBatchCertificateRequest& from);
  ReadTeeBatchCertificateRequest(ReadTeeBatchCertificateRequest&& from) noexcept
    : ReadTeeBatchCertificateRequest() {
    *this = ::std::move(from);
  }

  inline ReadTeeBatchCertificateRequest& operator=(const ReadTeeBatchCertificateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReadTeeBatchCertificateRequest& operator=(ReadTeeBatchCertificateRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ReadTeeBatchCertificateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReadTeeBatchCertificateRequest* internal_default_instance() {
    return reinterpret_cast<const ReadTeeBatchCertificateRequest*>(
               &_ReadTeeBatchCertificateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(ReadTeeBatchCertificateRequest& a, ReadTeeBatchCertificateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ReadTeeBatchCertificateRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReadTeeBatchCertificateRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ReadTeeBatchCertificateRequest* New() const final {
    return CreateMaybeMessage<ReadTeeBatchCertificateRequest>(nullptr);
  }

  ReadTeeBatchCertificateRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ReadTeeBatchCertificateRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ReadTeeBatchCertificateRequest& from);
  void MergeFrom(const ReadTeeBatchCertificateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadTeeBatchCertificateRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.ReadTeeBatchCertificateRequest";
  }
  protected:
  explicit ReadTeeBatchCertificateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAlgorithmFieldNumber = 1,
  };
  // .nugget.app.keymaster.Algorithm algorithm = 1;
  void clear_algorithm();
  ::nugget::app::keymaster::Algorithm algorithm() const;
  void set_algorithm(::nugget::app::keymaster::Algorithm value);
  private:
  ::nugget::app::keymaster::Algorithm _internal_algorithm() const;
  void _internal_set_algorithm(::nugget::app::keymaster::Algorithm value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.ReadTeeBatchCertificateRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int algorithm_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class ReadTeeBatchCertificateResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.ReadTeeBatchCertificateResponse) */ {
 public:
  inline ReadTeeBatchCertificateResponse() : ReadTeeBatchCertificateResponse(nullptr) {}
  virtual ~ReadTeeBatchCertificateResponse();
  explicit constexpr ReadTeeBatchCertificateResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReadTeeBatchCertificateResponse(const ReadTeeBatchCertificateResponse& from);
  ReadTeeBatchCertificateResponse(ReadTeeBatchCertificateResponse&& from) noexcept
    : ReadTeeBatchCertificateResponse() {
    *this = ::std::move(from);
  }

  inline ReadTeeBatchCertificateResponse& operator=(const ReadTeeBatchCertificateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReadTeeBatchCertificateResponse& operator=(ReadTeeBatchCertificateResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ReadTeeBatchCertificateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReadTeeBatchCertificateResponse* internal_default_instance() {
    return reinterpret_cast<const ReadTeeBatchCertificateResponse*>(
               &_ReadTeeBatchCertificateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(ReadTeeBatchCertificateResponse& a, ReadTeeBatchCertificateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ReadTeeBatchCertificateResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReadTeeBatchCertificateResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ReadTeeBatchCertificateResponse* New() const final {
    return CreateMaybeMessage<ReadTeeBatchCertificateResponse>(nullptr);
  }

  ReadTeeBatchCertificateResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ReadTeeBatchCertificateResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ReadTeeBatchCertificateResponse& from);
  void MergeFrom(const ReadTeeBatchCertificateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadTeeBatchCertificateResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.ReadTeeBatchCertificateResponse";
  }
  protected:
  explicit ReadTeeBatchCertificateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBatchCertFieldNumber = 4,
    kRsaFieldNumber = 2,
    kEcFieldNumber = 3,
    kErrorCodeFieldNumber = 1,
  };
  // bytes batch_cert = 4;
  void clear_batch_cert();
  const std::string& batch_cert() const;
  void set_batch_cert(const std::string& value);
  void set_batch_cert(std::string&& value);
  void set_batch_cert(const char* value);
  void set_batch_cert(const void* value, size_t size);
  std::string* mutable_batch_cert();
  std::string* release_batch_cert();
  void set_allocated_batch_cert(std::string* batch_cert);
  private:
  const std::string& _internal_batch_cert() const;
  void _internal_set_batch_cert(const std::string& value);
  std::string* _internal_mutable_batch_cert();
  public:

  // .nugget.app.keymaster.RSAKey rsa = 2;
  bool has_rsa() const;
  private:
  bool _internal_has_rsa() const;
  public:
  void clear_rsa();
  const ::nugget::app::keymaster::RSAKey& rsa() const;
  ::nugget::app::keymaster::RSAKey* release_rsa();
  ::nugget::app::keymaster::RSAKey* mutable_rsa();
  void set_allocated_rsa(::nugget::app::keymaster::RSAKey* rsa);
  private:
  const ::nugget::app::keymaster::RSAKey& _internal_rsa() const;
  ::nugget::app::keymaster::RSAKey* _internal_mutable_rsa();
  public:
  void unsafe_arena_set_allocated_rsa(
      ::nugget::app::keymaster::RSAKey* rsa);
  ::nugget::app::keymaster::RSAKey* unsafe_arena_release_rsa();

  // .nugget.app.keymaster.ECKey ec = 3;
  bool has_ec() const;
  private:
  bool _internal_has_ec() const;
  public:
  void clear_ec();
  const ::nugget::app::keymaster::ECKey& ec() const;
  ::nugget::app::keymaster::ECKey* release_ec();
  ::nugget::app::keymaster::ECKey* mutable_ec();
  void set_allocated_ec(::nugget::app::keymaster::ECKey* ec);
  private:
  const ::nugget::app::keymaster::ECKey& _internal_ec() const;
  ::nugget::app::keymaster::ECKey* _internal_mutable_ec();
  public:
  void unsafe_arena_set_allocated_ec(
      ::nugget::app::keymaster::ECKey* ec);
  ::nugget::app::keymaster::ECKey* unsafe_arena_release_ec();

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.ReadTeeBatchCertificateResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr batch_cert_;
  ::nugget::app::keymaster::RSAKey* rsa_;
  ::nugget::app::keymaster::ECKey* ec_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class DTupHandshakeRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.DTupHandshakeRequest) */ {
 public:
  inline DTupHandshakeRequest() : DTupHandshakeRequest(nullptr) {}
  virtual ~DTupHandshakeRequest();
  explicit constexpr DTupHandshakeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DTupHandshakeRequest(const DTupHandshakeRequest& from);
  DTupHandshakeRequest(DTupHandshakeRequest&& from) noexcept
    : DTupHandshakeRequest() {
    *this = ::std::move(from);
  }

  inline DTupHandshakeRequest& operator=(const DTupHandshakeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DTupHandshakeRequest& operator=(DTupHandshakeRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DTupHandshakeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DTupHandshakeRequest* internal_default_instance() {
    return reinterpret_cast<const DTupHandshakeRequest*>(
               &_DTupHandshakeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(DTupHandshakeRequest& a, DTupHandshakeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DTupHandshakeRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DTupHandshakeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DTupHandshakeRequest* New() const final {
    return CreateMaybeMessage<DTupHandshakeRequest>(nullptr);
  }

  DTupHandshakeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DTupHandshakeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DTupHandshakeRequest& from);
  void MergeFrom(const DTupHandshakeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DTupHandshakeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.DTupHandshakeRequest";
  }
  protected:
  explicit DTupHandshakeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNonceClientFieldNumber = 1,
  };
  // bytes nonce_client = 1;
  void clear_nonce_client();
  const std::string& nonce_client() const;
  void set_nonce_client(const std::string& value);
  void set_nonce_client(std::string&& value);
  void set_nonce_client(const char* value);
  void set_nonce_client(const void* value, size_t size);
  std::string* mutable_nonce_client();
  std::string* release_nonce_client();
  void set_allocated_nonce_client(std::string* nonce_client);
  private:
  const std::string& _internal_nonce_client() const;
  void _internal_set_nonce_client(const std::string& value);
  std::string* _internal_mutable_nonce_client();
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.DTupHandshakeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nonce_client_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class DTupHandshakeResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.DTupHandshakeResponse) */ {
 public:
  inline DTupHandshakeResponse() : DTupHandshakeResponse(nullptr) {}
  virtual ~DTupHandshakeResponse();
  explicit constexpr DTupHandshakeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DTupHandshakeResponse(const DTupHandshakeResponse& from);
  DTupHandshakeResponse(DTupHandshakeResponse&& from) noexcept
    : DTupHandshakeResponse() {
    *this = ::std::move(from);
  }

  inline DTupHandshakeResponse& operator=(const DTupHandshakeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DTupHandshakeResponse& operator=(DTupHandshakeResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DTupHandshakeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DTupHandshakeResponse* internal_default_instance() {
    return reinterpret_cast<const DTupHandshakeResponse*>(
               &_DTupHandshakeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(DTupHandshakeResponse& a, DTupHandshakeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DTupHandshakeResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DTupHandshakeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DTupHandshakeResponse* New() const final {
    return CreateMaybeMessage<DTupHandshakeResponse>(nullptr);
  }

  DTupHandshakeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DTupHandshakeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DTupHandshakeResponse& from);
  void MergeFrom(const DTupHandshakeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DTupHandshakeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.DTupHandshakeResponse";
  }
  protected:
  explicit DTupHandshakeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNonceCitadelFieldNumber = 2,
    kSignatureFieldNumber = 3,
    kErrorCodeFieldNumber = 1,
  };
  // bytes nonce_citadel = 2;
  void clear_nonce_citadel();
  const std::string& nonce_citadel() const;
  void set_nonce_citadel(const std::string& value);
  void set_nonce_citadel(std::string&& value);
  void set_nonce_citadel(const char* value);
  void set_nonce_citadel(const void* value, size_t size);
  std::string* mutable_nonce_citadel();
  std::string* release_nonce_citadel();
  void set_allocated_nonce_citadel(std::string* nonce_citadel);
  private:
  const std::string& _internal_nonce_citadel() const;
  void _internal_set_nonce_citadel(const std::string& value);
  std::string* _internal_mutable_nonce_citadel();
  public:

  // bytes signature = 3;
  void clear_signature();
  const std::string& signature() const;
  void set_signature(const std::string& value);
  void set_signature(std::string&& value);
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  std::string* mutable_signature();
  std::string* release_signature();
  void set_allocated_signature(std::string* signature);
  private:
  const std::string& _internal_signature() const;
  void _internal_set_signature(const std::string& value);
  std::string* _internal_mutable_signature();
  public:

  // .nugget.app.keymaster.DTupError error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::DTupError error_code() const;
  void set_error_code(::nugget::app::keymaster::DTupError value);
  private:
  ::nugget::app::keymaster::DTupError _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::DTupError value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.DTupHandshakeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nonce_citadel_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signature_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class DTupFetchInputEventRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.DTupFetchInputEventRequest) */ {
 public:
  inline DTupFetchInputEventRequest() : DTupFetchInputEventRequest(nullptr) {}
  virtual ~DTupFetchInputEventRequest();
  explicit constexpr DTupFetchInputEventRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DTupFetchInputEventRequest(const DTupFetchInputEventRequest& from);
  DTupFetchInputEventRequest(DTupFetchInputEventRequest&& from) noexcept
    : DTupFetchInputEventRequest() {
    *this = ::std::move(from);
  }

  inline DTupFetchInputEventRequest& operator=(const DTupFetchInputEventRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DTupFetchInputEventRequest& operator=(DTupFetchInputEventRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DTupFetchInputEventRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DTupFetchInputEventRequest* internal_default_instance() {
    return reinterpret_cast<const DTupFetchInputEventRequest*>(
               &_DTupFetchInputEventRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(DTupFetchInputEventRequest& a, DTupFetchInputEventRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DTupFetchInputEventRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DTupFetchInputEventRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DTupFetchInputEventRequest* New() const final {
    return CreateMaybeMessage<DTupFetchInputEventRequest>(nullptr);
  }

  DTupFetchInputEventRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DTupFetchInputEventRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DTupFetchInputEventRequest& from);
  void MergeFrom(const DTupFetchInputEventRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DTupFetchInputEventRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.DTupFetchInputEventRequest";
  }
  protected:
  explicit DTupFetchInputEventRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.DTupFetchInputEventRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class DTupFetchInputEventResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.DTupFetchInputEventResponse) */ {
 public:
  inline DTupFetchInputEventResponse() : DTupFetchInputEventResponse(nullptr) {}
  virtual ~DTupFetchInputEventResponse();
  explicit constexpr DTupFetchInputEventResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DTupFetchInputEventResponse(const DTupFetchInputEventResponse& from);
  DTupFetchInputEventResponse(DTupFetchInputEventResponse&& from) noexcept
    : DTupFetchInputEventResponse() {
    *this = ::std::move(from);
  }

  inline DTupFetchInputEventResponse& operator=(const DTupFetchInputEventResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DTupFetchInputEventResponse& operator=(DTupFetchInputEventResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DTupFetchInputEventResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DTupFetchInputEventResponse* internal_default_instance() {
    return reinterpret_cast<const DTupFetchInputEventResponse*>(
               &_DTupFetchInputEventResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(DTupFetchInputEventResponse& a, DTupFetchInputEventResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DTupFetchInputEventResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DTupFetchInputEventResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DTupFetchInputEventResponse* New() const final {
    return CreateMaybeMessage<DTupFetchInputEventResponse>(nullptr);
  }

  DTupFetchInputEventResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DTupFetchInputEventResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DTupFetchInputEventResponse& from);
  void MergeFrom(const DTupFetchInputEventResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DTupFetchInputEventResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.DTupFetchInputEventResponse";
  }
  protected:
  explicit DTupFetchInputEventResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSignatureFieldNumber = 3,
    kErrorCodeFieldNumber = 1,
    kEventFieldNumber = 2,
  };
  // bytes signature = 3;
  void clear_signature();
  const std::string& signature() const;
  void set_signature(const std::string& value);
  void set_signature(std::string&& value);
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  std::string* mutable_signature();
  std::string* release_signature();
  void set_allocated_signature(std::string* signature);
  private:
  const std::string& _internal_signature() const;
  void _internal_set_signature(const std::string& value);
  std::string* _internal_mutable_signature();
  public:

  // .nugget.app.keymaster.DTupError error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::DTupError error_code() const;
  void set_error_code(::nugget::app::keymaster::DTupError value);
  private:
  ::nugget::app::keymaster::DTupError _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::DTupError value);
  public:

  // .nugget.app.keymaster.DTupKeyEvent event = 2;
  void clear_event();
  ::nugget::app::keymaster::DTupKeyEvent event() const;
  void set_event(::nugget::app::keymaster::DTupKeyEvent value);
  private:
  ::nugget::app::keymaster::DTupKeyEvent _internal_event() const;
  void _internal_set_event(::nugget::app::keymaster::DTupKeyEvent value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.DTupFetchInputEventResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signature_;
  int error_code_;
  int event_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class SetSystemVersionInfoRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.SetSystemVersionInfoRequest) */ {
 public:
  inline SetSystemVersionInfoRequest() : SetSystemVersionInfoRequest(nullptr) {}
  virtual ~SetSystemVersionInfoRequest();
  explicit constexpr SetSystemVersionInfoRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetSystemVersionInfoRequest(const SetSystemVersionInfoRequest& from);
  SetSystemVersionInfoRequest(SetSystemVersionInfoRequest&& from) noexcept
    : SetSystemVersionInfoRequest() {
    *this = ::std::move(from);
  }

  inline SetSystemVersionInfoRequest& operator=(const SetSystemVersionInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSystemVersionInfoRequest& operator=(SetSystemVersionInfoRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetSystemVersionInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSystemVersionInfoRequest* internal_default_instance() {
    return reinterpret_cast<const SetSystemVersionInfoRequest*>(
               &_SetSystemVersionInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(SetSystemVersionInfoRequest& a, SetSystemVersionInfoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetSystemVersionInfoRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSystemVersionInfoRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetSystemVersionInfoRequest* New() const final {
    return CreateMaybeMessage<SetSystemVersionInfoRequest>(nullptr);
  }

  SetSystemVersionInfoRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetSystemVersionInfoRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetSystemVersionInfoRequest& from);
  void MergeFrom(const SetSystemVersionInfoRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetSystemVersionInfoRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.SetSystemVersionInfoRequest";
  }
  protected:
  explicit SetSystemVersionInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSystemVersionFieldNumber = 1,
    kSystemSecurityLevelFieldNumber = 2,
    kVendorSecurityLevelFieldNumber = 3,
  };
  // uint32 system_version = 1;
  void clear_system_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 system_version() const;
  void set_system_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_system_version() const;
  void _internal_set_system_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 system_security_level = 2;
  void clear_system_security_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 system_security_level() const;
  void set_system_security_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_system_security_level() const;
  void _internal_set_system_security_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 vendor_security_level = 3;
  void clear_vendor_security_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 vendor_security_level() const;
  void set_vendor_security_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_vendor_security_level() const;
  void _internal_set_vendor_security_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.SetSystemVersionInfoRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 system_version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 system_security_level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 vendor_security_level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class SetSystemVersionInfoResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.SetSystemVersionInfoResponse) */ {
 public:
  inline SetSystemVersionInfoResponse() : SetSystemVersionInfoResponse(nullptr) {}
  virtual ~SetSystemVersionInfoResponse();
  explicit constexpr SetSystemVersionInfoResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetSystemVersionInfoResponse(const SetSystemVersionInfoResponse& from);
  SetSystemVersionInfoResponse(SetSystemVersionInfoResponse&& from) noexcept
    : SetSystemVersionInfoResponse() {
    *this = ::std::move(from);
  }

  inline SetSystemVersionInfoResponse& operator=(const SetSystemVersionInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSystemVersionInfoResponse& operator=(SetSystemVersionInfoResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetSystemVersionInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSystemVersionInfoResponse* internal_default_instance() {
    return reinterpret_cast<const SetSystemVersionInfoResponse*>(
               &_SetSystemVersionInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(SetSystemVersionInfoResponse& a, SetSystemVersionInfoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetSystemVersionInfoResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSystemVersionInfoResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetSystemVersionInfoResponse* New() const final {
    return CreateMaybeMessage<SetSystemVersionInfoResponse>(nullptr);
  }

  SetSystemVersionInfoResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetSystemVersionInfoResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetSystemVersionInfoResponse& from);
  void MergeFrom(const SetSystemVersionInfoResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetSystemVersionInfoResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.SetSystemVersionInfoResponse";
  }
  protected:
  explicit SetSystemVersionInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.SetSystemVersionInfoResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class GetBootInfoRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.GetBootInfoRequest) */ {
 public:
  inline GetBootInfoRequest() : GetBootInfoRequest(nullptr) {}
  virtual ~GetBootInfoRequest();
  explicit constexpr GetBootInfoRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetBootInfoRequest(const GetBootInfoRequest& from);
  GetBootInfoRequest(GetBootInfoRequest&& from) noexcept
    : GetBootInfoRequest() {
    *this = ::std::move(from);
  }

  inline GetBootInfoRequest& operator=(const GetBootInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBootInfoRequest& operator=(GetBootInfoRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetBootInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBootInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetBootInfoRequest*>(
               &_GetBootInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(GetBootInfoRequest& a, GetBootInfoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetBootInfoRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBootInfoRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetBootInfoRequest* New() const final {
    return CreateMaybeMessage<GetBootInfoRequest>(nullptr);
  }

  GetBootInfoRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetBootInfoRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetBootInfoRequest& from);
  void MergeFrom(const GetBootInfoRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBootInfoRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.GetBootInfoRequest";
  }
  protected:
  explicit GetBootInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.GetBootInfoRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class GetBootInfoResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.GetBootInfoResponse) */ {
 public:
  inline GetBootInfoResponse() : GetBootInfoResponse(nullptr) {}
  virtual ~GetBootInfoResponse();
  explicit constexpr GetBootInfoResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetBootInfoResponse(const GetBootInfoResponse& from);
  GetBootInfoResponse(GetBootInfoResponse&& from) noexcept
    : GetBootInfoResponse() {
    *this = ::std::move(from);
  }

  inline GetBootInfoResponse& operator=(const GetBootInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBootInfoResponse& operator=(GetBootInfoResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetBootInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBootInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetBootInfoResponse*>(
               &_GetBootInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(GetBootInfoResponse& a, GetBootInfoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetBootInfoResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBootInfoResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetBootInfoResponse* New() const final {
    return CreateMaybeMessage<GetBootInfoResponse>(nullptr);
  }

  GetBootInfoResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetBootInfoResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetBootInfoResponse& from);
  void MergeFrom(const GetBootInfoResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBootInfoResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.GetBootInfoResponse";
  }
  protected:
  explicit GetBootInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBootKeyFieldNumber = 4,
    kBootHashFieldNumber = 5,
    kErrorCodeFieldNumber = 1,
    kIsUnlockedFieldNumber = 2,
    kBootColorFieldNumber = 3,
  };
  // bytes boot_key = 4;
  void clear_boot_key();
  const std::string& boot_key() const;
  void set_boot_key(const std::string& value);
  void set_boot_key(std::string&& value);
  void set_boot_key(const char* value);
  void set_boot_key(const void* value, size_t size);
  std::string* mutable_boot_key();
  std::string* release_boot_key();
  void set_allocated_boot_key(std::string* boot_key);
  private:
  const std::string& _internal_boot_key() const;
  void _internal_set_boot_key(const std::string& value);
  std::string* _internal_mutable_boot_key();
  public:

  // bytes boot_hash = 5;
  void clear_boot_hash();
  const std::string& boot_hash() const;
  void set_boot_hash(const std::string& value);
  void set_boot_hash(std::string&& value);
  void set_boot_hash(const char* value);
  void set_boot_hash(const void* value, size_t size);
  std::string* mutable_boot_hash();
  std::string* release_boot_hash();
  void set_allocated_boot_hash(std::string* boot_hash);
  private:
  const std::string& _internal_boot_hash() const;
  void _internal_set_boot_hash(const std::string& value);
  std::string* _internal_mutable_boot_hash();
  public:

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // bool is_unlocked = 2;
  void clear_is_unlocked();
  bool is_unlocked() const;
  void set_is_unlocked(bool value);
  private:
  bool _internal_is_unlocked() const;
  void _internal_set_is_unlocked(bool value);
  public:

  // .nugget.app.keymaster.BootColor boot_color = 3;
  void clear_boot_color();
  ::nugget::app::keymaster::BootColor boot_color() const;
  void set_boot_color(::nugget::app::keymaster::BootColor value);
  private:
  ::nugget::app::keymaster::BootColor _internal_boot_color() const;
  void _internal_set_boot_color(::nugget::app::keymaster::BootColor value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.GetBootInfoResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr boot_key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr boot_hash_;
  int error_code_;
  bool is_unlocked_;
  int boot_color_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class ProvisionPresharedSecretRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.ProvisionPresharedSecretRequest) */ {
 public:
  inline ProvisionPresharedSecretRequest() : ProvisionPresharedSecretRequest(nullptr) {}
  virtual ~ProvisionPresharedSecretRequest();
  explicit constexpr ProvisionPresharedSecretRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProvisionPresharedSecretRequest(const ProvisionPresharedSecretRequest& from);
  ProvisionPresharedSecretRequest(ProvisionPresharedSecretRequest&& from) noexcept
    : ProvisionPresharedSecretRequest() {
    *this = ::std::move(from);
  }

  inline ProvisionPresharedSecretRequest& operator=(const ProvisionPresharedSecretRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProvisionPresharedSecretRequest& operator=(ProvisionPresharedSecretRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProvisionPresharedSecretRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProvisionPresharedSecretRequest* internal_default_instance() {
    return reinterpret_cast<const ProvisionPresharedSecretRequest*>(
               &_ProvisionPresharedSecretRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(ProvisionPresharedSecretRequest& a, ProvisionPresharedSecretRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ProvisionPresharedSecretRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProvisionPresharedSecretRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProvisionPresharedSecretRequest* New() const final {
    return CreateMaybeMessage<ProvisionPresharedSecretRequest>(nullptr);
  }

  ProvisionPresharedSecretRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProvisionPresharedSecretRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProvisionPresharedSecretRequest& from);
  void MergeFrom(const ProvisionPresharedSecretRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProvisionPresharedSecretRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.ProvisionPresharedSecretRequest";
  }
  protected:
  explicit ProvisionPresharedSecretRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPresharedSecretFieldNumber = 1,
    kGetStatusFieldNumber = 2,
  };
  // bytes preshared_secret = 1;
  void clear_preshared_secret();
  const std::string& preshared_secret() const;
  void set_preshared_secret(const std::string& value);
  void set_preshared_secret(std::string&& value);
  void set_preshared_secret(const char* value);
  void set_preshared_secret(const void* value, size_t size);
  std::string* mutable_preshared_secret();
  std::string* release_preshared_secret();
  void set_allocated_preshared_secret(std::string* preshared_secret);
  private:
  const std::string& _internal_preshared_secret() const;
  void _internal_set_preshared_secret(const std::string& value);
  std::string* _internal_mutable_preshared_secret();
  public:

  // bool get_status = 2;
  void clear_get_status();
  bool get_status() const;
  void set_get_status(bool value);
  private:
  bool _internal_get_status() const;
  void _internal_set_get_status(bool value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.ProvisionPresharedSecretRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr preshared_secret_;
  bool get_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class ProvisionPresharedSecretResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.ProvisionPresharedSecretResponse) */ {
 public:
  inline ProvisionPresharedSecretResponse() : ProvisionPresharedSecretResponse(nullptr) {}
  virtual ~ProvisionPresharedSecretResponse();
  explicit constexpr ProvisionPresharedSecretResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProvisionPresharedSecretResponse(const ProvisionPresharedSecretResponse& from);
  ProvisionPresharedSecretResponse(ProvisionPresharedSecretResponse&& from) noexcept
    : ProvisionPresharedSecretResponse() {
    *this = ::std::move(from);
  }

  inline ProvisionPresharedSecretResponse& operator=(const ProvisionPresharedSecretResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProvisionPresharedSecretResponse& operator=(ProvisionPresharedSecretResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProvisionPresharedSecretResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProvisionPresharedSecretResponse* internal_default_instance() {
    return reinterpret_cast<const ProvisionPresharedSecretResponse*>(
               &_ProvisionPresharedSecretResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(ProvisionPresharedSecretResponse& a, ProvisionPresharedSecretResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ProvisionPresharedSecretResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProvisionPresharedSecretResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProvisionPresharedSecretResponse* New() const final {
    return CreateMaybeMessage<ProvisionPresharedSecretResponse>(nullptr);
  }

  ProvisionPresharedSecretResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProvisionPresharedSecretResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProvisionPresharedSecretResponse& from);
  void MergeFrom(const ProvisionPresharedSecretResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProvisionPresharedSecretResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.ProvisionPresharedSecretResponse";
  }
  protected:
  explicit ProvisionPresharedSecretResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDigestFieldNumber = 4,
    kErrorCodeFieldNumber = 1,
    kStatusFieldNumber = 2,
    kColorFieldNumber = 3,
  };
  // bytes digest = 4;
  void clear_digest();
  const std::string& digest() const;
  void set_digest(const std::string& value);
  void set_digest(std::string&& value);
  void set_digest(const char* value);
  void set_digest(const void* value, size_t size);
  std::string* mutable_digest();
  std::string* release_digest();
  void set_allocated_digest(std::string* digest);
  private:
  const std::string& _internal_digest() const;
  void _internal_set_digest(const std::string& value);
  std::string* _internal_mutable_digest();
  public:

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // .nugget.app.keymaster.PresharedSecretStatus status = 2;
  void clear_status();
  ::nugget::app::keymaster::PresharedSecretStatus status() const;
  void set_status(::nugget::app::keymaster::PresharedSecretStatus value);
  private:
  ::nugget::app::keymaster::PresharedSecretStatus _internal_status() const;
  void _internal_set_status(::nugget::app::keymaster::PresharedSecretStatus value);
  public:

  // .nugget.app.keymaster.BootColor color = 3;
  void clear_color();
  ::nugget::app::keymaster::BootColor color() const;
  void set_color(::nugget::app::keymaster::BootColor value);
  private:
  ::nugget::app::keymaster::BootColor _internal_color() const;
  void _internal_set_color(::nugget::app::keymaster::BootColor value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.ProvisionPresharedSecretResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr digest_;
  int error_code_;
  int status_;
  int color_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class ProvisionCertificatesRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.ProvisionCertificatesRequest) */ {
 public:
  inline ProvisionCertificatesRequest() : ProvisionCertificatesRequest(nullptr) {}
  virtual ~ProvisionCertificatesRequest();
  explicit constexpr ProvisionCertificatesRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProvisionCertificatesRequest(const ProvisionCertificatesRequest& from);
  ProvisionCertificatesRequest(ProvisionCertificatesRequest&& from) noexcept
    : ProvisionCertificatesRequest() {
    *this = ::std::move(from);
  }

  inline ProvisionCertificatesRequest& operator=(const ProvisionCertificatesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProvisionCertificatesRequest& operator=(ProvisionCertificatesRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProvisionCertificatesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProvisionCertificatesRequest* internal_default_instance() {
    return reinterpret_cast<const ProvisionCertificatesRequest*>(
               &_ProvisionCertificatesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(ProvisionCertificatesRequest& a, ProvisionCertificatesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ProvisionCertificatesRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProvisionCertificatesRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProvisionCertificatesRequest* New() const final {
    return CreateMaybeMessage<ProvisionCertificatesRequest>(nullptr);
  }

  ProvisionCertificatesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProvisionCertificatesRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProvisionCertificatesRequest& from);
  void MergeFrom(const ProvisionCertificatesRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProvisionCertificatesRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.ProvisionCertificatesRequest";
  }
  protected:
  explicit ProvisionCertificatesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCertBlockFieldNumber = 2,
    kDigestFieldNumber = 3,
    kBlockNumberFieldNumber = 1,
  };
  // bytes cert_block = 2;
  void clear_cert_block();
  const std::string& cert_block() const;
  void set_cert_block(const std::string& value);
  void set_cert_block(std::string&& value);
  void set_cert_block(const char* value);
  void set_cert_block(const void* value, size_t size);
  std::string* mutable_cert_block();
  std::string* release_cert_block();
  void set_allocated_cert_block(std::string* cert_block);
  private:
  const std::string& _internal_cert_block() const;
  void _internal_set_cert_block(const std::string& value);
  std::string* _internal_mutable_cert_block();
  public:

  // bytes digest = 3;
  void clear_digest();
  const std::string& digest() const;
  void set_digest(const std::string& value);
  void set_digest(std::string&& value);
  void set_digest(const char* value);
  void set_digest(const void* value, size_t size);
  std::string* mutable_digest();
  std::string* release_digest();
  void set_allocated_digest(std::string* digest);
  private:
  const std::string& _internal_digest() const;
  void _internal_set_digest(const std::string& value);
  std::string* _internal_mutable_digest();
  public:

  // uint32 block_number = 1;
  void clear_block_number();
  ::PROTOBUF_NAMESPACE_ID::uint32 block_number() const;
  void set_block_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_block_number() const;
  void _internal_set_block_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.ProvisionCertificatesRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cert_block_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr digest_;
  ::PROTOBUF_NAMESPACE_ID::uint32 block_number_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class ProvisionCertificatesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.ProvisionCertificatesResponse) */ {
 public:
  inline ProvisionCertificatesResponse() : ProvisionCertificatesResponse(nullptr) {}
  virtual ~ProvisionCertificatesResponse();
  explicit constexpr ProvisionCertificatesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProvisionCertificatesResponse(const ProvisionCertificatesResponse& from);
  ProvisionCertificatesResponse(ProvisionCertificatesResponse&& from) noexcept
    : ProvisionCertificatesResponse() {
    *this = ::std::move(from);
  }

  inline ProvisionCertificatesResponse& operator=(const ProvisionCertificatesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProvisionCertificatesResponse& operator=(ProvisionCertificatesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProvisionCertificatesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProvisionCertificatesResponse* internal_default_instance() {
    return reinterpret_cast<const ProvisionCertificatesResponse*>(
               &_ProvisionCertificatesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(ProvisionCertificatesResponse& a, ProvisionCertificatesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ProvisionCertificatesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProvisionCertificatesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProvisionCertificatesResponse* New() const final {
    return CreateMaybeMessage<ProvisionCertificatesResponse>(nullptr);
  }

  ProvisionCertificatesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProvisionCertificatesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProvisionCertificatesResponse& from);
  void MergeFrom(const ProvisionCertificatesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProvisionCertificatesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.ProvisionCertificatesResponse";
  }
  protected:
  explicit ProvisionCertificatesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorCodeFieldNumber = 1,
    kCertStatusFieldNumber = 2,
  };
  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // .nugget.app.keymaster.CertificateStatus cert_status = 2;
  void clear_cert_status();
  ::nugget::app::keymaster::CertificateStatus cert_status() const;
  void set_cert_status(::nugget::app::keymaster::CertificateStatus value);
  private:
  ::nugget::app::keymaster::CertificateStatus _internal_cert_status() const;
  void _internal_set_cert_status(::nugget::app::keymaster::CertificateStatus value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.ProvisionCertificatesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int error_code_;
  int cert_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class ReadCertificateRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.ReadCertificateRequest) */ {
 public:
  inline ReadCertificateRequest() : ReadCertificateRequest(nullptr) {}
  virtual ~ReadCertificateRequest();
  explicit constexpr ReadCertificateRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReadCertificateRequest(const ReadCertificateRequest& from);
  ReadCertificateRequest(ReadCertificateRequest&& from) noexcept
    : ReadCertificateRequest() {
    *this = ::std::move(from);
  }

  inline ReadCertificateRequest& operator=(const ReadCertificateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReadCertificateRequest& operator=(ReadCertificateRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ReadCertificateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReadCertificateRequest* internal_default_instance() {
    return reinterpret_cast<const ReadCertificateRequest*>(
               &_ReadCertificateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(ReadCertificateRequest& a, ReadCertificateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ReadCertificateRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReadCertificateRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ReadCertificateRequest* New() const final {
    return CreateMaybeMessage<ReadCertificateRequest>(nullptr);
  }

  ReadCertificateRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ReadCertificateRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ReadCertificateRequest& from);
  void MergeFrom(const ReadCertificateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadCertificateRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.ReadCertificateRequest";
  }
  protected:
  explicit ReadCertificateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSelectorFieldNumber = 1,
    kAlgorithmFieldNumber = 2,
  };
  // .nugget.app.keymaster.AttestationSelector selector = 1;
  void clear_selector();
  ::nugget::app::keymaster::AttestationSelector selector() const;
  void set_selector(::nugget::app::keymaster::AttestationSelector value);
  private:
  ::nugget::app::keymaster::AttestationSelector _internal_selector() const;
  void _internal_set_selector(::nugget::app::keymaster::AttestationSelector value);
  public:

  // .nugget.app.keymaster.Algorithm algorithm = 2;
  void clear_algorithm();
  ::nugget::app::keymaster::Algorithm algorithm() const;
  void set_algorithm(::nugget::app::keymaster::Algorithm value);
  private:
  ::nugget::app::keymaster::Algorithm _internal_algorithm() const;
  void _internal_set_algorithm(::nugget::app::keymaster::Algorithm value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.ReadCertificateRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int selector_;
  int algorithm_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class ReadCertificateResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.ReadCertificateResponse) */ {
 public:
  inline ReadCertificateResponse() : ReadCertificateResponse(nullptr) {}
  virtual ~ReadCertificateResponse();
  explicit constexpr ReadCertificateResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReadCertificateResponse(const ReadCertificateResponse& from);
  ReadCertificateResponse(ReadCertificateResponse&& from) noexcept
    : ReadCertificateResponse() {
    *this = ::std::move(from);
  }

  inline ReadCertificateResponse& operator=(const ReadCertificateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReadCertificateResponse& operator=(ReadCertificateResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ReadCertificateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReadCertificateResponse* internal_default_instance() {
    return reinterpret_cast<const ReadCertificateResponse*>(
               &_ReadCertificateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(ReadCertificateResponse& a, ReadCertificateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ReadCertificateResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReadCertificateResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ReadCertificateResponse* New() const final {
    return CreateMaybeMessage<ReadCertificateResponse>(nullptr);
  }

  ReadCertificateResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ReadCertificateResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ReadCertificateResponse& from);
  void MergeFrom(const ReadCertificateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadCertificateResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.ReadCertificateResponse";
  }
  protected:
  explicit ReadCertificateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCertFieldNumber = 2,
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.Certificate cert = 2;
  bool has_cert() const;
  private:
  bool _internal_has_cert() const;
  public:
  void clear_cert();
  const ::nugget::app::keymaster::Certificate& cert() const;
  ::nugget::app::keymaster::Certificate* release_cert();
  ::nugget::app::keymaster::Certificate* mutable_cert();
  void set_allocated_cert(::nugget::app::keymaster::Certificate* cert);
  private:
  const ::nugget::app::keymaster::Certificate& _internal_cert() const;
  ::nugget::app::keymaster::Certificate* _internal_mutable_cert();
  public:
  void unsafe_arena_set_allocated_cert(
      ::nugget::app::keymaster::Certificate* cert);
  ::nugget::app::keymaster::Certificate* unsafe_arena_release_cert();

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.ReadCertificateResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::Certificate* cert_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class VigoReadVSRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.VigoReadVSRequest) */ {
 public:
  inline VigoReadVSRequest() : VigoReadVSRequest(nullptr) {}
  virtual ~VigoReadVSRequest();
  explicit constexpr VigoReadVSRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VigoReadVSRequest(const VigoReadVSRequest& from);
  VigoReadVSRequest(VigoReadVSRequest&& from) noexcept
    : VigoReadVSRequest() {
    *this = ::std::move(from);
  }

  inline VigoReadVSRequest& operator=(const VigoReadVSRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline VigoReadVSRequest& operator=(VigoReadVSRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VigoReadVSRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const VigoReadVSRequest* internal_default_instance() {
    return reinterpret_cast<const VigoReadVSRequest*>(
               &_VigoReadVSRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(VigoReadVSRequest& a, VigoReadVSRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(VigoReadVSRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VigoReadVSRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VigoReadVSRequest* New() const final {
    return CreateMaybeMessage<VigoReadVSRequest>(nullptr);
  }

  VigoReadVSRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VigoReadVSRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VigoReadVSRequest& from);
  void MergeFrom(const VigoReadVSRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VigoReadVSRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.VigoReadVSRequest";
  }
  protected:
  explicit VigoReadVSRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.VigoReadVSRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class VigoReadVSResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.VigoReadVSResponse) */ {
 public:
  inline VigoReadVSResponse() : VigoReadVSResponse(nullptr) {}
  virtual ~VigoReadVSResponse();
  explicit constexpr VigoReadVSResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VigoReadVSResponse(const VigoReadVSResponse& from);
  VigoReadVSResponse(VigoReadVSResponse&& from) noexcept
    : VigoReadVSResponse() {
    *this = ::std::move(from);
  }

  inline VigoReadVSResponse& operator=(const VigoReadVSResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline VigoReadVSResponse& operator=(VigoReadVSResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VigoReadVSResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const VigoReadVSResponse* internal_default_instance() {
    return reinterpret_cast<const VigoReadVSResponse*>(
               &_VigoReadVSResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(VigoReadVSResponse& a, VigoReadVSResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(VigoReadVSResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VigoReadVSResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VigoReadVSResponse* New() const final {
    return CreateMaybeMessage<VigoReadVSResponse>(nullptr);
  }

  VigoReadVSResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VigoReadVSResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VigoReadVSResponse& from);
  void MergeFrom(const VigoReadVSResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VigoReadVSResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.VigoReadVSResponse";
  }
  protected:
  explicit VigoReadVSResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVsKeyFieldNumber = 2,
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.VigoKey vs_key = 2;
  bool has_vs_key() const;
  private:
  bool _internal_has_vs_key() const;
  public:
  void clear_vs_key();
  const ::nugget::app::keymaster::VigoKey& vs_key() const;
  ::nugget::app::keymaster::VigoKey* release_vs_key();
  ::nugget::app::keymaster::VigoKey* mutable_vs_key();
  void set_allocated_vs_key(::nugget::app::keymaster::VigoKey* vs_key);
  private:
  const ::nugget::app::keymaster::VigoKey& _internal_vs_key() const;
  ::nugget::app::keymaster::VigoKey* _internal_mutable_vs_key();
  public:
  void unsafe_arena_set_allocated_vs_key(
      ::nugget::app::keymaster::VigoKey* vs_key);
  ::nugget::app::keymaster::VigoKey* unsafe_arena_release_vs_key();

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.VigoReadVSResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::VigoKey* vs_key_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class VigoStartChannelRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.VigoStartChannelRequest) */ {
 public:
  inline VigoStartChannelRequest() : VigoStartChannelRequest(nullptr) {}
  virtual ~VigoStartChannelRequest();
  explicit constexpr VigoStartChannelRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VigoStartChannelRequest(const VigoStartChannelRequest& from);
  VigoStartChannelRequest(VigoStartChannelRequest&& from) noexcept
    : VigoStartChannelRequest() {
    *this = ::std::move(from);
  }

  inline VigoStartChannelRequest& operator=(const VigoStartChannelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline VigoStartChannelRequest& operator=(VigoStartChannelRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VigoStartChannelRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const VigoStartChannelRequest* internal_default_instance() {
    return reinterpret_cast<const VigoStartChannelRequest*>(
               &_VigoStartChannelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(VigoStartChannelRequest& a, VigoStartChannelRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(VigoStartChannelRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VigoStartChannelRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VigoStartChannelRequest* New() const final {
    return CreateMaybeMessage<VigoStartChannelRequest>(nullptr);
  }

  VigoStartChannelRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VigoStartChannelRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VigoStartChannelRequest& from);
  void MergeFrom(const VigoStartChannelRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VigoStartChannelRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.VigoStartChannelRequest";
  }
  protected:
  explicit VigoStartChannelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClientKeyFieldNumber = 1,
  };
  // .nugget.app.keymaster.VigoKey client_key = 1;
  bool has_client_key() const;
  private:
  bool _internal_has_client_key() const;
  public:
  void clear_client_key();
  const ::nugget::app::keymaster::VigoKey& client_key() const;
  ::nugget::app::keymaster::VigoKey* release_client_key();
  ::nugget::app::keymaster::VigoKey* mutable_client_key();
  void set_allocated_client_key(::nugget::app::keymaster::VigoKey* client_key);
  private:
  const ::nugget::app::keymaster::VigoKey& _internal_client_key() const;
  ::nugget::app::keymaster::VigoKey* _internal_mutable_client_key();
  public:
  void unsafe_arena_set_allocated_client_key(
      ::nugget::app::keymaster::VigoKey* client_key);
  ::nugget::app::keymaster::VigoKey* unsafe_arena_release_client_key();

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.VigoStartChannelRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::VigoKey* client_key_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class VigoStartChannelResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.VigoStartChannelResponse) */ {
 public:
  inline VigoStartChannelResponse() : VigoStartChannelResponse(nullptr) {}
  virtual ~VigoStartChannelResponse();
  explicit constexpr VigoStartChannelResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VigoStartChannelResponse(const VigoStartChannelResponse& from);
  VigoStartChannelResponse(VigoStartChannelResponse&& from) noexcept
    : VigoStartChannelResponse() {
    *this = ::std::move(from);
  }

  inline VigoStartChannelResponse& operator=(const VigoStartChannelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline VigoStartChannelResponse& operator=(VigoStartChannelResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VigoStartChannelResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const VigoStartChannelResponse* internal_default_instance() {
    return reinterpret_cast<const VigoStartChannelResponse*>(
               &_VigoStartChannelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(VigoStartChannelResponse& a, VigoStartChannelResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(VigoStartChannelResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VigoStartChannelResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VigoStartChannelResponse* New() const final {
    return CreateMaybeMessage<VigoStartChannelResponse>(nullptr);
  }

  VigoStartChannelResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VigoStartChannelResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VigoStartChannelResponse& from);
  void MergeFrom(const VigoStartChannelResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VigoStartChannelResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.VigoStartChannelResponse";
  }
  protected:
  explicit VigoStartChannelResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerKeyFieldNumber = 2,
    kChannelSignatureFieldNumber = 3,
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.VigoKey server_key = 2;
  bool has_server_key() const;
  private:
  bool _internal_has_server_key() const;
  public:
  void clear_server_key();
  const ::nugget::app::keymaster::VigoKey& server_key() const;
  ::nugget::app::keymaster::VigoKey* release_server_key();
  ::nugget::app::keymaster::VigoKey* mutable_server_key();
  void set_allocated_server_key(::nugget::app::keymaster::VigoKey* server_key);
  private:
  const ::nugget::app::keymaster::VigoKey& _internal_server_key() const;
  ::nugget::app::keymaster::VigoKey* _internal_mutable_server_key();
  public:
  void unsafe_arena_set_allocated_server_key(
      ::nugget::app::keymaster::VigoKey* server_key);
  ::nugget::app::keymaster::VigoKey* unsafe_arena_release_server_key();

  // .nugget.app.keymaster.VigoSignature channel_signature = 3;
  bool has_channel_signature() const;
  private:
  bool _internal_has_channel_signature() const;
  public:
  void clear_channel_signature();
  const ::nugget::app::keymaster::VigoSignature& channel_signature() const;
  ::nugget::app::keymaster::VigoSignature* release_channel_signature();
  ::nugget::app::keymaster::VigoSignature* mutable_channel_signature();
  void set_allocated_channel_signature(::nugget::app::keymaster::VigoSignature* channel_signature);
  private:
  const ::nugget::app::keymaster::VigoSignature& _internal_channel_signature() const;
  ::nugget::app::keymaster::VigoSignature* _internal_mutable_channel_signature();
  public:
  void unsafe_arena_set_allocated_channel_signature(
      ::nugget::app::keymaster::VigoSignature* channel_signature);
  ::nugget::app::keymaster::VigoSignature* unsafe_arena_release_channel_signature();

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.VigoStartChannelResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::VigoKey* server_key_;
  ::nugget::app::keymaster::VigoSignature* channel_signature_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class VigoStoreSecretRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.VigoStoreSecretRequest) */ {
 public:
  inline VigoStoreSecretRequest() : VigoStoreSecretRequest(nullptr) {}
  virtual ~VigoStoreSecretRequest();
  explicit constexpr VigoStoreSecretRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VigoStoreSecretRequest(const VigoStoreSecretRequest& from);
  VigoStoreSecretRequest(VigoStoreSecretRequest&& from) noexcept
    : VigoStoreSecretRequest() {
    *this = ::std::move(from);
  }

  inline VigoStoreSecretRequest& operator=(const VigoStoreSecretRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline VigoStoreSecretRequest& operator=(VigoStoreSecretRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VigoStoreSecretRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const VigoStoreSecretRequest* internal_default_instance() {
    return reinterpret_cast<const VigoStoreSecretRequest*>(
               &_VigoStoreSecretRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(VigoStoreSecretRequest& a, VigoStoreSecretRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(VigoStoreSecretRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VigoStoreSecretRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VigoStoreSecretRequest* New() const final {
    return CreateMaybeMessage<VigoStoreSecretRequest>(nullptr);
  }

  VigoStoreSecretRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VigoStoreSecretRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VigoStoreSecretRequest& from);
  void MergeFrom(const VigoStoreSecretRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VigoStoreSecretRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.VigoStoreSecretRequest";
  }
  protected:
  explicit VigoStoreSecretRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRsKeyFieldNumber = 1,
    kSecretEncryptedFieldNumber = 2,
  };
  // .nugget.app.keymaster.VigoKey rs_key = 1;
  bool has_rs_key() const;
  private:
  bool _internal_has_rs_key() const;
  public:
  void clear_rs_key();
  const ::nugget::app::keymaster::VigoKey& rs_key() const;
  ::nugget::app::keymaster::VigoKey* release_rs_key();
  ::nugget::app::keymaster::VigoKey* mutable_rs_key();
  void set_allocated_rs_key(::nugget::app::keymaster::VigoKey* rs_key);
  private:
  const ::nugget::app::keymaster::VigoKey& _internal_rs_key() const;
  ::nugget::app::keymaster::VigoKey* _internal_mutable_rs_key();
  public:
  void unsafe_arena_set_allocated_rs_key(
      ::nugget::app::keymaster::VigoKey* rs_key);
  ::nugget::app::keymaster::VigoKey* unsafe_arena_release_rs_key();

  // .nugget.app.keymaster.VigoSecret secret_encrypted = 2;
  bool has_secret_encrypted() const;
  private:
  bool _internal_has_secret_encrypted() const;
  public:
  void clear_secret_encrypted();
  const ::nugget::app::keymaster::VigoSecret& secret_encrypted() const;
  ::nugget::app::keymaster::VigoSecret* release_secret_encrypted();
  ::nugget::app::keymaster::VigoSecret* mutable_secret_encrypted();
  void set_allocated_secret_encrypted(::nugget::app::keymaster::VigoSecret* secret_encrypted);
  private:
  const ::nugget::app::keymaster::VigoSecret& _internal_secret_encrypted() const;
  ::nugget::app::keymaster::VigoSecret* _internal_mutable_secret_encrypted();
  public:
  void unsafe_arena_set_allocated_secret_encrypted(
      ::nugget::app::keymaster::VigoSecret* secret_encrypted);
  ::nugget::app::keymaster::VigoSecret* unsafe_arena_release_secret_encrypted();

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.VigoStoreSecretRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::VigoKey* rs_key_;
  ::nugget::app::keymaster::VigoSecret* secret_encrypted_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class VigoStoreSecretResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.VigoStoreSecretResponse) */ {
 public:
  inline VigoStoreSecretResponse() : VigoStoreSecretResponse(nullptr) {}
  virtual ~VigoStoreSecretResponse();
  explicit constexpr VigoStoreSecretResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VigoStoreSecretResponse(const VigoStoreSecretResponse& from);
  VigoStoreSecretResponse(VigoStoreSecretResponse&& from) noexcept
    : VigoStoreSecretResponse() {
    *this = ::std::move(from);
  }

  inline VigoStoreSecretResponse& operator=(const VigoStoreSecretResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline VigoStoreSecretResponse& operator=(VigoStoreSecretResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VigoStoreSecretResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const VigoStoreSecretResponse* internal_default_instance() {
    return reinterpret_cast<const VigoStoreSecretResponse*>(
               &_VigoStoreSecretResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(VigoStoreSecretResponse& a, VigoStoreSecretResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(VigoStoreSecretResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VigoStoreSecretResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VigoStoreSecretResponse* New() const final {
    return CreateMaybeMessage<VigoStoreSecretResponse>(nullptr);
  }

  VigoStoreSecretResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VigoStoreSecretResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VigoStoreSecretResponse& from);
  void MergeFrom(const VigoStoreSecretResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VigoStoreSecretResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.VigoStoreSecretResponse";
  }
  protected:
  explicit VigoStoreSecretResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.VigoStoreSecretResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class VigoReleaseSecretRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.VigoReleaseSecretRequest) */ {
 public:
  inline VigoReleaseSecretRequest() : VigoReleaseSecretRequest(nullptr) {}
  virtual ~VigoReleaseSecretRequest();
  explicit constexpr VigoReleaseSecretRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VigoReleaseSecretRequest(const VigoReleaseSecretRequest& from);
  VigoReleaseSecretRequest(VigoReleaseSecretRequest&& from) noexcept
    : VigoReleaseSecretRequest() {
    *this = ::std::move(from);
  }

  inline VigoReleaseSecretRequest& operator=(const VigoReleaseSecretRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline VigoReleaseSecretRequest& operator=(VigoReleaseSecretRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VigoReleaseSecretRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const VigoReleaseSecretRequest* internal_default_instance() {
    return reinterpret_cast<const VigoReleaseSecretRequest*>(
               &_VigoReleaseSecretRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(VigoReleaseSecretRequest& a, VigoReleaseSecretRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(VigoReleaseSecretRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VigoReleaseSecretRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VigoReleaseSecretRequest* New() const final {
    return CreateMaybeMessage<VigoReleaseSecretRequest>(nullptr);
  }

  VigoReleaseSecretRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VigoReleaseSecretRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VigoReleaseSecretRequest& from);
  void MergeFrom(const VigoReleaseSecretRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VigoReleaseSecretRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.VigoReleaseSecretRequest";
  }
  protected:
  explicit VigoReleaseSecretRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRsSignatureFieldNumber = 1,
  };
  // .nugget.app.keymaster.VigoSignature rs_signature = 1;
  bool has_rs_signature() const;
  private:
  bool _internal_has_rs_signature() const;
  public:
  void clear_rs_signature();
  const ::nugget::app::keymaster::VigoSignature& rs_signature() const;
  ::nugget::app::keymaster::VigoSignature* release_rs_signature();
  ::nugget::app::keymaster::VigoSignature* mutable_rs_signature();
  void set_allocated_rs_signature(::nugget::app::keymaster::VigoSignature* rs_signature);
  private:
  const ::nugget::app::keymaster::VigoSignature& _internal_rs_signature() const;
  ::nugget::app::keymaster::VigoSignature* _internal_mutable_rs_signature();
  public:
  void unsafe_arena_set_allocated_rs_signature(
      ::nugget::app::keymaster::VigoSignature* rs_signature);
  ::nugget::app::keymaster::VigoSignature* unsafe_arena_release_rs_signature();

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.VigoReleaseSecretRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::VigoSignature* rs_signature_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class VigoReleaseSecretResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.VigoReleaseSecretResponse) */ {
 public:
  inline VigoReleaseSecretResponse() : VigoReleaseSecretResponse(nullptr) {}
  virtual ~VigoReleaseSecretResponse();
  explicit constexpr VigoReleaseSecretResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VigoReleaseSecretResponse(const VigoReleaseSecretResponse& from);
  VigoReleaseSecretResponse(VigoReleaseSecretResponse&& from) noexcept
    : VigoReleaseSecretResponse() {
    *this = ::std::move(from);
  }

  inline VigoReleaseSecretResponse& operator=(const VigoReleaseSecretResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline VigoReleaseSecretResponse& operator=(VigoReleaseSecretResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VigoReleaseSecretResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const VigoReleaseSecretResponse* internal_default_instance() {
    return reinterpret_cast<const VigoReleaseSecretResponse*>(
               &_VigoReleaseSecretResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(VigoReleaseSecretResponse& a, VigoReleaseSecretResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(VigoReleaseSecretResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VigoReleaseSecretResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VigoReleaseSecretResponse* New() const final {
    return CreateMaybeMessage<VigoReleaseSecretResponse>(nullptr);
  }

  VigoReleaseSecretResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VigoReleaseSecretResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VigoReleaseSecretResponse& from);
  void MergeFrom(const VigoReleaseSecretResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VigoReleaseSecretResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.VigoReleaseSecretResponse";
  }
  protected:
  explicit VigoReleaseSecretResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSecretEncryptedFieldNumber = 2,
    kErrorCodeFieldNumber = 1,
  };
  // .nugget.app.keymaster.VigoSecret secret_encrypted = 2;
  bool has_secret_encrypted() const;
  private:
  bool _internal_has_secret_encrypted() const;
  public:
  void clear_secret_encrypted();
  const ::nugget::app::keymaster::VigoSecret& secret_encrypted() const;
  ::nugget::app::keymaster::VigoSecret* release_secret_encrypted();
  ::nugget::app::keymaster::VigoSecret* mutable_secret_encrypted();
  void set_allocated_secret_encrypted(::nugget::app::keymaster::VigoSecret* secret_encrypted);
  private:
  const ::nugget::app::keymaster::VigoSecret& _internal_secret_encrypted() const;
  ::nugget::app::keymaster::VigoSecret* _internal_mutable_secret_encrypted();
  public:
  void unsafe_arena_set_allocated_secret_encrypted(
      ::nugget::app::keymaster::VigoSecret* secret_encrypted);
  ::nugget::app::keymaster::VigoSecret* unsafe_arena_release_secret_encrypted();

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.VigoReleaseSecretResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::VigoSecret* secret_encrypted_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class IdentityStartAttestKeyRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.IdentityStartAttestKeyRequest) */ {
 public:
  inline IdentityStartAttestKeyRequest() : IdentityStartAttestKeyRequest(nullptr) {}
  virtual ~IdentityStartAttestKeyRequest();
  explicit constexpr IdentityStartAttestKeyRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IdentityStartAttestKeyRequest(const IdentityStartAttestKeyRequest& from);
  IdentityStartAttestKeyRequest(IdentityStartAttestKeyRequest&& from) noexcept
    : IdentityStartAttestKeyRequest() {
    *this = ::std::move(from);
  }

  inline IdentityStartAttestKeyRequest& operator=(const IdentityStartAttestKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline IdentityStartAttestKeyRequest& operator=(IdentityStartAttestKeyRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IdentityStartAttestKeyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const IdentityStartAttestKeyRequest* internal_default_instance() {
    return reinterpret_cast<const IdentityStartAttestKeyRequest*>(
               &_IdentityStartAttestKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  friend void swap(IdentityStartAttestKeyRequest& a, IdentityStartAttestKeyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(IdentityStartAttestKeyRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IdentityStartAttestKeyRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IdentityStartAttestKeyRequest* New() const final {
    return CreateMaybeMessage<IdentityStartAttestKeyRequest>(nullptr);
  }

  IdentityStartAttestKeyRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IdentityStartAttestKeyRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IdentityStartAttestKeyRequest& from);
  void MergeFrom(const IdentityStartAttestKeyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IdentityStartAttestKeyRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.IdentityStartAttestKeyRequest";
  }
  protected:
  explicit IdentityStartAttestKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPubkeyFieldNumber = 1,
    kNotBeforeFieldNumber = 5,
    kNotAfterFieldNumber = 6,
    kParamsFieldNumber = 2,
    kAttestationAppIdLenFieldNumber = 3,
    kSelectorFieldNumber = 4,
    kCreationTimeMsFieldNumber = 7,
    kUseKmAttestKeyFieldNumber = 8,
  };
  // bytes pubkey = 1;
  void clear_pubkey();
  const std::string& pubkey() const;
  void set_pubkey(const std::string& value);
  void set_pubkey(std::string&& value);
  void set_pubkey(const char* value);
  void set_pubkey(const void* value, size_t size);
  std::string* mutable_pubkey();
  std::string* release_pubkey();
  void set_allocated_pubkey(std::string* pubkey);
  private:
  const std::string& _internal_pubkey() const;
  void _internal_set_pubkey(const std::string& value);
  std::string* _internal_mutable_pubkey();
  public:

  // bytes not_before = 5;
  void clear_not_before();
  const std::string& not_before() const;
  void set_not_before(const std::string& value);
  void set_not_before(std::string&& value);
  void set_not_before(const char* value);
  void set_not_before(const void* value, size_t size);
  std::string* mutable_not_before();
  std::string* release_not_before();
  void set_allocated_not_before(std::string* not_before);
  private:
  const std::string& _internal_not_before() const;
  void _internal_set_not_before(const std::string& value);
  std::string* _internal_mutable_not_before();
  public:

  // bytes not_after = 6;
  void clear_not_after();
  const std::string& not_after() const;
  void set_not_after(const std::string& value);
  void set_not_after(std::string&& value);
  void set_not_after(const char* value);
  void set_not_after(const void* value, size_t size);
  std::string* mutable_not_after();
  std::string* release_not_after();
  void set_allocated_not_after(std::string* not_after);
  private:
  const std::string& _internal_not_after() const;
  void _internal_set_not_after(const std::string& value);
  std::string* _internal_mutable_not_after();
  public:

  // .nugget.app.keymaster.KeyParameters params = 2;
  bool has_params() const;
  private:
  bool _internal_has_params() const;
  public:
  void clear_params();
  const ::nugget::app::keymaster::KeyParameters& params() const;
  ::nugget::app::keymaster::KeyParameters* release_params();
  ::nugget::app::keymaster::KeyParameters* mutable_params();
  void set_allocated_params(::nugget::app::keymaster::KeyParameters* params);
  private:
  const ::nugget::app::keymaster::KeyParameters& _internal_params() const;
  ::nugget::app::keymaster::KeyParameters* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::nugget::app::keymaster::KeyParameters* params);
  ::nugget::app::keymaster::KeyParameters* unsafe_arena_release_params();

  // uint32 attestation_app_id_len = 3;
  void clear_attestation_app_id_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 attestation_app_id_len() const;
  void set_attestation_app_id_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_attestation_app_id_len() const;
  void _internal_set_attestation_app_id_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .nugget.app.keymaster.AttestationSelector selector = 4;
  void clear_selector();
  ::nugget::app::keymaster::AttestationSelector selector() const;
  void set_selector(::nugget::app::keymaster::AttestationSelector value);
  private:
  ::nugget::app::keymaster::AttestationSelector _internal_selector() const;
  void _internal_set_selector(::nugget::app::keymaster::AttestationSelector value);
  public:

  // uint64 creation_time_ms = 7;
  void clear_creation_time_ms();
  ::PROTOBUF_NAMESPACE_ID::uint64 creation_time_ms() const;
  void set_creation_time_ms(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_creation_time_ms() const;
  void _internal_set_creation_time_ms(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // bool use_km_attest_key = 8;
  void clear_use_km_attest_key();
  bool use_km_attest_key() const;
  void set_use_km_attest_key(bool value);
  private:
  bool _internal_use_km_attest_key() const;
  void _internal_set_use_km_attest_key(bool value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.IdentityStartAttestKeyRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pubkey_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr not_before_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr not_after_;
  ::nugget::app::keymaster::KeyParameters* params_;
  ::PROTOBUF_NAMESPACE_ID::uint32 attestation_app_id_len_;
  int selector_;
  ::PROTOBUF_NAMESPACE_ID::uint64 creation_time_ms_;
  bool use_km_attest_key_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class IdentityStartAttestKeyResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.IdentityStartAttestKeyResponse) */ {
 public:
  inline IdentityStartAttestKeyResponse() : IdentityStartAttestKeyResponse(nullptr) {}
  virtual ~IdentityStartAttestKeyResponse();
  explicit constexpr IdentityStartAttestKeyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IdentityStartAttestKeyResponse(const IdentityStartAttestKeyResponse& from);
  IdentityStartAttestKeyResponse(IdentityStartAttestKeyResponse&& from) noexcept
    : IdentityStartAttestKeyResponse() {
    *this = ::std::move(from);
  }

  inline IdentityStartAttestKeyResponse& operator=(const IdentityStartAttestKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline IdentityStartAttestKeyResponse& operator=(IdentityStartAttestKeyResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IdentityStartAttestKeyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const IdentityStartAttestKeyResponse* internal_default_instance() {
    return reinterpret_cast<const IdentityStartAttestKeyResponse*>(
               &_IdentityStartAttestKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  friend void swap(IdentityStartAttestKeyResponse& a, IdentityStartAttestKeyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(IdentityStartAttestKeyResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IdentityStartAttestKeyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IdentityStartAttestKeyResponse* New() const final {
    return CreateMaybeMessage<IdentityStartAttestKeyResponse>(nullptr);
  }

  IdentityStartAttestKeyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IdentityStartAttestKeyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IdentityStartAttestKeyResponse& from);
  void MergeFrom(const IdentityStartAttestKeyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IdentityStartAttestKeyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.IdentityStartAttestKeyResponse";
  }
  protected:
  explicit IdentityStartAttestKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCertificatePrologueFieldNumber = 3,
    kHandleFieldNumber = 2,
    kErrorCodeFieldNumber = 1,
  };
  // bytes certificate_prologue = 3;
  void clear_certificate_prologue();
  const std::string& certificate_prologue() const;
  void set_certificate_prologue(const std::string& value);
  void set_certificate_prologue(std::string&& value);
  void set_certificate_prologue(const char* value);
  void set_certificate_prologue(const void* value, size_t size);
  std::string* mutable_certificate_prologue();
  std::string* release_certificate_prologue();
  void set_allocated_certificate_prologue(std::string* certificate_prologue);
  private:
  const std::string& _internal_certificate_prologue() const;
  void _internal_set_certificate_prologue(const std::string& value);
  std::string* _internal_mutable_certificate_prologue();
  public:

  // .nugget.app.keymaster.OperationHandle handle = 2;
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  const ::nugget::app::keymaster::OperationHandle& handle() const;
  ::nugget::app::keymaster::OperationHandle* release_handle();
  ::nugget::app::keymaster::OperationHandle* mutable_handle();
  void set_allocated_handle(::nugget::app::keymaster::OperationHandle* handle);
  private:
  const ::nugget::app::keymaster::OperationHandle& _internal_handle() const;
  ::nugget::app::keymaster::OperationHandle* _internal_mutable_handle();
  public:
  void unsafe_arena_set_allocated_handle(
      ::nugget::app::keymaster::OperationHandle* handle);
  ::nugget::app::keymaster::OperationHandle* unsafe_arena_release_handle();

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.IdentityStartAttestKeyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr certificate_prologue_;
  ::nugget::app::keymaster::OperationHandle* handle_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class IdentityFinishAttestKeyRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.IdentityFinishAttestKeyRequest) */ {
 public:
  inline IdentityFinishAttestKeyRequest() : IdentityFinishAttestKeyRequest(nullptr) {}
  virtual ~IdentityFinishAttestKeyRequest();
  explicit constexpr IdentityFinishAttestKeyRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IdentityFinishAttestKeyRequest(const IdentityFinishAttestKeyRequest& from);
  IdentityFinishAttestKeyRequest(IdentityFinishAttestKeyRequest&& from) noexcept
    : IdentityFinishAttestKeyRequest() {
    *this = ::std::move(from);
  }

  inline IdentityFinishAttestKeyRequest& operator=(const IdentityFinishAttestKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline IdentityFinishAttestKeyRequest& operator=(IdentityFinishAttestKeyRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IdentityFinishAttestKeyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const IdentityFinishAttestKeyRequest* internal_default_instance() {
    return reinterpret_cast<const IdentityFinishAttestKeyRequest*>(
               &_IdentityFinishAttestKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  friend void swap(IdentityFinishAttestKeyRequest& a, IdentityFinishAttestKeyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(IdentityFinishAttestKeyRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IdentityFinishAttestKeyRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IdentityFinishAttestKeyRequest* New() const final {
    return CreateMaybeMessage<IdentityFinishAttestKeyRequest>(nullptr);
  }

  IdentityFinishAttestKeyRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IdentityFinishAttestKeyRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IdentityFinishAttestKeyRequest& from);
  void MergeFrom(const IdentityFinishAttestKeyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IdentityFinishAttestKeyRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.IdentityFinishAttestKeyRequest";
  }
  protected:
  explicit IdentityFinishAttestKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHandleFieldNumber = 1,
    kUseKmAttestKeyFieldNumber = 2,
  };
  // .nugget.app.keymaster.OperationHandle handle = 1;
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  const ::nugget::app::keymaster::OperationHandle& handle() const;
  ::nugget::app::keymaster::OperationHandle* release_handle();
  ::nugget::app::keymaster::OperationHandle* mutable_handle();
  void set_allocated_handle(::nugget::app::keymaster::OperationHandle* handle);
  private:
  const ::nugget::app::keymaster::OperationHandle& _internal_handle() const;
  ::nugget::app::keymaster::OperationHandle* _internal_mutable_handle();
  public:
  void unsafe_arena_set_allocated_handle(
      ::nugget::app::keymaster::OperationHandle* handle);
  ::nugget::app::keymaster::OperationHandle* unsafe_arena_release_handle();

  // bool use_km_attest_key = 2;
  void clear_use_km_attest_key();
  bool use_km_attest_key() const;
  void set_use_km_attest_key(bool value);
  private:
  bool _internal_use_km_attest_key() const;
  void _internal_set_use_km_attest_key(bool value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.IdentityFinishAttestKeyRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::keymaster::OperationHandle* handle_;
  bool use_km_attest_key_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class IdentityFinishAttestKeyResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.IdentityFinishAttestKeyResponse) */ {
 public:
  inline IdentityFinishAttestKeyResponse() : IdentityFinishAttestKeyResponse(nullptr) {}
  virtual ~IdentityFinishAttestKeyResponse();
  explicit constexpr IdentityFinishAttestKeyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IdentityFinishAttestKeyResponse(const IdentityFinishAttestKeyResponse& from);
  IdentityFinishAttestKeyResponse(IdentityFinishAttestKeyResponse&& from) noexcept
    : IdentityFinishAttestKeyResponse() {
    *this = ::std::move(from);
  }

  inline IdentityFinishAttestKeyResponse& operator=(const IdentityFinishAttestKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline IdentityFinishAttestKeyResponse& operator=(IdentityFinishAttestKeyResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IdentityFinishAttestKeyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const IdentityFinishAttestKeyResponse* internal_default_instance() {
    return reinterpret_cast<const IdentityFinishAttestKeyResponse*>(
               &_IdentityFinishAttestKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  friend void swap(IdentityFinishAttestKeyResponse& a, IdentityFinishAttestKeyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(IdentityFinishAttestKeyResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IdentityFinishAttestKeyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IdentityFinishAttestKeyResponse* New() const final {
    return CreateMaybeMessage<IdentityFinishAttestKeyResponse>(nullptr);
  }

  IdentityFinishAttestKeyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IdentityFinishAttestKeyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IdentityFinishAttestKeyResponse& from);
  void MergeFrom(const IdentityFinishAttestKeyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IdentityFinishAttestKeyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.IdentityFinishAttestKeyResponse";
  }
  protected:
  explicit IdentityFinishAttestKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCertificateEpilogueFieldNumber = 2,
    kErrorCodeFieldNumber = 1,
    kChipFusingFieldNumber = 3,
    kNodelockedRoFieldNumber = 4,
  };
  // bytes certificate_epilogue = 2;
  void clear_certificate_epilogue();
  const std::string& certificate_epilogue() const;
  void set_certificate_epilogue(const std::string& value);
  void set_certificate_epilogue(std::string&& value);
  void set_certificate_epilogue(const char* value);
  void set_certificate_epilogue(const void* value, size_t size);
  std::string* mutable_certificate_epilogue();
  std::string* release_certificate_epilogue();
  void set_allocated_certificate_epilogue(std::string* certificate_epilogue);
  private:
  const std::string& _internal_certificate_epilogue() const;
  void _internal_set_certificate_epilogue(const std::string& value);
  std::string* _internal_mutable_certificate_epilogue();
  public:

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // .nugget.app.keymaster.ChipFusing chip_fusing = 3;
  void clear_chip_fusing();
  ::nugget::app::keymaster::ChipFusing chip_fusing() const;
  void set_chip_fusing(::nugget::app::keymaster::ChipFusing value);
  private:
  ::nugget::app::keymaster::ChipFusing _internal_chip_fusing() const;
  void _internal_set_chip_fusing(::nugget::app::keymaster::ChipFusing value);
  public:

  // bool nodelocked_ro = 4;
  void clear_nodelocked_ro();
  bool nodelocked_ro() const;
  void set_nodelocked_ro(bool value);
  private:
  bool _internal_nodelocked_ro() const;
  void _internal_set_nodelocked_ro(bool value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.IdentityFinishAttestKeyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr certificate_epilogue_;
  int error_code_;
  int chip_fusing_;
  bool nodelocked_ro_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class GetPerFactoryResetValueRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.GetPerFactoryResetValueRequest) */ {
 public:
  inline GetPerFactoryResetValueRequest() : GetPerFactoryResetValueRequest(nullptr) {}
  virtual ~GetPerFactoryResetValueRequest();
  explicit constexpr GetPerFactoryResetValueRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetPerFactoryResetValueRequest(const GetPerFactoryResetValueRequest& from);
  GetPerFactoryResetValueRequest(GetPerFactoryResetValueRequest&& from) noexcept
    : GetPerFactoryResetValueRequest() {
    *this = ::std::move(from);
  }

  inline GetPerFactoryResetValueRequest& operator=(const GetPerFactoryResetValueRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPerFactoryResetValueRequest& operator=(GetPerFactoryResetValueRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetPerFactoryResetValueRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPerFactoryResetValueRequest* internal_default_instance() {
    return reinterpret_cast<const GetPerFactoryResetValueRequest*>(
               &_GetPerFactoryResetValueRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  friend void swap(GetPerFactoryResetValueRequest& a, GetPerFactoryResetValueRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPerFactoryResetValueRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPerFactoryResetValueRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetPerFactoryResetValueRequest* New() const final {
    return CreateMaybeMessage<GetPerFactoryResetValueRequest>(nullptr);
  }

  GetPerFactoryResetValueRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetPerFactoryResetValueRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetPerFactoryResetValueRequest& from);
  void MergeFrom(const GetPerFactoryResetValueRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPerFactoryResetValueRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.GetPerFactoryResetValueRequest";
  }
  protected:
  explicit GetPerFactoryResetValueRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInputFieldNumber = 2,
    kBootloaderOnlyFieldNumber = 1,
  };
  // bytes input = 2;
  void clear_input();
  const std::string& input() const;
  void set_input(const std::string& value);
  void set_input(std::string&& value);
  void set_input(const char* value);
  void set_input(const void* value, size_t size);
  std::string* mutable_input();
  std::string* release_input();
  void set_allocated_input(std::string* input);
  private:
  const std::string& _internal_input() const;
  void _internal_set_input(const std::string& value);
  std::string* _internal_mutable_input();
  public:

  // bool bootloader_only = 1;
  void clear_bootloader_only();
  bool bootloader_only() const;
  void set_bootloader_only(bool value);
  private:
  bool _internal_bootloader_only() const;
  void _internal_set_bootloader_only(bool value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.GetPerFactoryResetValueRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr input_;
  bool bootloader_only_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// -------------------------------------------------------------------

class GetPerFactoryResetValueResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.keymaster.GetPerFactoryResetValueResponse) */ {
 public:
  inline GetPerFactoryResetValueResponse() : GetPerFactoryResetValueResponse(nullptr) {}
  virtual ~GetPerFactoryResetValueResponse();
  explicit constexpr GetPerFactoryResetValueResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetPerFactoryResetValueResponse(const GetPerFactoryResetValueResponse& from);
  GetPerFactoryResetValueResponse(GetPerFactoryResetValueResponse&& from) noexcept
    : GetPerFactoryResetValueResponse() {
    *this = ::std::move(from);
  }

  inline GetPerFactoryResetValueResponse& operator=(const GetPerFactoryResetValueResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPerFactoryResetValueResponse& operator=(GetPerFactoryResetValueResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetPerFactoryResetValueResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPerFactoryResetValueResponse* internal_default_instance() {
    return reinterpret_cast<const GetPerFactoryResetValueResponse*>(
               &_GetPerFactoryResetValueResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  friend void swap(GetPerFactoryResetValueResponse& a, GetPerFactoryResetValueResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPerFactoryResetValueResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPerFactoryResetValueResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetPerFactoryResetValueResponse* New() const final {
    return CreateMaybeMessage<GetPerFactoryResetValueResponse>(nullptr);
  }

  GetPerFactoryResetValueResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetPerFactoryResetValueResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetPerFactoryResetValueResponse& from);
  void MergeFrom(const GetPerFactoryResetValueResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPerFactoryResetValueResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.keymaster.GetPerFactoryResetValueResponse";
  }
  protected:
  explicit GetPerFactoryResetValueResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOutputFieldNumber = 2,
    kErrorCodeFieldNumber = 1,
  };
  // bytes output = 2;
  void clear_output();
  const std::string& output() const;
  void set_output(const std::string& value);
  void set_output(std::string&& value);
  void set_output(const char* value);
  void set_output(const void* value, size_t size);
  std::string* mutable_output();
  std::string* release_output();
  void set_allocated_output(std::string* output);
  private:
  const std::string& _internal_output() const;
  void _internal_set_output(const std::string& value);
  std::string* _internal_mutable_output();
  public:

  // .nugget.app.keymaster.ErrorCode error_code = 1;
  void clear_error_code();
  ::nugget::app::keymaster::ErrorCode error_code() const;
  void set_error_code(::nugget::app::keymaster::ErrorCode value);
  private:
  ::nugget::app::keymaster::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::nugget::app::keymaster::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.keymaster.GetPerFactoryResetValueResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr output_;
  int error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AddRngEntropyRequest

// bytes data = 1;
inline void AddRngEntropyRequest::clear_data() {
  data_.ClearToEmpty();
}
inline const std::string& AddRngEntropyRequest::data() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.AddRngEntropyRequest.data)
  return _internal_data();
}
inline void AddRngEntropyRequest::set_data(const std::string& value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.AddRngEntropyRequest.data)
}
inline std::string* AddRngEntropyRequest::mutable_data() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.AddRngEntropyRequest.data)
  return _internal_mutable_data();
}
inline const std::string& AddRngEntropyRequest::_internal_data() const {
  return data_.Get();
}
inline void AddRngEntropyRequest::_internal_set_data(const std::string& value) {
  
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AddRngEntropyRequest::set_data(std::string&& value) {
  
  data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.AddRngEntropyRequest.data)
}
inline void AddRngEntropyRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.AddRngEntropyRequest.data)
}
inline void AddRngEntropyRequest::set_data(const void* value,
    size_t size) {
  
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.AddRngEntropyRequest.data)
}
inline std::string* AddRngEntropyRequest::_internal_mutable_data() {
  
  return data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AddRngEntropyRequest::release_data() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.AddRngEntropyRequest.data)
  return data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AddRngEntropyRequest::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.AddRngEntropyRequest.data)
}

// -------------------------------------------------------------------

// AddRngEntropyResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void AddRngEntropyResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode AddRngEntropyResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode AddRngEntropyResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.AddRngEntropyResponse.error_code)
  return _internal_error_code();
}
inline void AddRngEntropyResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void AddRngEntropyResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.AddRngEntropyResponse.error_code)
}

// -------------------------------------------------------------------

// GenerateKeyRequest

// .nugget.app.keymaster.KeyParameters params = 1;
inline bool GenerateKeyRequest::_internal_has_params() const {
  return this != internal_default_instance() && params_ != nullptr;
}
inline bool GenerateKeyRequest::has_params() const {
  return _internal_has_params();
}
inline const ::nugget::app::keymaster::KeyParameters& GenerateKeyRequest::_internal_params() const {
  const ::nugget::app::keymaster::KeyParameters* p = params_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyParameters&>(
      ::nugget::app::keymaster::_KeyParameters_default_instance_);
}
inline const ::nugget::app::keymaster::KeyParameters& GenerateKeyRequest::params() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GenerateKeyRequest.params)
  return _internal_params();
}
inline void GenerateKeyRequest::unsafe_arena_set_allocated_params(
    ::nugget::app::keymaster::KeyParameters* params) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  params_ = params;
  if (params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.GenerateKeyRequest.params)
}
inline ::nugget::app::keymaster::KeyParameters* GenerateKeyRequest::release_params() {
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* GenerateKeyRequest::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.GenerateKeyRequest.params)
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* GenerateKeyRequest::_internal_mutable_params() {
  
  if (params_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyParameters>(GetArena());
    params_ = p;
  }
  return params_;
}
inline ::nugget::app::keymaster::KeyParameters* GenerateKeyRequest::mutable_params() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.GenerateKeyRequest.params)
  return _internal_mutable_params();
}
inline void GenerateKeyRequest::set_allocated_params(::nugget::app::keymaster::KeyParameters* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params)->GetArena();
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    
  } else {
    
  }
  params_ = params;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.GenerateKeyRequest.params)
}

// uint64 creation_time_ms = 2;
inline void GenerateKeyRequest::clear_creation_time_ms() {
  creation_time_ms_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GenerateKeyRequest::_internal_creation_time_ms() const {
  return creation_time_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GenerateKeyRequest::creation_time_ms() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GenerateKeyRequest.creation_time_ms)
  return _internal_creation_time_ms();
}
inline void GenerateKeyRequest::_internal_set_creation_time_ms(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  creation_time_ms_ = value;
}
inline void GenerateKeyRequest::set_creation_time_ms(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_creation_time_ms(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.GenerateKeyRequest.creation_time_ms)
}

// -------------------------------------------------------------------

// GenerateKeyResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void GenerateKeyResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode GenerateKeyResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode GenerateKeyResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GenerateKeyResponse.error_code)
  return _internal_error_code();
}
inline void GenerateKeyResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void GenerateKeyResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.GenerateKeyResponse.error_code)
}

// .nugget.app.keymaster.KeyBlob blob = 2;
inline bool GenerateKeyResponse::_internal_has_blob() const {
  return this != internal_default_instance() && blob_ != nullptr;
}
inline bool GenerateKeyResponse::has_blob() const {
  return _internal_has_blob();
}
inline const ::nugget::app::keymaster::KeyBlob& GenerateKeyResponse::_internal_blob() const {
  const ::nugget::app::keymaster::KeyBlob* p = blob_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyBlob&>(
      ::nugget::app::keymaster::_KeyBlob_default_instance_);
}
inline const ::nugget::app::keymaster::KeyBlob& GenerateKeyResponse::blob() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GenerateKeyResponse.blob)
  return _internal_blob();
}
inline void GenerateKeyResponse::unsafe_arena_set_allocated_blob(
    ::nugget::app::keymaster::KeyBlob* blob) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob_);
  }
  blob_ = blob;
  if (blob) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.GenerateKeyResponse.blob)
}
inline ::nugget::app::keymaster::KeyBlob* GenerateKeyResponse::release_blob() {
  
  ::nugget::app::keymaster::KeyBlob* temp = blob_;
  blob_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* GenerateKeyResponse::unsafe_arena_release_blob() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.GenerateKeyResponse.blob)
  
  ::nugget::app::keymaster::KeyBlob* temp = blob_;
  blob_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* GenerateKeyResponse::_internal_mutable_blob() {
  
  if (blob_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyBlob>(GetArena());
    blob_ = p;
  }
  return blob_;
}
inline ::nugget::app::keymaster::KeyBlob* GenerateKeyResponse::mutable_blob() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.GenerateKeyResponse.blob)
  return _internal_mutable_blob();
}
inline void GenerateKeyResponse::set_allocated_blob(::nugget::app::keymaster::KeyBlob* blob) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob_);
  }
  if (blob) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob)->GetArena();
    if (message_arena != submessage_arena) {
      blob = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blob, submessage_arena);
    }
    
  } else {
    
  }
  blob_ = blob;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.GenerateKeyResponse.blob)
}

// .nugget.app.keymaster.KeyCharacteristics characteristics = 3;
inline bool GenerateKeyResponse::_internal_has_characteristics() const {
  return this != internal_default_instance() && characteristics_ != nullptr;
}
inline bool GenerateKeyResponse::has_characteristics() const {
  return _internal_has_characteristics();
}
inline const ::nugget::app::keymaster::KeyCharacteristics& GenerateKeyResponse::_internal_characteristics() const {
  const ::nugget::app::keymaster::KeyCharacteristics* p = characteristics_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyCharacteristics&>(
      ::nugget::app::keymaster::_KeyCharacteristics_default_instance_);
}
inline const ::nugget::app::keymaster::KeyCharacteristics& GenerateKeyResponse::characteristics() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GenerateKeyResponse.characteristics)
  return _internal_characteristics();
}
inline void GenerateKeyResponse::unsafe_arena_set_allocated_characteristics(
    ::nugget::app::keymaster::KeyCharacteristics* characteristics) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(characteristics_);
  }
  characteristics_ = characteristics;
  if (characteristics) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.GenerateKeyResponse.characteristics)
}
inline ::nugget::app::keymaster::KeyCharacteristics* GenerateKeyResponse::release_characteristics() {
  
  ::nugget::app::keymaster::KeyCharacteristics* temp = characteristics_;
  characteristics_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyCharacteristics* GenerateKeyResponse::unsafe_arena_release_characteristics() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.GenerateKeyResponse.characteristics)
  
  ::nugget::app::keymaster::KeyCharacteristics* temp = characteristics_;
  characteristics_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyCharacteristics* GenerateKeyResponse::_internal_mutable_characteristics() {
  
  if (characteristics_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyCharacteristics>(GetArena());
    characteristics_ = p;
  }
  return characteristics_;
}
inline ::nugget::app::keymaster::KeyCharacteristics* GenerateKeyResponse::mutable_characteristics() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.GenerateKeyResponse.characteristics)
  return _internal_mutable_characteristics();
}
inline void GenerateKeyResponse::set_allocated_characteristics(::nugget::app::keymaster::KeyCharacteristics* characteristics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(characteristics_);
  }
  if (characteristics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(characteristics)->GetArena();
    if (message_arena != submessage_arena) {
      characteristics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, characteristics, submessage_arena);
    }
    
  } else {
    
  }
  characteristics_ = characteristics;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.GenerateKeyResponse.characteristics)
}

// -------------------------------------------------------------------

// GetKeyCharacteristicsRequest

// .nugget.app.keymaster.KeyBlob blob = 1;
inline bool GetKeyCharacteristicsRequest::_internal_has_blob() const {
  return this != internal_default_instance() && blob_ != nullptr;
}
inline bool GetKeyCharacteristicsRequest::has_blob() const {
  return _internal_has_blob();
}
inline const ::nugget::app::keymaster::KeyBlob& GetKeyCharacteristicsRequest::_internal_blob() const {
  const ::nugget::app::keymaster::KeyBlob* p = blob_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyBlob&>(
      ::nugget::app::keymaster::_KeyBlob_default_instance_);
}
inline const ::nugget::app::keymaster::KeyBlob& GetKeyCharacteristicsRequest::blob() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GetKeyCharacteristicsRequest.blob)
  return _internal_blob();
}
inline void GetKeyCharacteristicsRequest::unsafe_arena_set_allocated_blob(
    ::nugget::app::keymaster::KeyBlob* blob) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob_);
  }
  blob_ = blob;
  if (blob) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.GetKeyCharacteristicsRequest.blob)
}
inline ::nugget::app::keymaster::KeyBlob* GetKeyCharacteristicsRequest::release_blob() {
  
  ::nugget::app::keymaster::KeyBlob* temp = blob_;
  blob_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* GetKeyCharacteristicsRequest::unsafe_arena_release_blob() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.GetKeyCharacteristicsRequest.blob)
  
  ::nugget::app::keymaster::KeyBlob* temp = blob_;
  blob_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* GetKeyCharacteristicsRequest::_internal_mutable_blob() {
  
  if (blob_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyBlob>(GetArena());
    blob_ = p;
  }
  return blob_;
}
inline ::nugget::app::keymaster::KeyBlob* GetKeyCharacteristicsRequest::mutable_blob() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.GetKeyCharacteristicsRequest.blob)
  return _internal_mutable_blob();
}
inline void GetKeyCharacteristicsRequest::set_allocated_blob(::nugget::app::keymaster::KeyBlob* blob) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob_);
  }
  if (blob) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob)->GetArena();
    if (message_arena != submessage_arena) {
      blob = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blob, submessage_arena);
    }
    
  } else {
    
  }
  blob_ = blob;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.GetKeyCharacteristicsRequest.blob)
}

// bytes client_id = 2;
inline void GetKeyCharacteristicsRequest::clear_client_id() {
  client_id_.ClearToEmpty();
}
inline const std::string& GetKeyCharacteristicsRequest::client_id() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GetKeyCharacteristicsRequest.client_id)
  return _internal_client_id();
}
inline void GetKeyCharacteristicsRequest::set_client_id(const std::string& value) {
  _internal_set_client_id(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.GetKeyCharacteristicsRequest.client_id)
}
inline std::string* GetKeyCharacteristicsRequest::mutable_client_id() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.GetKeyCharacteristicsRequest.client_id)
  return _internal_mutable_client_id();
}
inline const std::string& GetKeyCharacteristicsRequest::_internal_client_id() const {
  return client_id_.Get();
}
inline void GetKeyCharacteristicsRequest::_internal_set_client_id(const std::string& value) {
  
  client_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetKeyCharacteristicsRequest::set_client_id(std::string&& value) {
  
  client_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.GetKeyCharacteristicsRequest.client_id)
}
inline void GetKeyCharacteristicsRequest::set_client_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  client_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.GetKeyCharacteristicsRequest.client_id)
}
inline void GetKeyCharacteristicsRequest::set_client_id(const void* value,
    size_t size) {
  
  client_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.GetKeyCharacteristicsRequest.client_id)
}
inline std::string* GetKeyCharacteristicsRequest::_internal_mutable_client_id() {
  
  return client_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetKeyCharacteristicsRequest::release_client_id() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.GetKeyCharacteristicsRequest.client_id)
  return client_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetKeyCharacteristicsRequest::set_allocated_client_id(std::string* client_id) {
  if (client_id != nullptr) {
    
  } else {
    
  }
  client_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), client_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.GetKeyCharacteristicsRequest.client_id)
}

// bytes app_data = 3;
inline void GetKeyCharacteristicsRequest::clear_app_data() {
  app_data_.ClearToEmpty();
}
inline const std::string& GetKeyCharacteristicsRequest::app_data() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GetKeyCharacteristicsRequest.app_data)
  return _internal_app_data();
}
inline void GetKeyCharacteristicsRequest::set_app_data(const std::string& value) {
  _internal_set_app_data(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.GetKeyCharacteristicsRequest.app_data)
}
inline std::string* GetKeyCharacteristicsRequest::mutable_app_data() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.GetKeyCharacteristicsRequest.app_data)
  return _internal_mutable_app_data();
}
inline const std::string& GetKeyCharacteristicsRequest::_internal_app_data() const {
  return app_data_.Get();
}
inline void GetKeyCharacteristicsRequest::_internal_set_app_data(const std::string& value) {
  
  app_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetKeyCharacteristicsRequest::set_app_data(std::string&& value) {
  
  app_data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.GetKeyCharacteristicsRequest.app_data)
}
inline void GetKeyCharacteristicsRequest::set_app_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  app_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.GetKeyCharacteristicsRequest.app_data)
}
inline void GetKeyCharacteristicsRequest::set_app_data(const void* value,
    size_t size) {
  
  app_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.GetKeyCharacteristicsRequest.app_data)
}
inline std::string* GetKeyCharacteristicsRequest::_internal_mutable_app_data() {
  
  return app_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetKeyCharacteristicsRequest::release_app_data() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.GetKeyCharacteristicsRequest.app_data)
  return app_data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetKeyCharacteristicsRequest::set_allocated_app_data(std::string* app_data) {
  if (app_data != nullptr) {
    
  } else {
    
  }
  app_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), app_data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.GetKeyCharacteristicsRequest.app_data)
}

// -------------------------------------------------------------------

// GetKeyCharacteristicsResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void GetKeyCharacteristicsResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode GetKeyCharacteristicsResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode GetKeyCharacteristicsResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GetKeyCharacteristicsResponse.error_code)
  return _internal_error_code();
}
inline void GetKeyCharacteristicsResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void GetKeyCharacteristicsResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.GetKeyCharacteristicsResponse.error_code)
}

// .nugget.app.keymaster.KeyCharacteristics characteristics = 2;
inline bool GetKeyCharacteristicsResponse::_internal_has_characteristics() const {
  return this != internal_default_instance() && characteristics_ != nullptr;
}
inline bool GetKeyCharacteristicsResponse::has_characteristics() const {
  return _internal_has_characteristics();
}
inline const ::nugget::app::keymaster::KeyCharacteristics& GetKeyCharacteristicsResponse::_internal_characteristics() const {
  const ::nugget::app::keymaster::KeyCharacteristics* p = characteristics_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyCharacteristics&>(
      ::nugget::app::keymaster::_KeyCharacteristics_default_instance_);
}
inline const ::nugget::app::keymaster::KeyCharacteristics& GetKeyCharacteristicsResponse::characteristics() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GetKeyCharacteristicsResponse.characteristics)
  return _internal_characteristics();
}
inline void GetKeyCharacteristicsResponse::unsafe_arena_set_allocated_characteristics(
    ::nugget::app::keymaster::KeyCharacteristics* characteristics) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(characteristics_);
  }
  characteristics_ = characteristics;
  if (characteristics) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.GetKeyCharacteristicsResponse.characteristics)
}
inline ::nugget::app::keymaster::KeyCharacteristics* GetKeyCharacteristicsResponse::release_characteristics() {
  
  ::nugget::app::keymaster::KeyCharacteristics* temp = characteristics_;
  characteristics_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyCharacteristics* GetKeyCharacteristicsResponse::unsafe_arena_release_characteristics() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.GetKeyCharacteristicsResponse.characteristics)
  
  ::nugget::app::keymaster::KeyCharacteristics* temp = characteristics_;
  characteristics_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyCharacteristics* GetKeyCharacteristicsResponse::_internal_mutable_characteristics() {
  
  if (characteristics_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyCharacteristics>(GetArena());
    characteristics_ = p;
  }
  return characteristics_;
}
inline ::nugget::app::keymaster::KeyCharacteristics* GetKeyCharacteristicsResponse::mutable_characteristics() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.GetKeyCharacteristicsResponse.characteristics)
  return _internal_mutable_characteristics();
}
inline void GetKeyCharacteristicsResponse::set_allocated_characteristics(::nugget::app::keymaster::KeyCharacteristics* characteristics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(characteristics_);
  }
  if (characteristics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(characteristics)->GetArena();
    if (message_arena != submessage_arena) {
      characteristics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, characteristics, submessage_arena);
    }
    
  } else {
    
  }
  characteristics_ = characteristics;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.GetKeyCharacteristicsResponse.characteristics)
}

// -------------------------------------------------------------------

// ImportKeyRequest

// .nugget.app.keymaster.KeyParameters params = 1;
inline bool ImportKeyRequest::_internal_has_params() const {
  return this != internal_default_instance() && params_ != nullptr;
}
inline bool ImportKeyRequest::has_params() const {
  return _internal_has_params();
}
inline const ::nugget::app::keymaster::KeyParameters& ImportKeyRequest::_internal_params() const {
  const ::nugget::app::keymaster::KeyParameters* p = params_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyParameters&>(
      ::nugget::app::keymaster::_KeyParameters_default_instance_);
}
inline const ::nugget::app::keymaster::KeyParameters& ImportKeyRequest::params() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ImportKeyRequest.params)
  return _internal_params();
}
inline void ImportKeyRequest::unsafe_arena_set_allocated_params(
    ::nugget::app::keymaster::KeyParameters* params) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  params_ = params;
  if (params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.ImportKeyRequest.params)
}
inline ::nugget::app::keymaster::KeyParameters* ImportKeyRequest::release_params() {
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* ImportKeyRequest::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ImportKeyRequest.params)
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* ImportKeyRequest::_internal_mutable_params() {
  
  if (params_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyParameters>(GetArena());
    params_ = p;
  }
  return params_;
}
inline ::nugget::app::keymaster::KeyParameters* ImportKeyRequest::mutable_params() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ImportKeyRequest.params)
  return _internal_mutable_params();
}
inline void ImportKeyRequest::set_allocated_params(::nugget::app::keymaster::KeyParameters* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params)->GetArena();
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    
  } else {
    
  }
  params_ = params;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ImportKeyRequest.params)
}

// .nugget.app.keymaster.RSAKey rsa = 2;
inline bool ImportKeyRequest::_internal_has_rsa() const {
  return this != internal_default_instance() && rsa_ != nullptr;
}
inline bool ImportKeyRequest::has_rsa() const {
  return _internal_has_rsa();
}
inline const ::nugget::app::keymaster::RSAKey& ImportKeyRequest::_internal_rsa() const {
  const ::nugget::app::keymaster::RSAKey* p = rsa_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::RSAKey&>(
      ::nugget::app::keymaster::_RSAKey_default_instance_);
}
inline const ::nugget::app::keymaster::RSAKey& ImportKeyRequest::rsa() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ImportKeyRequest.rsa)
  return _internal_rsa();
}
inline void ImportKeyRequest::unsafe_arena_set_allocated_rsa(
    ::nugget::app::keymaster::RSAKey* rsa) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsa_);
  }
  rsa_ = rsa;
  if (rsa) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.ImportKeyRequest.rsa)
}
inline ::nugget::app::keymaster::RSAKey* ImportKeyRequest::release_rsa() {
  
  ::nugget::app::keymaster::RSAKey* temp = rsa_;
  rsa_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::RSAKey* ImportKeyRequest::unsafe_arena_release_rsa() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ImportKeyRequest.rsa)
  
  ::nugget::app::keymaster::RSAKey* temp = rsa_;
  rsa_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::RSAKey* ImportKeyRequest::_internal_mutable_rsa() {
  
  if (rsa_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::RSAKey>(GetArena());
    rsa_ = p;
  }
  return rsa_;
}
inline ::nugget::app::keymaster::RSAKey* ImportKeyRequest::mutable_rsa() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ImportKeyRequest.rsa)
  return _internal_mutable_rsa();
}
inline void ImportKeyRequest::set_allocated_rsa(::nugget::app::keymaster::RSAKey* rsa) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsa_);
  }
  if (rsa) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsa)->GetArena();
    if (message_arena != submessage_arena) {
      rsa = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsa, submessage_arena);
    }
    
  } else {
    
  }
  rsa_ = rsa;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ImportKeyRequest.rsa)
}

// .nugget.app.keymaster.ECKey ec = 3;
inline bool ImportKeyRequest::_internal_has_ec() const {
  return this != internal_default_instance() && ec_ != nullptr;
}
inline bool ImportKeyRequest::has_ec() const {
  return _internal_has_ec();
}
inline const ::nugget::app::keymaster::ECKey& ImportKeyRequest::_internal_ec() const {
  const ::nugget::app::keymaster::ECKey* p = ec_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::ECKey&>(
      ::nugget::app::keymaster::_ECKey_default_instance_);
}
inline const ::nugget::app::keymaster::ECKey& ImportKeyRequest::ec() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ImportKeyRequest.ec)
  return _internal_ec();
}
inline void ImportKeyRequest::unsafe_arena_set_allocated_ec(
    ::nugget::app::keymaster::ECKey* ec) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ec_);
  }
  ec_ = ec;
  if (ec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.ImportKeyRequest.ec)
}
inline ::nugget::app::keymaster::ECKey* ImportKeyRequest::release_ec() {
  
  ::nugget::app::keymaster::ECKey* temp = ec_;
  ec_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::ECKey* ImportKeyRequest::unsafe_arena_release_ec() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ImportKeyRequest.ec)
  
  ::nugget::app::keymaster::ECKey* temp = ec_;
  ec_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::ECKey* ImportKeyRequest::_internal_mutable_ec() {
  
  if (ec_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::ECKey>(GetArena());
    ec_ = p;
  }
  return ec_;
}
inline ::nugget::app::keymaster::ECKey* ImportKeyRequest::mutable_ec() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ImportKeyRequest.ec)
  return _internal_mutable_ec();
}
inline void ImportKeyRequest::set_allocated_ec(::nugget::app::keymaster::ECKey* ec) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ec_);
  }
  if (ec) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ec)->GetArena();
    if (message_arena != submessage_arena) {
      ec = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ec, submessage_arena);
    }
    
  } else {
    
  }
  ec_ = ec;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ImportKeyRequest.ec)
}

// .nugget.app.keymaster.SymmetricKey symmetric_key = 4;
inline bool ImportKeyRequest::_internal_has_symmetric_key() const {
  return this != internal_default_instance() && symmetric_key_ != nullptr;
}
inline bool ImportKeyRequest::has_symmetric_key() const {
  return _internal_has_symmetric_key();
}
inline const ::nugget::app::keymaster::SymmetricKey& ImportKeyRequest::_internal_symmetric_key() const {
  const ::nugget::app::keymaster::SymmetricKey* p = symmetric_key_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::SymmetricKey&>(
      ::nugget::app::keymaster::_SymmetricKey_default_instance_);
}
inline const ::nugget::app::keymaster::SymmetricKey& ImportKeyRequest::symmetric_key() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ImportKeyRequest.symmetric_key)
  return _internal_symmetric_key();
}
inline void ImportKeyRequest::unsafe_arena_set_allocated_symmetric_key(
    ::nugget::app::keymaster::SymmetricKey* symmetric_key) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(symmetric_key_);
  }
  symmetric_key_ = symmetric_key;
  if (symmetric_key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.ImportKeyRequest.symmetric_key)
}
inline ::nugget::app::keymaster::SymmetricKey* ImportKeyRequest::release_symmetric_key() {
  
  ::nugget::app::keymaster::SymmetricKey* temp = symmetric_key_;
  symmetric_key_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::SymmetricKey* ImportKeyRequest::unsafe_arena_release_symmetric_key() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ImportKeyRequest.symmetric_key)
  
  ::nugget::app::keymaster::SymmetricKey* temp = symmetric_key_;
  symmetric_key_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::SymmetricKey* ImportKeyRequest::_internal_mutable_symmetric_key() {
  
  if (symmetric_key_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::SymmetricKey>(GetArena());
    symmetric_key_ = p;
  }
  return symmetric_key_;
}
inline ::nugget::app::keymaster::SymmetricKey* ImportKeyRequest::mutable_symmetric_key() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ImportKeyRequest.symmetric_key)
  return _internal_mutable_symmetric_key();
}
inline void ImportKeyRequest::set_allocated_symmetric_key(::nugget::app::keymaster::SymmetricKey* symmetric_key) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(symmetric_key_);
  }
  if (symmetric_key) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(symmetric_key)->GetArena();
    if (message_arena != submessage_arena) {
      symmetric_key = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, symmetric_key, submessage_arena);
    }
    
  } else {
    
  }
  symmetric_key_ = symmetric_key;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ImportKeyRequest.symmetric_key)
}

// uint64 creation_time_ms = 5;
inline void ImportKeyRequest::clear_creation_time_ms() {
  creation_time_ms_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ImportKeyRequest::_internal_creation_time_ms() const {
  return creation_time_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ImportKeyRequest::creation_time_ms() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ImportKeyRequest.creation_time_ms)
  return _internal_creation_time_ms();
}
inline void ImportKeyRequest::_internal_set_creation_time_ms(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  creation_time_ms_ = value;
}
inline void ImportKeyRequest::set_creation_time_ms(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_creation_time_ms(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ImportKeyRequest.creation_time_ms)
}

// -------------------------------------------------------------------

// ImportKeyResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void ImportKeyResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode ImportKeyResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode ImportKeyResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ImportKeyResponse.error_code)
  return _internal_error_code();
}
inline void ImportKeyResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void ImportKeyResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ImportKeyResponse.error_code)
}

// .nugget.app.keymaster.KeyBlob blob = 2;
inline bool ImportKeyResponse::_internal_has_blob() const {
  return this != internal_default_instance() && blob_ != nullptr;
}
inline bool ImportKeyResponse::has_blob() const {
  return _internal_has_blob();
}
inline const ::nugget::app::keymaster::KeyBlob& ImportKeyResponse::_internal_blob() const {
  const ::nugget::app::keymaster::KeyBlob* p = blob_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyBlob&>(
      ::nugget::app::keymaster::_KeyBlob_default_instance_);
}
inline const ::nugget::app::keymaster::KeyBlob& ImportKeyResponse::blob() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ImportKeyResponse.blob)
  return _internal_blob();
}
inline void ImportKeyResponse::unsafe_arena_set_allocated_blob(
    ::nugget::app::keymaster::KeyBlob* blob) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob_);
  }
  blob_ = blob;
  if (blob) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.ImportKeyResponse.blob)
}
inline ::nugget::app::keymaster::KeyBlob* ImportKeyResponse::release_blob() {
  
  ::nugget::app::keymaster::KeyBlob* temp = blob_;
  blob_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* ImportKeyResponse::unsafe_arena_release_blob() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ImportKeyResponse.blob)
  
  ::nugget::app::keymaster::KeyBlob* temp = blob_;
  blob_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* ImportKeyResponse::_internal_mutable_blob() {
  
  if (blob_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyBlob>(GetArena());
    blob_ = p;
  }
  return blob_;
}
inline ::nugget::app::keymaster::KeyBlob* ImportKeyResponse::mutable_blob() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ImportKeyResponse.blob)
  return _internal_mutable_blob();
}
inline void ImportKeyResponse::set_allocated_blob(::nugget::app::keymaster::KeyBlob* blob) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob_);
  }
  if (blob) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob)->GetArena();
    if (message_arena != submessage_arena) {
      blob = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blob, submessage_arena);
    }
    
  } else {
    
  }
  blob_ = blob;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ImportKeyResponse.blob)
}

// .nugget.app.keymaster.KeyCharacteristics characteristics = 3;
inline bool ImportKeyResponse::_internal_has_characteristics() const {
  return this != internal_default_instance() && characteristics_ != nullptr;
}
inline bool ImportKeyResponse::has_characteristics() const {
  return _internal_has_characteristics();
}
inline const ::nugget::app::keymaster::KeyCharacteristics& ImportKeyResponse::_internal_characteristics() const {
  const ::nugget::app::keymaster::KeyCharacteristics* p = characteristics_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyCharacteristics&>(
      ::nugget::app::keymaster::_KeyCharacteristics_default_instance_);
}
inline const ::nugget::app::keymaster::KeyCharacteristics& ImportKeyResponse::characteristics() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ImportKeyResponse.characteristics)
  return _internal_characteristics();
}
inline void ImportKeyResponse::unsafe_arena_set_allocated_characteristics(
    ::nugget::app::keymaster::KeyCharacteristics* characteristics) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(characteristics_);
  }
  characteristics_ = characteristics;
  if (characteristics) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.ImportKeyResponse.characteristics)
}
inline ::nugget::app::keymaster::KeyCharacteristics* ImportKeyResponse::release_characteristics() {
  
  ::nugget::app::keymaster::KeyCharacteristics* temp = characteristics_;
  characteristics_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyCharacteristics* ImportKeyResponse::unsafe_arena_release_characteristics() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ImportKeyResponse.characteristics)
  
  ::nugget::app::keymaster::KeyCharacteristics* temp = characteristics_;
  characteristics_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyCharacteristics* ImportKeyResponse::_internal_mutable_characteristics() {
  
  if (characteristics_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyCharacteristics>(GetArena());
    characteristics_ = p;
  }
  return characteristics_;
}
inline ::nugget::app::keymaster::KeyCharacteristics* ImportKeyResponse::mutable_characteristics() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ImportKeyResponse.characteristics)
  return _internal_mutable_characteristics();
}
inline void ImportKeyResponse::set_allocated_characteristics(::nugget::app::keymaster::KeyCharacteristics* characteristics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(characteristics_);
  }
  if (characteristics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(characteristics)->GetArena();
    if (message_arena != submessage_arena) {
      characteristics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, characteristics, submessage_arena);
    }
    
  } else {
    
  }
  characteristics_ = characteristics;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ImportKeyResponse.characteristics)
}

// -------------------------------------------------------------------

// ExportKeyRequest

// .nugget.app.keymaster.KeyFormat format = 1;
inline void ExportKeyRequest::clear_format() {
  format_ = 0;
}
inline ::nugget::app::keymaster::KeyFormat ExportKeyRequest::_internal_format() const {
  return static_cast< ::nugget::app::keymaster::KeyFormat >(format_);
}
inline ::nugget::app::keymaster::KeyFormat ExportKeyRequest::format() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ExportKeyRequest.format)
  return _internal_format();
}
inline void ExportKeyRequest::_internal_set_format(::nugget::app::keymaster::KeyFormat value) {
  
  format_ = value;
}
inline void ExportKeyRequest::set_format(::nugget::app::keymaster::KeyFormat value) {
  _internal_set_format(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ExportKeyRequest.format)
}

// .nugget.app.keymaster.KeyBlob blob = 2;
inline bool ExportKeyRequest::_internal_has_blob() const {
  return this != internal_default_instance() && blob_ != nullptr;
}
inline bool ExportKeyRequest::has_blob() const {
  return _internal_has_blob();
}
inline const ::nugget::app::keymaster::KeyBlob& ExportKeyRequest::_internal_blob() const {
  const ::nugget::app::keymaster::KeyBlob* p = blob_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyBlob&>(
      ::nugget::app::keymaster::_KeyBlob_default_instance_);
}
inline const ::nugget::app::keymaster::KeyBlob& ExportKeyRequest::blob() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ExportKeyRequest.blob)
  return _internal_blob();
}
inline void ExportKeyRequest::unsafe_arena_set_allocated_blob(
    ::nugget::app::keymaster::KeyBlob* blob) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob_);
  }
  blob_ = blob;
  if (blob) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.ExportKeyRequest.blob)
}
inline ::nugget::app::keymaster::KeyBlob* ExportKeyRequest::release_blob() {
  
  ::nugget::app::keymaster::KeyBlob* temp = blob_;
  blob_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* ExportKeyRequest::unsafe_arena_release_blob() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ExportKeyRequest.blob)
  
  ::nugget::app::keymaster::KeyBlob* temp = blob_;
  blob_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* ExportKeyRequest::_internal_mutable_blob() {
  
  if (blob_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyBlob>(GetArena());
    blob_ = p;
  }
  return blob_;
}
inline ::nugget::app::keymaster::KeyBlob* ExportKeyRequest::mutable_blob() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ExportKeyRequest.blob)
  return _internal_mutable_blob();
}
inline void ExportKeyRequest::set_allocated_blob(::nugget::app::keymaster::KeyBlob* blob) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob_);
  }
  if (blob) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob)->GetArena();
    if (message_arena != submessage_arena) {
      blob = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blob, submessage_arena);
    }
    
  } else {
    
  }
  blob_ = blob;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ExportKeyRequest.blob)
}

// bytes client_id = 3;
inline void ExportKeyRequest::clear_client_id() {
  client_id_.ClearToEmpty();
}
inline const std::string& ExportKeyRequest::client_id() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ExportKeyRequest.client_id)
  return _internal_client_id();
}
inline void ExportKeyRequest::set_client_id(const std::string& value) {
  _internal_set_client_id(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ExportKeyRequest.client_id)
}
inline std::string* ExportKeyRequest::mutable_client_id() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ExportKeyRequest.client_id)
  return _internal_mutable_client_id();
}
inline const std::string& ExportKeyRequest::_internal_client_id() const {
  return client_id_.Get();
}
inline void ExportKeyRequest::_internal_set_client_id(const std::string& value) {
  
  client_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ExportKeyRequest::set_client_id(std::string&& value) {
  
  client_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ExportKeyRequest.client_id)
}
inline void ExportKeyRequest::set_client_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  client_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ExportKeyRequest.client_id)
}
inline void ExportKeyRequest::set_client_id(const void* value,
    size_t size) {
  
  client_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ExportKeyRequest.client_id)
}
inline std::string* ExportKeyRequest::_internal_mutable_client_id() {
  
  return client_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ExportKeyRequest::release_client_id() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ExportKeyRequest.client_id)
  return client_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ExportKeyRequest::set_allocated_client_id(std::string* client_id) {
  if (client_id != nullptr) {
    
  } else {
    
  }
  client_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), client_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ExportKeyRequest.client_id)
}

// bytes app_data = 4;
inline void ExportKeyRequest::clear_app_data() {
  app_data_.ClearToEmpty();
}
inline const std::string& ExportKeyRequest::app_data() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ExportKeyRequest.app_data)
  return _internal_app_data();
}
inline void ExportKeyRequest::set_app_data(const std::string& value) {
  _internal_set_app_data(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ExportKeyRequest.app_data)
}
inline std::string* ExportKeyRequest::mutable_app_data() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ExportKeyRequest.app_data)
  return _internal_mutable_app_data();
}
inline const std::string& ExportKeyRequest::_internal_app_data() const {
  return app_data_.Get();
}
inline void ExportKeyRequest::_internal_set_app_data(const std::string& value) {
  
  app_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ExportKeyRequest::set_app_data(std::string&& value) {
  
  app_data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ExportKeyRequest.app_data)
}
inline void ExportKeyRequest::set_app_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  app_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ExportKeyRequest.app_data)
}
inline void ExportKeyRequest::set_app_data(const void* value,
    size_t size) {
  
  app_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ExportKeyRequest.app_data)
}
inline std::string* ExportKeyRequest::_internal_mutable_app_data() {
  
  return app_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ExportKeyRequest::release_app_data() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ExportKeyRequest.app_data)
  return app_data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ExportKeyRequest::set_allocated_app_data(std::string* app_data) {
  if (app_data != nullptr) {
    
  } else {
    
  }
  app_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), app_data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ExportKeyRequest.app_data)
}

// -------------------------------------------------------------------

// ExportKeyResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void ExportKeyResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode ExportKeyResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode ExportKeyResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ExportKeyResponse.error_code)
  return _internal_error_code();
}
inline void ExportKeyResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void ExportKeyResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ExportKeyResponse.error_code)
}

// .nugget.app.keymaster.Algorithm algorithm = 2;
inline void ExportKeyResponse::clear_algorithm() {
  algorithm_ = 0;
}
inline ::nugget::app::keymaster::Algorithm ExportKeyResponse::_internal_algorithm() const {
  return static_cast< ::nugget::app::keymaster::Algorithm >(algorithm_);
}
inline ::nugget::app::keymaster::Algorithm ExportKeyResponse::algorithm() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ExportKeyResponse.algorithm)
  return _internal_algorithm();
}
inline void ExportKeyResponse::_internal_set_algorithm(::nugget::app::keymaster::Algorithm value) {
  
  algorithm_ = value;
}
inline void ExportKeyResponse::set_algorithm(::nugget::app::keymaster::Algorithm value) {
  _internal_set_algorithm(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ExportKeyResponse.algorithm)
}

// .nugget.app.keymaster.RSAKey rsa = 3;
inline bool ExportKeyResponse::_internal_has_rsa() const {
  return this != internal_default_instance() && rsa_ != nullptr;
}
inline bool ExportKeyResponse::has_rsa() const {
  return _internal_has_rsa();
}
inline const ::nugget::app::keymaster::RSAKey& ExportKeyResponse::_internal_rsa() const {
  const ::nugget::app::keymaster::RSAKey* p = rsa_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::RSAKey&>(
      ::nugget::app::keymaster::_RSAKey_default_instance_);
}
inline const ::nugget::app::keymaster::RSAKey& ExportKeyResponse::rsa() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ExportKeyResponse.rsa)
  return _internal_rsa();
}
inline void ExportKeyResponse::unsafe_arena_set_allocated_rsa(
    ::nugget::app::keymaster::RSAKey* rsa) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsa_);
  }
  rsa_ = rsa;
  if (rsa) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.ExportKeyResponse.rsa)
}
inline ::nugget::app::keymaster::RSAKey* ExportKeyResponse::release_rsa() {
  
  ::nugget::app::keymaster::RSAKey* temp = rsa_;
  rsa_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::RSAKey* ExportKeyResponse::unsafe_arena_release_rsa() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ExportKeyResponse.rsa)
  
  ::nugget::app::keymaster::RSAKey* temp = rsa_;
  rsa_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::RSAKey* ExportKeyResponse::_internal_mutable_rsa() {
  
  if (rsa_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::RSAKey>(GetArena());
    rsa_ = p;
  }
  return rsa_;
}
inline ::nugget::app::keymaster::RSAKey* ExportKeyResponse::mutable_rsa() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ExportKeyResponse.rsa)
  return _internal_mutable_rsa();
}
inline void ExportKeyResponse::set_allocated_rsa(::nugget::app::keymaster::RSAKey* rsa) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsa_);
  }
  if (rsa) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsa)->GetArena();
    if (message_arena != submessage_arena) {
      rsa = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsa, submessage_arena);
    }
    
  } else {
    
  }
  rsa_ = rsa;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ExportKeyResponse.rsa)
}

// .nugget.app.keymaster.ECKey ec = 4;
inline bool ExportKeyResponse::_internal_has_ec() const {
  return this != internal_default_instance() && ec_ != nullptr;
}
inline bool ExportKeyResponse::has_ec() const {
  return _internal_has_ec();
}
inline const ::nugget::app::keymaster::ECKey& ExportKeyResponse::_internal_ec() const {
  const ::nugget::app::keymaster::ECKey* p = ec_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::ECKey&>(
      ::nugget::app::keymaster::_ECKey_default_instance_);
}
inline const ::nugget::app::keymaster::ECKey& ExportKeyResponse::ec() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ExportKeyResponse.ec)
  return _internal_ec();
}
inline void ExportKeyResponse::unsafe_arena_set_allocated_ec(
    ::nugget::app::keymaster::ECKey* ec) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ec_);
  }
  ec_ = ec;
  if (ec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.ExportKeyResponse.ec)
}
inline ::nugget::app::keymaster::ECKey* ExportKeyResponse::release_ec() {
  
  ::nugget::app::keymaster::ECKey* temp = ec_;
  ec_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::ECKey* ExportKeyResponse::unsafe_arena_release_ec() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ExportKeyResponse.ec)
  
  ::nugget::app::keymaster::ECKey* temp = ec_;
  ec_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::ECKey* ExportKeyResponse::_internal_mutable_ec() {
  
  if (ec_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::ECKey>(GetArena());
    ec_ = p;
  }
  return ec_;
}
inline ::nugget::app::keymaster::ECKey* ExportKeyResponse::mutable_ec() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ExportKeyResponse.ec)
  return _internal_mutable_ec();
}
inline void ExportKeyResponse::set_allocated_ec(::nugget::app::keymaster::ECKey* ec) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ec_);
  }
  if (ec) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ec)->GetArena();
    if (message_arena != submessage_arena) {
      ec = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ec, submessage_arena);
    }
    
  } else {
    
  }
  ec_ = ec;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ExportKeyResponse.ec)
}

// -------------------------------------------------------------------

// StartAttestKeyRequest

// .nugget.app.keymaster.KeyBlob blob = 1;
inline bool StartAttestKeyRequest::_internal_has_blob() const {
  return this != internal_default_instance() && blob_ != nullptr;
}
inline bool StartAttestKeyRequest::has_blob() const {
  return _internal_has_blob();
}
inline const ::nugget::app::keymaster::KeyBlob& StartAttestKeyRequest::_internal_blob() const {
  const ::nugget::app::keymaster::KeyBlob* p = blob_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyBlob&>(
      ::nugget::app::keymaster::_KeyBlob_default_instance_);
}
inline const ::nugget::app::keymaster::KeyBlob& StartAttestKeyRequest::blob() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.StartAttestKeyRequest.blob)
  return _internal_blob();
}
inline void StartAttestKeyRequest::unsafe_arena_set_allocated_blob(
    ::nugget::app::keymaster::KeyBlob* blob) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob_);
  }
  blob_ = blob;
  if (blob) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.StartAttestKeyRequest.blob)
}
inline ::nugget::app::keymaster::KeyBlob* StartAttestKeyRequest::release_blob() {
  
  ::nugget::app::keymaster::KeyBlob* temp = blob_;
  blob_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* StartAttestKeyRequest::unsafe_arena_release_blob() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.StartAttestKeyRequest.blob)
  
  ::nugget::app::keymaster::KeyBlob* temp = blob_;
  blob_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* StartAttestKeyRequest::_internal_mutable_blob() {
  
  if (blob_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyBlob>(GetArena());
    blob_ = p;
  }
  return blob_;
}
inline ::nugget::app::keymaster::KeyBlob* StartAttestKeyRequest::mutable_blob() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.StartAttestKeyRequest.blob)
  return _internal_mutable_blob();
}
inline void StartAttestKeyRequest::set_allocated_blob(::nugget::app::keymaster::KeyBlob* blob) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob_);
  }
  if (blob) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob)->GetArena();
    if (message_arena != submessage_arena) {
      blob = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blob, submessage_arena);
    }
    
  } else {
    
  }
  blob_ = blob;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.StartAttestKeyRequest.blob)
}

// .nugget.app.keymaster.KeyParameters params = 2;
inline bool StartAttestKeyRequest::_internal_has_params() const {
  return this != internal_default_instance() && params_ != nullptr;
}
inline bool StartAttestKeyRequest::has_params() const {
  return _internal_has_params();
}
inline const ::nugget::app::keymaster::KeyParameters& StartAttestKeyRequest::_internal_params() const {
  const ::nugget::app::keymaster::KeyParameters* p = params_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyParameters&>(
      ::nugget::app::keymaster::_KeyParameters_default_instance_);
}
inline const ::nugget::app::keymaster::KeyParameters& StartAttestKeyRequest::params() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.StartAttestKeyRequest.params)
  return _internal_params();
}
inline void StartAttestKeyRequest::unsafe_arena_set_allocated_params(
    ::nugget::app::keymaster::KeyParameters* params) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  params_ = params;
  if (params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.StartAttestKeyRequest.params)
}
inline ::nugget::app::keymaster::KeyParameters* StartAttestKeyRequest::release_params() {
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* StartAttestKeyRequest::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.StartAttestKeyRequest.params)
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* StartAttestKeyRequest::_internal_mutable_params() {
  
  if (params_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyParameters>(GetArena());
    params_ = p;
  }
  return params_;
}
inline ::nugget::app::keymaster::KeyParameters* StartAttestKeyRequest::mutable_params() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.StartAttestKeyRequest.params)
  return _internal_mutable_params();
}
inline void StartAttestKeyRequest::set_allocated_params(::nugget::app::keymaster::KeyParameters* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params)->GetArena();
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    
  } else {
    
  }
  params_ = params;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.StartAttestKeyRequest.params)
}

// uint32 attestation_app_id_len = 3;
inline void StartAttestKeyRequest::clear_attestation_app_id_len() {
  attestation_app_id_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StartAttestKeyRequest::_internal_attestation_app_id_len() const {
  return attestation_app_id_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StartAttestKeyRequest::attestation_app_id_len() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.StartAttestKeyRequest.attestation_app_id_len)
  return _internal_attestation_app_id_len();
}
inline void StartAttestKeyRequest::_internal_set_attestation_app_id_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  attestation_app_id_len_ = value;
}
inline void StartAttestKeyRequest::set_attestation_app_id_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_attestation_app_id_len(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.StartAttestKeyRequest.attestation_app_id_len)
}

// .nugget.app.keymaster.AttestationSelector selector = 4;
inline void StartAttestKeyRequest::clear_selector() {
  selector_ = 0;
}
inline ::nugget::app::keymaster::AttestationSelector StartAttestKeyRequest::_internal_selector() const {
  return static_cast< ::nugget::app::keymaster::AttestationSelector >(selector_);
}
inline ::nugget::app::keymaster::AttestationSelector StartAttestKeyRequest::selector() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.StartAttestKeyRequest.selector)
  return _internal_selector();
}
inline void StartAttestKeyRequest::_internal_set_selector(::nugget::app::keymaster::AttestationSelector value) {
  
  selector_ = value;
}
inline void StartAttestKeyRequest::set_selector(::nugget::app::keymaster::AttestationSelector value) {
  _internal_set_selector(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.StartAttestKeyRequest.selector)
}

// bytes not_before = 5;
inline void StartAttestKeyRequest::clear_not_before() {
  not_before_.ClearToEmpty();
}
inline const std::string& StartAttestKeyRequest::not_before() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.StartAttestKeyRequest.not_before)
  return _internal_not_before();
}
inline void StartAttestKeyRequest::set_not_before(const std::string& value) {
  _internal_set_not_before(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.StartAttestKeyRequest.not_before)
}
inline std::string* StartAttestKeyRequest::mutable_not_before() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.StartAttestKeyRequest.not_before)
  return _internal_mutable_not_before();
}
inline const std::string& StartAttestKeyRequest::_internal_not_before() const {
  return not_before_.Get();
}
inline void StartAttestKeyRequest::_internal_set_not_before(const std::string& value) {
  
  not_before_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void StartAttestKeyRequest::set_not_before(std::string&& value) {
  
  not_before_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.StartAttestKeyRequest.not_before)
}
inline void StartAttestKeyRequest::set_not_before(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  not_before_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.StartAttestKeyRequest.not_before)
}
inline void StartAttestKeyRequest::set_not_before(const void* value,
    size_t size) {
  
  not_before_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.StartAttestKeyRequest.not_before)
}
inline std::string* StartAttestKeyRequest::_internal_mutable_not_before() {
  
  return not_before_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* StartAttestKeyRequest::release_not_before() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.StartAttestKeyRequest.not_before)
  return not_before_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void StartAttestKeyRequest::set_allocated_not_before(std::string* not_before) {
  if (not_before != nullptr) {
    
  } else {
    
  }
  not_before_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), not_before,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.StartAttestKeyRequest.not_before)
}

// bytes not_after = 6;
inline void StartAttestKeyRequest::clear_not_after() {
  not_after_.ClearToEmpty();
}
inline const std::string& StartAttestKeyRequest::not_after() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.StartAttestKeyRequest.not_after)
  return _internal_not_after();
}
inline void StartAttestKeyRequest::set_not_after(const std::string& value) {
  _internal_set_not_after(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.StartAttestKeyRequest.not_after)
}
inline std::string* StartAttestKeyRequest::mutable_not_after() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.StartAttestKeyRequest.not_after)
  return _internal_mutable_not_after();
}
inline const std::string& StartAttestKeyRequest::_internal_not_after() const {
  return not_after_.Get();
}
inline void StartAttestKeyRequest::_internal_set_not_after(const std::string& value) {
  
  not_after_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void StartAttestKeyRequest::set_not_after(std::string&& value) {
  
  not_after_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.StartAttestKeyRequest.not_after)
}
inline void StartAttestKeyRequest::set_not_after(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  not_after_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.StartAttestKeyRequest.not_after)
}
inline void StartAttestKeyRequest::set_not_after(const void* value,
    size_t size) {
  
  not_after_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.StartAttestKeyRequest.not_after)
}
inline std::string* StartAttestKeyRequest::_internal_mutable_not_after() {
  
  return not_after_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* StartAttestKeyRequest::release_not_after() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.StartAttestKeyRequest.not_after)
  return not_after_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void StartAttestKeyRequest::set_allocated_not_after(std::string* not_after) {
  if (not_after != nullptr) {
    
  } else {
    
  }
  not_after_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), not_after,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.StartAttestKeyRequest.not_after)
}

// bytes caller_issuer_subj_name = 7;
inline void StartAttestKeyRequest::clear_caller_issuer_subj_name() {
  caller_issuer_subj_name_.ClearToEmpty();
}
inline const std::string& StartAttestKeyRequest::caller_issuer_subj_name() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.StartAttestKeyRequest.caller_issuer_subj_name)
  return _internal_caller_issuer_subj_name();
}
inline void StartAttestKeyRequest::set_caller_issuer_subj_name(const std::string& value) {
  _internal_set_caller_issuer_subj_name(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.StartAttestKeyRequest.caller_issuer_subj_name)
}
inline std::string* StartAttestKeyRequest::mutable_caller_issuer_subj_name() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.StartAttestKeyRequest.caller_issuer_subj_name)
  return _internal_mutable_caller_issuer_subj_name();
}
inline const std::string& StartAttestKeyRequest::_internal_caller_issuer_subj_name() const {
  return caller_issuer_subj_name_.Get();
}
inline void StartAttestKeyRequest::_internal_set_caller_issuer_subj_name(const std::string& value) {
  
  caller_issuer_subj_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void StartAttestKeyRequest::set_caller_issuer_subj_name(std::string&& value) {
  
  caller_issuer_subj_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.StartAttestKeyRequest.caller_issuer_subj_name)
}
inline void StartAttestKeyRequest::set_caller_issuer_subj_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  caller_issuer_subj_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.StartAttestKeyRequest.caller_issuer_subj_name)
}
inline void StartAttestKeyRequest::set_caller_issuer_subj_name(const void* value,
    size_t size) {
  
  caller_issuer_subj_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.StartAttestKeyRequest.caller_issuer_subj_name)
}
inline std::string* StartAttestKeyRequest::_internal_mutable_caller_issuer_subj_name() {
  
  return caller_issuer_subj_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* StartAttestKeyRequest::release_caller_issuer_subj_name() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.StartAttestKeyRequest.caller_issuer_subj_name)
  return caller_issuer_subj_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void StartAttestKeyRequest::set_allocated_caller_issuer_subj_name(std::string* caller_issuer_subj_name) {
  if (caller_issuer_subj_name != nullptr) {
    
  } else {
    
  }
  caller_issuer_subj_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), caller_issuer_subj_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.StartAttestKeyRequest.caller_issuer_subj_name)
}

// .nugget.app.keymaster.KeyParameters caller_key_params = 8;
inline bool StartAttestKeyRequest::_internal_has_caller_key_params() const {
  return this != internal_default_instance() && caller_key_params_ != nullptr;
}
inline bool StartAttestKeyRequest::has_caller_key_params() const {
  return _internal_has_caller_key_params();
}
inline const ::nugget::app::keymaster::KeyParameters& StartAttestKeyRequest::_internal_caller_key_params() const {
  const ::nugget::app::keymaster::KeyParameters* p = caller_key_params_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyParameters&>(
      ::nugget::app::keymaster::_KeyParameters_default_instance_);
}
inline const ::nugget::app::keymaster::KeyParameters& StartAttestKeyRequest::caller_key_params() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.StartAttestKeyRequest.caller_key_params)
  return _internal_caller_key_params();
}
inline void StartAttestKeyRequest::unsafe_arena_set_allocated_caller_key_params(
    ::nugget::app::keymaster::KeyParameters* caller_key_params) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(caller_key_params_);
  }
  caller_key_params_ = caller_key_params;
  if (caller_key_params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.StartAttestKeyRequest.caller_key_params)
}
inline ::nugget::app::keymaster::KeyParameters* StartAttestKeyRequest::release_caller_key_params() {
  
  ::nugget::app::keymaster::KeyParameters* temp = caller_key_params_;
  caller_key_params_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* StartAttestKeyRequest::unsafe_arena_release_caller_key_params() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.StartAttestKeyRequest.caller_key_params)
  
  ::nugget::app::keymaster::KeyParameters* temp = caller_key_params_;
  caller_key_params_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* StartAttestKeyRequest::_internal_mutable_caller_key_params() {
  
  if (caller_key_params_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyParameters>(GetArena());
    caller_key_params_ = p;
  }
  return caller_key_params_;
}
inline ::nugget::app::keymaster::KeyParameters* StartAttestKeyRequest::mutable_caller_key_params() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.StartAttestKeyRequest.caller_key_params)
  return _internal_mutable_caller_key_params();
}
inline void StartAttestKeyRequest::set_allocated_caller_key_params(::nugget::app::keymaster::KeyParameters* caller_key_params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(caller_key_params_);
  }
  if (caller_key_params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(caller_key_params)->GetArena();
    if (message_arena != submessage_arena) {
      caller_key_params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, caller_key_params, submessage_arena);
    }
    
  } else {
    
  }
  caller_key_params_ = caller_key_params;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.StartAttestKeyRequest.caller_key_params)
}

// -------------------------------------------------------------------

// StartAttestKeyResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void StartAttestKeyResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode StartAttestKeyResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode StartAttestKeyResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.StartAttestKeyResponse.error_code)
  return _internal_error_code();
}
inline void StartAttestKeyResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void StartAttestKeyResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.StartAttestKeyResponse.error_code)
}

// .nugget.app.keymaster.OperationHandle handle = 2;
inline bool StartAttestKeyResponse::_internal_has_handle() const {
  return this != internal_default_instance() && handle_ != nullptr;
}
inline bool StartAttestKeyResponse::has_handle() const {
  return _internal_has_handle();
}
inline const ::nugget::app::keymaster::OperationHandle& StartAttestKeyResponse::_internal_handle() const {
  const ::nugget::app::keymaster::OperationHandle* p = handle_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::OperationHandle&>(
      ::nugget::app::keymaster::_OperationHandle_default_instance_);
}
inline const ::nugget::app::keymaster::OperationHandle& StartAttestKeyResponse::handle() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.StartAttestKeyResponse.handle)
  return _internal_handle();
}
inline void StartAttestKeyResponse::unsafe_arena_set_allocated_handle(
    ::nugget::app::keymaster::OperationHandle* handle) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle_);
  }
  handle_ = handle;
  if (handle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.StartAttestKeyResponse.handle)
}
inline ::nugget::app::keymaster::OperationHandle* StartAttestKeyResponse::release_handle() {
  
  ::nugget::app::keymaster::OperationHandle* temp = handle_;
  handle_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::OperationHandle* StartAttestKeyResponse::unsafe_arena_release_handle() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.StartAttestKeyResponse.handle)
  
  ::nugget::app::keymaster::OperationHandle* temp = handle_;
  handle_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::OperationHandle* StartAttestKeyResponse::_internal_mutable_handle() {
  
  if (handle_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::OperationHandle>(GetArena());
    handle_ = p;
  }
  return handle_;
}
inline ::nugget::app::keymaster::OperationHandle* StartAttestKeyResponse::mutable_handle() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.StartAttestKeyResponse.handle)
  return _internal_mutable_handle();
}
inline void StartAttestKeyResponse::set_allocated_handle(::nugget::app::keymaster::OperationHandle* handle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle_);
  }
  if (handle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle)->GetArena();
    if (message_arena != submessage_arena) {
      handle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, handle, submessage_arena);
    }
    
  } else {
    
  }
  handle_ = handle;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.StartAttestKeyResponse.handle)
}

// bytes certificate_prologue = 3;
inline void StartAttestKeyResponse::clear_certificate_prologue() {
  certificate_prologue_.ClearToEmpty();
}
inline const std::string& StartAttestKeyResponse::certificate_prologue() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.StartAttestKeyResponse.certificate_prologue)
  return _internal_certificate_prologue();
}
inline void StartAttestKeyResponse::set_certificate_prologue(const std::string& value) {
  _internal_set_certificate_prologue(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.StartAttestKeyResponse.certificate_prologue)
}
inline std::string* StartAttestKeyResponse::mutable_certificate_prologue() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.StartAttestKeyResponse.certificate_prologue)
  return _internal_mutable_certificate_prologue();
}
inline const std::string& StartAttestKeyResponse::_internal_certificate_prologue() const {
  return certificate_prologue_.Get();
}
inline void StartAttestKeyResponse::_internal_set_certificate_prologue(const std::string& value) {
  
  certificate_prologue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void StartAttestKeyResponse::set_certificate_prologue(std::string&& value) {
  
  certificate_prologue_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.StartAttestKeyResponse.certificate_prologue)
}
inline void StartAttestKeyResponse::set_certificate_prologue(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  certificate_prologue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.StartAttestKeyResponse.certificate_prologue)
}
inline void StartAttestKeyResponse::set_certificate_prologue(const void* value,
    size_t size) {
  
  certificate_prologue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.StartAttestKeyResponse.certificate_prologue)
}
inline std::string* StartAttestKeyResponse::_internal_mutable_certificate_prologue() {
  
  return certificate_prologue_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* StartAttestKeyResponse::release_certificate_prologue() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.StartAttestKeyResponse.certificate_prologue)
  return certificate_prologue_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void StartAttestKeyResponse::set_allocated_certificate_prologue(std::string* certificate_prologue) {
  if (certificate_prologue != nullptr) {
    
  } else {
    
  }
  certificate_prologue_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), certificate_prologue,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.StartAttestKeyResponse.certificate_prologue)
}

// -------------------------------------------------------------------

// ContinueAttestKeyRequest

// .nugget.app.keymaster.OperationHandle handle = 1;
inline bool ContinueAttestKeyRequest::_internal_has_handle() const {
  return this != internal_default_instance() && handle_ != nullptr;
}
inline bool ContinueAttestKeyRequest::has_handle() const {
  return _internal_has_handle();
}
inline const ::nugget::app::keymaster::OperationHandle& ContinueAttestKeyRequest::_internal_handle() const {
  const ::nugget::app::keymaster::OperationHandle* p = handle_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::OperationHandle&>(
      ::nugget::app::keymaster::_OperationHandle_default_instance_);
}
inline const ::nugget::app::keymaster::OperationHandle& ContinueAttestKeyRequest::handle() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ContinueAttestKeyRequest.handle)
  return _internal_handle();
}
inline void ContinueAttestKeyRequest::unsafe_arena_set_allocated_handle(
    ::nugget::app::keymaster::OperationHandle* handle) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle_);
  }
  handle_ = handle;
  if (handle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.ContinueAttestKeyRequest.handle)
}
inline ::nugget::app::keymaster::OperationHandle* ContinueAttestKeyRequest::release_handle() {
  
  ::nugget::app::keymaster::OperationHandle* temp = handle_;
  handle_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::OperationHandle* ContinueAttestKeyRequest::unsafe_arena_release_handle() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ContinueAttestKeyRequest.handle)
  
  ::nugget::app::keymaster::OperationHandle* temp = handle_;
  handle_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::OperationHandle* ContinueAttestKeyRequest::_internal_mutable_handle() {
  
  if (handle_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::OperationHandle>(GetArena());
    handle_ = p;
  }
  return handle_;
}
inline ::nugget::app::keymaster::OperationHandle* ContinueAttestKeyRequest::mutable_handle() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ContinueAttestKeyRequest.handle)
  return _internal_mutable_handle();
}
inline void ContinueAttestKeyRequest::set_allocated_handle(::nugget::app::keymaster::OperationHandle* handle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle_);
  }
  if (handle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle)->GetArena();
    if (message_arena != submessage_arena) {
      handle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, handle, submessage_arena);
    }
    
  } else {
    
  }
  handle_ = handle;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ContinueAttestKeyRequest.handle)
}

// .nugget.app.keymaster.KeyParameters params = 3;
inline bool ContinueAttestKeyRequest::_internal_has_params() const {
  return this != internal_default_instance() && params_ != nullptr;
}
inline bool ContinueAttestKeyRequest::has_params() const {
  return _internal_has_params();
}
inline const ::nugget::app::keymaster::KeyParameters& ContinueAttestKeyRequest::_internal_params() const {
  const ::nugget::app::keymaster::KeyParameters* p = params_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyParameters&>(
      ::nugget::app::keymaster::_KeyParameters_default_instance_);
}
inline const ::nugget::app::keymaster::KeyParameters& ContinueAttestKeyRequest::params() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ContinueAttestKeyRequest.params)
  return _internal_params();
}
inline void ContinueAttestKeyRequest::unsafe_arena_set_allocated_params(
    ::nugget::app::keymaster::KeyParameters* params) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  params_ = params;
  if (params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.ContinueAttestKeyRequest.params)
}
inline ::nugget::app::keymaster::KeyParameters* ContinueAttestKeyRequest::release_params() {
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* ContinueAttestKeyRequest::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ContinueAttestKeyRequest.params)
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* ContinueAttestKeyRequest::_internal_mutable_params() {
  
  if (params_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyParameters>(GetArena());
    params_ = p;
  }
  return params_;
}
inline ::nugget::app::keymaster::KeyParameters* ContinueAttestKeyRequest::mutable_params() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ContinueAttestKeyRequest.params)
  return _internal_mutable_params();
}
inline void ContinueAttestKeyRequest::set_allocated_params(::nugget::app::keymaster::KeyParameters* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params)->GetArena();
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    
  } else {
    
  }
  params_ = params;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ContinueAttestKeyRequest.params)
}

// -------------------------------------------------------------------

// ContinueAttestKeyResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void ContinueAttestKeyResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode ContinueAttestKeyResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode ContinueAttestKeyResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ContinueAttestKeyResponse.error_code)
  return _internal_error_code();
}
inline void ContinueAttestKeyResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void ContinueAttestKeyResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ContinueAttestKeyResponse.error_code)
}

// bytes certificate_body = 2;
inline void ContinueAttestKeyResponse::clear_certificate_body() {
  certificate_body_.ClearToEmpty();
}
inline const std::string& ContinueAttestKeyResponse::certificate_body() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ContinueAttestKeyResponse.certificate_body)
  return _internal_certificate_body();
}
inline void ContinueAttestKeyResponse::set_certificate_body(const std::string& value) {
  _internal_set_certificate_body(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ContinueAttestKeyResponse.certificate_body)
}
inline std::string* ContinueAttestKeyResponse::mutable_certificate_body() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ContinueAttestKeyResponse.certificate_body)
  return _internal_mutable_certificate_body();
}
inline const std::string& ContinueAttestKeyResponse::_internal_certificate_body() const {
  return certificate_body_.Get();
}
inline void ContinueAttestKeyResponse::_internal_set_certificate_body(const std::string& value) {
  
  certificate_body_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ContinueAttestKeyResponse::set_certificate_body(std::string&& value) {
  
  certificate_body_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ContinueAttestKeyResponse.certificate_body)
}
inline void ContinueAttestKeyResponse::set_certificate_body(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  certificate_body_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ContinueAttestKeyResponse.certificate_body)
}
inline void ContinueAttestKeyResponse::set_certificate_body(const void* value,
    size_t size) {
  
  certificate_body_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ContinueAttestKeyResponse.certificate_body)
}
inline std::string* ContinueAttestKeyResponse::_internal_mutable_certificate_body() {
  
  return certificate_body_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ContinueAttestKeyResponse::release_certificate_body() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ContinueAttestKeyResponse.certificate_body)
  return certificate_body_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ContinueAttestKeyResponse::set_allocated_certificate_body(std::string* certificate_body) {
  if (certificate_body != nullptr) {
    
  } else {
    
  }
  certificate_body_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), certificate_body,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ContinueAttestKeyResponse.certificate_body)
}

// -------------------------------------------------------------------

// FinishAttestKeyRequest

// .nugget.app.keymaster.OperationHandle handle = 1;
inline bool FinishAttestKeyRequest::_internal_has_handle() const {
  return this != internal_default_instance() && handle_ != nullptr;
}
inline bool FinishAttestKeyRequest::has_handle() const {
  return _internal_has_handle();
}
inline const ::nugget::app::keymaster::OperationHandle& FinishAttestKeyRequest::_internal_handle() const {
  const ::nugget::app::keymaster::OperationHandle* p = handle_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::OperationHandle&>(
      ::nugget::app::keymaster::_OperationHandle_default_instance_);
}
inline const ::nugget::app::keymaster::OperationHandle& FinishAttestKeyRequest::handle() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.FinishAttestKeyRequest.handle)
  return _internal_handle();
}
inline void FinishAttestKeyRequest::unsafe_arena_set_allocated_handle(
    ::nugget::app::keymaster::OperationHandle* handle) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle_);
  }
  handle_ = handle;
  if (handle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.FinishAttestKeyRequest.handle)
}
inline ::nugget::app::keymaster::OperationHandle* FinishAttestKeyRequest::release_handle() {
  
  ::nugget::app::keymaster::OperationHandle* temp = handle_;
  handle_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::OperationHandle* FinishAttestKeyRequest::unsafe_arena_release_handle() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.FinishAttestKeyRequest.handle)
  
  ::nugget::app::keymaster::OperationHandle* temp = handle_;
  handle_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::OperationHandle* FinishAttestKeyRequest::_internal_mutable_handle() {
  
  if (handle_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::OperationHandle>(GetArena());
    handle_ = p;
  }
  return handle_;
}
inline ::nugget::app::keymaster::OperationHandle* FinishAttestKeyRequest::mutable_handle() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.FinishAttestKeyRequest.handle)
  return _internal_mutable_handle();
}
inline void FinishAttestKeyRequest::set_allocated_handle(::nugget::app::keymaster::OperationHandle* handle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle_);
  }
  if (handle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle)->GetArena();
    if (message_arena != submessage_arena) {
      handle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, handle, submessage_arena);
    }
    
  } else {
    
  }
  handle_ = handle;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.FinishAttestKeyRequest.handle)
}

// .nugget.app.keymaster.KeyBlob caller_blob = 2;
inline bool FinishAttestKeyRequest::_internal_has_caller_blob() const {
  return this != internal_default_instance() && caller_blob_ != nullptr;
}
inline bool FinishAttestKeyRequest::has_caller_blob() const {
  return _internal_has_caller_blob();
}
inline const ::nugget::app::keymaster::KeyBlob& FinishAttestKeyRequest::_internal_caller_blob() const {
  const ::nugget::app::keymaster::KeyBlob* p = caller_blob_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyBlob&>(
      ::nugget::app::keymaster::_KeyBlob_default_instance_);
}
inline const ::nugget::app::keymaster::KeyBlob& FinishAttestKeyRequest::caller_blob() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.FinishAttestKeyRequest.caller_blob)
  return _internal_caller_blob();
}
inline void FinishAttestKeyRequest::unsafe_arena_set_allocated_caller_blob(
    ::nugget::app::keymaster::KeyBlob* caller_blob) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(caller_blob_);
  }
  caller_blob_ = caller_blob;
  if (caller_blob) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.FinishAttestKeyRequest.caller_blob)
}
inline ::nugget::app::keymaster::KeyBlob* FinishAttestKeyRequest::release_caller_blob() {
  
  ::nugget::app::keymaster::KeyBlob* temp = caller_blob_;
  caller_blob_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* FinishAttestKeyRequest::unsafe_arena_release_caller_blob() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.FinishAttestKeyRequest.caller_blob)
  
  ::nugget::app::keymaster::KeyBlob* temp = caller_blob_;
  caller_blob_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* FinishAttestKeyRequest::_internal_mutable_caller_blob() {
  
  if (caller_blob_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyBlob>(GetArena());
    caller_blob_ = p;
  }
  return caller_blob_;
}
inline ::nugget::app::keymaster::KeyBlob* FinishAttestKeyRequest::mutable_caller_blob() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.FinishAttestKeyRequest.caller_blob)
  return _internal_mutable_caller_blob();
}
inline void FinishAttestKeyRequest::set_allocated_caller_blob(::nugget::app::keymaster::KeyBlob* caller_blob) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(caller_blob_);
  }
  if (caller_blob) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(caller_blob)->GetArena();
    if (message_arena != submessage_arena) {
      caller_blob = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, caller_blob, submessage_arena);
    }
    
  } else {
    
  }
  caller_blob_ = caller_blob;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.FinishAttestKeyRequest.caller_blob)
}

// .nugget.app.keymaster.KeyParameters caller_key_params = 3;
inline bool FinishAttestKeyRequest::_internal_has_caller_key_params() const {
  return this != internal_default_instance() && caller_key_params_ != nullptr;
}
inline bool FinishAttestKeyRequest::has_caller_key_params() const {
  return _internal_has_caller_key_params();
}
inline const ::nugget::app::keymaster::KeyParameters& FinishAttestKeyRequest::_internal_caller_key_params() const {
  const ::nugget::app::keymaster::KeyParameters* p = caller_key_params_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyParameters&>(
      ::nugget::app::keymaster::_KeyParameters_default_instance_);
}
inline const ::nugget::app::keymaster::KeyParameters& FinishAttestKeyRequest::caller_key_params() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.FinishAttestKeyRequest.caller_key_params)
  return _internal_caller_key_params();
}
inline void FinishAttestKeyRequest::unsafe_arena_set_allocated_caller_key_params(
    ::nugget::app::keymaster::KeyParameters* caller_key_params) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(caller_key_params_);
  }
  caller_key_params_ = caller_key_params;
  if (caller_key_params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.FinishAttestKeyRequest.caller_key_params)
}
inline ::nugget::app::keymaster::KeyParameters* FinishAttestKeyRequest::release_caller_key_params() {
  
  ::nugget::app::keymaster::KeyParameters* temp = caller_key_params_;
  caller_key_params_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* FinishAttestKeyRequest::unsafe_arena_release_caller_key_params() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.FinishAttestKeyRequest.caller_key_params)
  
  ::nugget::app::keymaster::KeyParameters* temp = caller_key_params_;
  caller_key_params_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* FinishAttestKeyRequest::_internal_mutable_caller_key_params() {
  
  if (caller_key_params_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyParameters>(GetArena());
    caller_key_params_ = p;
  }
  return caller_key_params_;
}
inline ::nugget::app::keymaster::KeyParameters* FinishAttestKeyRequest::mutable_caller_key_params() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.FinishAttestKeyRequest.caller_key_params)
  return _internal_mutable_caller_key_params();
}
inline void FinishAttestKeyRequest::set_allocated_caller_key_params(::nugget::app::keymaster::KeyParameters* caller_key_params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(caller_key_params_);
  }
  if (caller_key_params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(caller_key_params)->GetArena();
    if (message_arena != submessage_arena) {
      caller_key_params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, caller_key_params, submessage_arena);
    }
    
  } else {
    
  }
  caller_key_params_ = caller_key_params;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.FinishAttestKeyRequest.caller_key_params)
}

// -------------------------------------------------------------------

// FinishAttestKeyResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void FinishAttestKeyResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode FinishAttestKeyResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode FinishAttestKeyResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.FinishAttestKeyResponse.error_code)
  return _internal_error_code();
}
inline void FinishAttestKeyResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void FinishAttestKeyResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.FinishAttestKeyResponse.error_code)
}

// bytes certificate_epilogue = 2;
inline void FinishAttestKeyResponse::clear_certificate_epilogue() {
  certificate_epilogue_.ClearToEmpty();
}
inline const std::string& FinishAttestKeyResponse::certificate_epilogue() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.FinishAttestKeyResponse.certificate_epilogue)
  return _internal_certificate_epilogue();
}
inline void FinishAttestKeyResponse::set_certificate_epilogue(const std::string& value) {
  _internal_set_certificate_epilogue(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.FinishAttestKeyResponse.certificate_epilogue)
}
inline std::string* FinishAttestKeyResponse::mutable_certificate_epilogue() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.FinishAttestKeyResponse.certificate_epilogue)
  return _internal_mutable_certificate_epilogue();
}
inline const std::string& FinishAttestKeyResponse::_internal_certificate_epilogue() const {
  return certificate_epilogue_.Get();
}
inline void FinishAttestKeyResponse::_internal_set_certificate_epilogue(const std::string& value) {
  
  certificate_epilogue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void FinishAttestKeyResponse::set_certificate_epilogue(std::string&& value) {
  
  certificate_epilogue_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.FinishAttestKeyResponse.certificate_epilogue)
}
inline void FinishAttestKeyResponse::set_certificate_epilogue(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  certificate_epilogue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.FinishAttestKeyResponse.certificate_epilogue)
}
inline void FinishAttestKeyResponse::set_certificate_epilogue(const void* value,
    size_t size) {
  
  certificate_epilogue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.FinishAttestKeyResponse.certificate_epilogue)
}
inline std::string* FinishAttestKeyResponse::_internal_mutable_certificate_epilogue() {
  
  return certificate_epilogue_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* FinishAttestKeyResponse::release_certificate_epilogue() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.FinishAttestKeyResponse.certificate_epilogue)
  return certificate_epilogue_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void FinishAttestKeyResponse::set_allocated_certificate_epilogue(std::string* certificate_epilogue) {
  if (certificate_epilogue != nullptr) {
    
  } else {
    
  }
  certificate_epilogue_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), certificate_epilogue,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.FinishAttestKeyResponse.certificate_epilogue)
}

// .nugget.app.keymaster.ChipFusing chip_fusing = 3;
inline void FinishAttestKeyResponse::clear_chip_fusing() {
  chip_fusing_ = 0;
}
inline ::nugget::app::keymaster::ChipFusing FinishAttestKeyResponse::_internal_chip_fusing() const {
  return static_cast< ::nugget::app::keymaster::ChipFusing >(chip_fusing_);
}
inline ::nugget::app::keymaster::ChipFusing FinishAttestKeyResponse::chip_fusing() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.FinishAttestKeyResponse.chip_fusing)
  return _internal_chip_fusing();
}
inline void FinishAttestKeyResponse::_internal_set_chip_fusing(::nugget::app::keymaster::ChipFusing value) {
  
  chip_fusing_ = value;
}
inline void FinishAttestKeyResponse::set_chip_fusing(::nugget::app::keymaster::ChipFusing value) {
  _internal_set_chip_fusing(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.FinishAttestKeyResponse.chip_fusing)
}

// bool nodelocked_ro = 4;
inline void FinishAttestKeyResponse::clear_nodelocked_ro() {
  nodelocked_ro_ = false;
}
inline bool FinishAttestKeyResponse::_internal_nodelocked_ro() const {
  return nodelocked_ro_;
}
inline bool FinishAttestKeyResponse::nodelocked_ro() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.FinishAttestKeyResponse.nodelocked_ro)
  return _internal_nodelocked_ro();
}
inline void FinishAttestKeyResponse::_internal_set_nodelocked_ro(bool value) {
  
  nodelocked_ro_ = value;
}
inline void FinishAttestKeyResponse::set_nodelocked_ro(bool value) {
  _internal_set_nodelocked_ro(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.FinishAttestKeyResponse.nodelocked_ro)
}

// -------------------------------------------------------------------

// UpgradeKeyRequest

// .nugget.app.keymaster.KeyBlob blob = 1;
inline bool UpgradeKeyRequest::_internal_has_blob() const {
  return this != internal_default_instance() && blob_ != nullptr;
}
inline bool UpgradeKeyRequest::has_blob() const {
  return _internal_has_blob();
}
inline const ::nugget::app::keymaster::KeyBlob& UpgradeKeyRequest::_internal_blob() const {
  const ::nugget::app::keymaster::KeyBlob* p = blob_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyBlob&>(
      ::nugget::app::keymaster::_KeyBlob_default_instance_);
}
inline const ::nugget::app::keymaster::KeyBlob& UpgradeKeyRequest::blob() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.UpgradeKeyRequest.blob)
  return _internal_blob();
}
inline void UpgradeKeyRequest::unsafe_arena_set_allocated_blob(
    ::nugget::app::keymaster::KeyBlob* blob) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob_);
  }
  blob_ = blob;
  if (blob) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.UpgradeKeyRequest.blob)
}
inline ::nugget::app::keymaster::KeyBlob* UpgradeKeyRequest::release_blob() {
  
  ::nugget::app::keymaster::KeyBlob* temp = blob_;
  blob_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* UpgradeKeyRequest::unsafe_arena_release_blob() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.UpgradeKeyRequest.blob)
  
  ::nugget::app::keymaster::KeyBlob* temp = blob_;
  blob_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* UpgradeKeyRequest::_internal_mutable_blob() {
  
  if (blob_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyBlob>(GetArena());
    blob_ = p;
  }
  return blob_;
}
inline ::nugget::app::keymaster::KeyBlob* UpgradeKeyRequest::mutable_blob() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.UpgradeKeyRequest.blob)
  return _internal_mutable_blob();
}
inline void UpgradeKeyRequest::set_allocated_blob(::nugget::app::keymaster::KeyBlob* blob) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob_);
  }
  if (blob) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob)->GetArena();
    if (message_arena != submessage_arena) {
      blob = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blob, submessage_arena);
    }
    
  } else {
    
  }
  blob_ = blob;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.UpgradeKeyRequest.blob)
}

// .nugget.app.keymaster.KeyParameters params = 2;
inline bool UpgradeKeyRequest::_internal_has_params() const {
  return this != internal_default_instance() && params_ != nullptr;
}
inline bool UpgradeKeyRequest::has_params() const {
  return _internal_has_params();
}
inline const ::nugget::app::keymaster::KeyParameters& UpgradeKeyRequest::_internal_params() const {
  const ::nugget::app::keymaster::KeyParameters* p = params_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyParameters&>(
      ::nugget::app::keymaster::_KeyParameters_default_instance_);
}
inline const ::nugget::app::keymaster::KeyParameters& UpgradeKeyRequest::params() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.UpgradeKeyRequest.params)
  return _internal_params();
}
inline void UpgradeKeyRequest::unsafe_arena_set_allocated_params(
    ::nugget::app::keymaster::KeyParameters* params) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  params_ = params;
  if (params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.UpgradeKeyRequest.params)
}
inline ::nugget::app::keymaster::KeyParameters* UpgradeKeyRequest::release_params() {
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* UpgradeKeyRequest::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.UpgradeKeyRequest.params)
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* UpgradeKeyRequest::_internal_mutable_params() {
  
  if (params_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyParameters>(GetArena());
    params_ = p;
  }
  return params_;
}
inline ::nugget::app::keymaster::KeyParameters* UpgradeKeyRequest::mutable_params() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.UpgradeKeyRequest.params)
  return _internal_mutable_params();
}
inline void UpgradeKeyRequest::set_allocated_params(::nugget::app::keymaster::KeyParameters* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params)->GetArena();
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    
  } else {
    
  }
  params_ = params;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.UpgradeKeyRequest.params)
}

// -------------------------------------------------------------------

// UpgradeKeyResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void UpgradeKeyResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode UpgradeKeyResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode UpgradeKeyResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.UpgradeKeyResponse.error_code)
  return _internal_error_code();
}
inline void UpgradeKeyResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void UpgradeKeyResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.UpgradeKeyResponse.error_code)
}

// .nugget.app.keymaster.KeyBlob blob = 2;
inline bool UpgradeKeyResponse::_internal_has_blob() const {
  return this != internal_default_instance() && blob_ != nullptr;
}
inline bool UpgradeKeyResponse::has_blob() const {
  return _internal_has_blob();
}
inline const ::nugget::app::keymaster::KeyBlob& UpgradeKeyResponse::_internal_blob() const {
  const ::nugget::app::keymaster::KeyBlob* p = blob_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyBlob&>(
      ::nugget::app::keymaster::_KeyBlob_default_instance_);
}
inline const ::nugget::app::keymaster::KeyBlob& UpgradeKeyResponse::blob() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.UpgradeKeyResponse.blob)
  return _internal_blob();
}
inline void UpgradeKeyResponse::unsafe_arena_set_allocated_blob(
    ::nugget::app::keymaster::KeyBlob* blob) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob_);
  }
  blob_ = blob;
  if (blob) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.UpgradeKeyResponse.blob)
}
inline ::nugget::app::keymaster::KeyBlob* UpgradeKeyResponse::release_blob() {
  
  ::nugget::app::keymaster::KeyBlob* temp = blob_;
  blob_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* UpgradeKeyResponse::unsafe_arena_release_blob() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.UpgradeKeyResponse.blob)
  
  ::nugget::app::keymaster::KeyBlob* temp = blob_;
  blob_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* UpgradeKeyResponse::_internal_mutable_blob() {
  
  if (blob_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyBlob>(GetArena());
    blob_ = p;
  }
  return blob_;
}
inline ::nugget::app::keymaster::KeyBlob* UpgradeKeyResponse::mutable_blob() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.UpgradeKeyResponse.blob)
  return _internal_mutable_blob();
}
inline void UpgradeKeyResponse::set_allocated_blob(::nugget::app::keymaster::KeyBlob* blob) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob_);
  }
  if (blob) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob)->GetArena();
    if (message_arena != submessage_arena) {
      blob = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blob, submessage_arena);
    }
    
  } else {
    
  }
  blob_ = blob;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.UpgradeKeyResponse.blob)
}

// -------------------------------------------------------------------

// DeleteKeyRequest

// .nugget.app.keymaster.KeyBlob blob = 1;
inline bool DeleteKeyRequest::_internal_has_blob() const {
  return this != internal_default_instance() && blob_ != nullptr;
}
inline bool DeleteKeyRequest::has_blob() const {
  return _internal_has_blob();
}
inline const ::nugget::app::keymaster::KeyBlob& DeleteKeyRequest::_internal_blob() const {
  const ::nugget::app::keymaster::KeyBlob* p = blob_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyBlob&>(
      ::nugget::app::keymaster::_KeyBlob_default_instance_);
}
inline const ::nugget::app::keymaster::KeyBlob& DeleteKeyRequest::blob() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.DeleteKeyRequest.blob)
  return _internal_blob();
}
inline void DeleteKeyRequest::unsafe_arena_set_allocated_blob(
    ::nugget::app::keymaster::KeyBlob* blob) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob_);
  }
  blob_ = blob;
  if (blob) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.DeleteKeyRequest.blob)
}
inline ::nugget::app::keymaster::KeyBlob* DeleteKeyRequest::release_blob() {
  
  ::nugget::app::keymaster::KeyBlob* temp = blob_;
  blob_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* DeleteKeyRequest::unsafe_arena_release_blob() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.DeleteKeyRequest.blob)
  
  ::nugget::app::keymaster::KeyBlob* temp = blob_;
  blob_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* DeleteKeyRequest::_internal_mutable_blob() {
  
  if (blob_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyBlob>(GetArena());
    blob_ = p;
  }
  return blob_;
}
inline ::nugget::app::keymaster::KeyBlob* DeleteKeyRequest::mutable_blob() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.DeleteKeyRequest.blob)
  return _internal_mutable_blob();
}
inline void DeleteKeyRequest::set_allocated_blob(::nugget::app::keymaster::KeyBlob* blob) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob_);
  }
  if (blob) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob)->GetArena();
    if (message_arena != submessage_arena) {
      blob = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blob, submessage_arena);
    }
    
  } else {
    
  }
  blob_ = blob;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.DeleteKeyRequest.blob)
}

// -------------------------------------------------------------------

// DeleteKeyResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void DeleteKeyResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode DeleteKeyResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode DeleteKeyResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.DeleteKeyResponse.error_code)
  return _internal_error_code();
}
inline void DeleteKeyResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void DeleteKeyResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.DeleteKeyResponse.error_code)
}

// -------------------------------------------------------------------

// DeleteAllKeysRequest

// -------------------------------------------------------------------

// DeleteAllKeysResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void DeleteAllKeysResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode DeleteAllKeysResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode DeleteAllKeysResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.DeleteAllKeysResponse.error_code)
  return _internal_error_code();
}
inline void DeleteAllKeysResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void DeleteAllKeysResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.DeleteAllKeysResponse.error_code)
}

// -------------------------------------------------------------------

// DestroyAttestationIdsRequest

// -------------------------------------------------------------------

// DestroyAttestationIdsResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void DestroyAttestationIdsResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode DestroyAttestationIdsResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode DestroyAttestationIdsResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.DestroyAttestationIdsResponse.error_code)
  return _internal_error_code();
}
inline void DestroyAttestationIdsResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void DestroyAttestationIdsResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.DestroyAttestationIdsResponse.error_code)
}

// -------------------------------------------------------------------

// BeginOperationRequest

// .nugget.app.keymaster.KeyPurpose purpose = 1;
inline void BeginOperationRequest::clear_purpose() {
  purpose_ = 0;
}
inline ::nugget::app::keymaster::KeyPurpose BeginOperationRequest::_internal_purpose() const {
  return static_cast< ::nugget::app::keymaster::KeyPurpose >(purpose_);
}
inline ::nugget::app::keymaster::KeyPurpose BeginOperationRequest::purpose() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.BeginOperationRequest.purpose)
  return _internal_purpose();
}
inline void BeginOperationRequest::_internal_set_purpose(::nugget::app::keymaster::KeyPurpose value) {
  
  purpose_ = value;
}
inline void BeginOperationRequest::set_purpose(::nugget::app::keymaster::KeyPurpose value) {
  _internal_set_purpose(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.BeginOperationRequest.purpose)
}

// .nugget.app.keymaster.KeyBlob blob = 2;
inline bool BeginOperationRequest::_internal_has_blob() const {
  return this != internal_default_instance() && blob_ != nullptr;
}
inline bool BeginOperationRequest::has_blob() const {
  return _internal_has_blob();
}
inline const ::nugget::app::keymaster::KeyBlob& BeginOperationRequest::_internal_blob() const {
  const ::nugget::app::keymaster::KeyBlob* p = blob_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyBlob&>(
      ::nugget::app::keymaster::_KeyBlob_default_instance_);
}
inline const ::nugget::app::keymaster::KeyBlob& BeginOperationRequest::blob() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.BeginOperationRequest.blob)
  return _internal_blob();
}
inline void BeginOperationRequest::unsafe_arena_set_allocated_blob(
    ::nugget::app::keymaster::KeyBlob* blob) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob_);
  }
  blob_ = blob;
  if (blob) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.BeginOperationRequest.blob)
}
inline ::nugget::app::keymaster::KeyBlob* BeginOperationRequest::release_blob() {
  
  ::nugget::app::keymaster::KeyBlob* temp = blob_;
  blob_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* BeginOperationRequest::unsafe_arena_release_blob() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.BeginOperationRequest.blob)
  
  ::nugget::app::keymaster::KeyBlob* temp = blob_;
  blob_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* BeginOperationRequest::_internal_mutable_blob() {
  
  if (blob_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyBlob>(GetArena());
    blob_ = p;
  }
  return blob_;
}
inline ::nugget::app::keymaster::KeyBlob* BeginOperationRequest::mutable_blob() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.BeginOperationRequest.blob)
  return _internal_mutable_blob();
}
inline void BeginOperationRequest::set_allocated_blob(::nugget::app::keymaster::KeyBlob* blob) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob_);
  }
  if (blob) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blob)->GetArena();
    if (message_arena != submessage_arena) {
      blob = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blob, submessage_arena);
    }
    
  } else {
    
  }
  blob_ = blob;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.BeginOperationRequest.blob)
}

// .nugget.app.keymaster.KeyParameters params = 3;
inline bool BeginOperationRequest::_internal_has_params() const {
  return this != internal_default_instance() && params_ != nullptr;
}
inline bool BeginOperationRequest::has_params() const {
  return _internal_has_params();
}
inline const ::nugget::app::keymaster::KeyParameters& BeginOperationRequest::_internal_params() const {
  const ::nugget::app::keymaster::KeyParameters* p = params_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyParameters&>(
      ::nugget::app::keymaster::_KeyParameters_default_instance_);
}
inline const ::nugget::app::keymaster::KeyParameters& BeginOperationRequest::params() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.BeginOperationRequest.params)
  return _internal_params();
}
inline void BeginOperationRequest::unsafe_arena_set_allocated_params(
    ::nugget::app::keymaster::KeyParameters* params) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  params_ = params;
  if (params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.BeginOperationRequest.params)
}
inline ::nugget::app::keymaster::KeyParameters* BeginOperationRequest::release_params() {
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* BeginOperationRequest::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.BeginOperationRequest.params)
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* BeginOperationRequest::_internal_mutable_params() {
  
  if (params_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyParameters>(GetArena());
    params_ = p;
  }
  return params_;
}
inline ::nugget::app::keymaster::KeyParameters* BeginOperationRequest::mutable_params() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.BeginOperationRequest.params)
  return _internal_mutable_params();
}
inline void BeginOperationRequest::set_allocated_params(::nugget::app::keymaster::KeyParameters* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params)->GetArena();
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    
  } else {
    
  }
  params_ = params;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.BeginOperationRequest.params)
}

// .nugget.app.keymaster.HardwareAuthToken auth_token = 4;
inline bool BeginOperationRequest::_internal_has_auth_token() const {
  return this != internal_default_instance() && auth_token_ != nullptr;
}
inline bool BeginOperationRequest::has_auth_token() const {
  return _internal_has_auth_token();
}
inline const ::nugget::app::keymaster::HardwareAuthToken& BeginOperationRequest::_internal_auth_token() const {
  const ::nugget::app::keymaster::HardwareAuthToken* p = auth_token_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::HardwareAuthToken&>(
      ::nugget::app::keymaster::_HardwareAuthToken_default_instance_);
}
inline const ::nugget::app::keymaster::HardwareAuthToken& BeginOperationRequest::auth_token() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.BeginOperationRequest.auth_token)
  return _internal_auth_token();
}
inline void BeginOperationRequest::unsafe_arena_set_allocated_auth_token(
    ::nugget::app::keymaster::HardwareAuthToken* auth_token) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(auth_token_);
  }
  auth_token_ = auth_token;
  if (auth_token) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.BeginOperationRequest.auth_token)
}
inline ::nugget::app::keymaster::HardwareAuthToken* BeginOperationRequest::release_auth_token() {
  
  ::nugget::app::keymaster::HardwareAuthToken* temp = auth_token_;
  auth_token_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::HardwareAuthToken* BeginOperationRequest::unsafe_arena_release_auth_token() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.BeginOperationRequest.auth_token)
  
  ::nugget::app::keymaster::HardwareAuthToken* temp = auth_token_;
  auth_token_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::HardwareAuthToken* BeginOperationRequest::_internal_mutable_auth_token() {
  
  if (auth_token_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::HardwareAuthToken>(GetArena());
    auth_token_ = p;
  }
  return auth_token_;
}
inline ::nugget::app::keymaster::HardwareAuthToken* BeginOperationRequest::mutable_auth_token() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.BeginOperationRequest.auth_token)
  return _internal_mutable_auth_token();
}
inline void BeginOperationRequest::set_allocated_auth_token(::nugget::app::keymaster::HardwareAuthToken* auth_token) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(auth_token_);
  }
  if (auth_token) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(auth_token)->GetArena();
    if (message_arena != submessage_arena) {
      auth_token = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, auth_token, submessage_arena);
    }
    
  } else {
    
  }
  auth_token_ = auth_token;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.BeginOperationRequest.auth_token)
}

// -------------------------------------------------------------------

// BeginOperationResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void BeginOperationResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode BeginOperationResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode BeginOperationResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.BeginOperationResponse.error_code)
  return _internal_error_code();
}
inline void BeginOperationResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void BeginOperationResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.BeginOperationResponse.error_code)
}

// .nugget.app.keymaster.KeyParameters params = 2;
inline bool BeginOperationResponse::_internal_has_params() const {
  return this != internal_default_instance() && params_ != nullptr;
}
inline bool BeginOperationResponse::has_params() const {
  return _internal_has_params();
}
inline const ::nugget::app::keymaster::KeyParameters& BeginOperationResponse::_internal_params() const {
  const ::nugget::app::keymaster::KeyParameters* p = params_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyParameters&>(
      ::nugget::app::keymaster::_KeyParameters_default_instance_);
}
inline const ::nugget::app::keymaster::KeyParameters& BeginOperationResponse::params() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.BeginOperationResponse.params)
  return _internal_params();
}
inline void BeginOperationResponse::unsafe_arena_set_allocated_params(
    ::nugget::app::keymaster::KeyParameters* params) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  params_ = params;
  if (params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.BeginOperationResponse.params)
}
inline ::nugget::app::keymaster::KeyParameters* BeginOperationResponse::release_params() {
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* BeginOperationResponse::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.BeginOperationResponse.params)
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* BeginOperationResponse::_internal_mutable_params() {
  
  if (params_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyParameters>(GetArena());
    params_ = p;
  }
  return params_;
}
inline ::nugget::app::keymaster::KeyParameters* BeginOperationResponse::mutable_params() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.BeginOperationResponse.params)
  return _internal_mutable_params();
}
inline void BeginOperationResponse::set_allocated_params(::nugget::app::keymaster::KeyParameters* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params)->GetArena();
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    
  } else {
    
  }
  params_ = params;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.BeginOperationResponse.params)
}

// .nugget.app.keymaster.OperationHandle handle = 3;
inline bool BeginOperationResponse::_internal_has_handle() const {
  return this != internal_default_instance() && handle_ != nullptr;
}
inline bool BeginOperationResponse::has_handle() const {
  return _internal_has_handle();
}
inline const ::nugget::app::keymaster::OperationHandle& BeginOperationResponse::_internal_handle() const {
  const ::nugget::app::keymaster::OperationHandle* p = handle_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::OperationHandle&>(
      ::nugget::app::keymaster::_OperationHandle_default_instance_);
}
inline const ::nugget::app::keymaster::OperationHandle& BeginOperationResponse::handle() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.BeginOperationResponse.handle)
  return _internal_handle();
}
inline void BeginOperationResponse::unsafe_arena_set_allocated_handle(
    ::nugget::app::keymaster::OperationHandle* handle) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle_);
  }
  handle_ = handle;
  if (handle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.BeginOperationResponse.handle)
}
inline ::nugget::app::keymaster::OperationHandle* BeginOperationResponse::release_handle() {
  
  ::nugget::app::keymaster::OperationHandle* temp = handle_;
  handle_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::OperationHandle* BeginOperationResponse::unsafe_arena_release_handle() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.BeginOperationResponse.handle)
  
  ::nugget::app::keymaster::OperationHandle* temp = handle_;
  handle_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::OperationHandle* BeginOperationResponse::_internal_mutable_handle() {
  
  if (handle_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::OperationHandle>(GetArena());
    handle_ = p;
  }
  return handle_;
}
inline ::nugget::app::keymaster::OperationHandle* BeginOperationResponse::mutable_handle() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.BeginOperationResponse.handle)
  return _internal_mutable_handle();
}
inline void BeginOperationResponse::set_allocated_handle(::nugget::app::keymaster::OperationHandle* handle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle_);
  }
  if (handle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle)->GetArena();
    if (message_arena != submessage_arena) {
      handle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, handle, submessage_arena);
    }
    
  } else {
    
  }
  handle_ = handle;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.BeginOperationResponse.handle)
}

// .nugget.app.keymaster.Algorithm algorithm = 4;
inline void BeginOperationResponse::clear_algorithm() {
  algorithm_ = 0;
}
inline ::nugget::app::keymaster::Algorithm BeginOperationResponse::_internal_algorithm() const {
  return static_cast< ::nugget::app::keymaster::Algorithm >(algorithm_);
}
inline ::nugget::app::keymaster::Algorithm BeginOperationResponse::algorithm() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.BeginOperationResponse.algorithm)
  return _internal_algorithm();
}
inline void BeginOperationResponse::_internal_set_algorithm(::nugget::app::keymaster::Algorithm value) {
  
  algorithm_ = value;
}
inline void BeginOperationResponse::set_algorithm(::nugget::app::keymaster::Algorithm value) {
  _internal_set_algorithm(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.BeginOperationResponse.algorithm)
}

// uint32 key_bits = 5;
inline void BeginOperationResponse::clear_key_bits() {
  key_bits_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BeginOperationResponse::_internal_key_bits() const {
  return key_bits_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BeginOperationResponse::key_bits() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.BeginOperationResponse.key_bits)
  return _internal_key_bits();
}
inline void BeginOperationResponse::_internal_set_key_bits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  key_bits_ = value;
}
inline void BeginOperationResponse::set_key_bits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_key_bits(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.BeginOperationResponse.key_bits)
}

// -------------------------------------------------------------------

// UpdateOperationRequest

// .nugget.app.keymaster.OperationHandle handle = 1;
inline bool UpdateOperationRequest::_internal_has_handle() const {
  return this != internal_default_instance() && handle_ != nullptr;
}
inline bool UpdateOperationRequest::has_handle() const {
  return _internal_has_handle();
}
inline const ::nugget::app::keymaster::OperationHandle& UpdateOperationRequest::_internal_handle() const {
  const ::nugget::app::keymaster::OperationHandle* p = handle_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::OperationHandle&>(
      ::nugget::app::keymaster::_OperationHandle_default_instance_);
}
inline const ::nugget::app::keymaster::OperationHandle& UpdateOperationRequest::handle() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.UpdateOperationRequest.handle)
  return _internal_handle();
}
inline void UpdateOperationRequest::unsafe_arena_set_allocated_handle(
    ::nugget::app::keymaster::OperationHandle* handle) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle_);
  }
  handle_ = handle;
  if (handle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.UpdateOperationRequest.handle)
}
inline ::nugget::app::keymaster::OperationHandle* UpdateOperationRequest::release_handle() {
  
  ::nugget::app::keymaster::OperationHandle* temp = handle_;
  handle_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::OperationHandle* UpdateOperationRequest::unsafe_arena_release_handle() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.UpdateOperationRequest.handle)
  
  ::nugget::app::keymaster::OperationHandle* temp = handle_;
  handle_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::OperationHandle* UpdateOperationRequest::_internal_mutable_handle() {
  
  if (handle_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::OperationHandle>(GetArena());
    handle_ = p;
  }
  return handle_;
}
inline ::nugget::app::keymaster::OperationHandle* UpdateOperationRequest::mutable_handle() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.UpdateOperationRequest.handle)
  return _internal_mutable_handle();
}
inline void UpdateOperationRequest::set_allocated_handle(::nugget::app::keymaster::OperationHandle* handle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle_);
  }
  if (handle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle)->GetArena();
    if (message_arena != submessage_arena) {
      handle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, handle, submessage_arena);
    }
    
  } else {
    
  }
  handle_ = handle;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.UpdateOperationRequest.handle)
}

// .nugget.app.keymaster.KeyParameters params = 2;
inline bool UpdateOperationRequest::_internal_has_params() const {
  return this != internal_default_instance() && params_ != nullptr;
}
inline bool UpdateOperationRequest::has_params() const {
  return _internal_has_params();
}
inline const ::nugget::app::keymaster::KeyParameters& UpdateOperationRequest::_internal_params() const {
  const ::nugget::app::keymaster::KeyParameters* p = params_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyParameters&>(
      ::nugget::app::keymaster::_KeyParameters_default_instance_);
}
inline const ::nugget::app::keymaster::KeyParameters& UpdateOperationRequest::params() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.UpdateOperationRequest.params)
  return _internal_params();
}
inline void UpdateOperationRequest::unsafe_arena_set_allocated_params(
    ::nugget::app::keymaster::KeyParameters* params) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  params_ = params;
  if (params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.UpdateOperationRequest.params)
}
inline ::nugget::app::keymaster::KeyParameters* UpdateOperationRequest::release_params() {
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* UpdateOperationRequest::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.UpdateOperationRequest.params)
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* UpdateOperationRequest::_internal_mutable_params() {
  
  if (params_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyParameters>(GetArena());
    params_ = p;
  }
  return params_;
}
inline ::nugget::app::keymaster::KeyParameters* UpdateOperationRequest::mutable_params() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.UpdateOperationRequest.params)
  return _internal_mutable_params();
}
inline void UpdateOperationRequest::set_allocated_params(::nugget::app::keymaster::KeyParameters* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params)->GetArena();
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    
  } else {
    
  }
  params_ = params;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.UpdateOperationRequest.params)
}

// bytes input = 3;
inline void UpdateOperationRequest::clear_input() {
  input_.ClearToEmpty();
}
inline const std::string& UpdateOperationRequest::input() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.UpdateOperationRequest.input)
  return _internal_input();
}
inline void UpdateOperationRequest::set_input(const std::string& value) {
  _internal_set_input(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.UpdateOperationRequest.input)
}
inline std::string* UpdateOperationRequest::mutable_input() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.UpdateOperationRequest.input)
  return _internal_mutable_input();
}
inline const std::string& UpdateOperationRequest::_internal_input() const {
  return input_.Get();
}
inline void UpdateOperationRequest::_internal_set_input(const std::string& value) {
  
  input_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UpdateOperationRequest::set_input(std::string&& value) {
  
  input_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.UpdateOperationRequest.input)
}
inline void UpdateOperationRequest::set_input(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  input_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.UpdateOperationRequest.input)
}
inline void UpdateOperationRequest::set_input(const void* value,
    size_t size) {
  
  input_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.UpdateOperationRequest.input)
}
inline std::string* UpdateOperationRequest::_internal_mutable_input() {
  
  return input_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UpdateOperationRequest::release_input() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.UpdateOperationRequest.input)
  return input_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UpdateOperationRequest::set_allocated_input(std::string* input) {
  if (input != nullptr) {
    
  } else {
    
  }
  input_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), input,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.UpdateOperationRequest.input)
}

// .nugget.app.keymaster.HardwareAuthToken auth_token = 4;
inline bool UpdateOperationRequest::_internal_has_auth_token() const {
  return this != internal_default_instance() && auth_token_ != nullptr;
}
inline bool UpdateOperationRequest::has_auth_token() const {
  return _internal_has_auth_token();
}
inline const ::nugget::app::keymaster::HardwareAuthToken& UpdateOperationRequest::_internal_auth_token() const {
  const ::nugget::app::keymaster::HardwareAuthToken* p = auth_token_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::HardwareAuthToken&>(
      ::nugget::app::keymaster::_HardwareAuthToken_default_instance_);
}
inline const ::nugget::app::keymaster::HardwareAuthToken& UpdateOperationRequest::auth_token() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.UpdateOperationRequest.auth_token)
  return _internal_auth_token();
}
inline void UpdateOperationRequest::unsafe_arena_set_allocated_auth_token(
    ::nugget::app::keymaster::HardwareAuthToken* auth_token) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(auth_token_);
  }
  auth_token_ = auth_token;
  if (auth_token) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.UpdateOperationRequest.auth_token)
}
inline ::nugget::app::keymaster::HardwareAuthToken* UpdateOperationRequest::release_auth_token() {
  
  ::nugget::app::keymaster::HardwareAuthToken* temp = auth_token_;
  auth_token_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::HardwareAuthToken* UpdateOperationRequest::unsafe_arena_release_auth_token() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.UpdateOperationRequest.auth_token)
  
  ::nugget::app::keymaster::HardwareAuthToken* temp = auth_token_;
  auth_token_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::HardwareAuthToken* UpdateOperationRequest::_internal_mutable_auth_token() {
  
  if (auth_token_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::HardwareAuthToken>(GetArena());
    auth_token_ = p;
  }
  return auth_token_;
}
inline ::nugget::app::keymaster::HardwareAuthToken* UpdateOperationRequest::mutable_auth_token() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.UpdateOperationRequest.auth_token)
  return _internal_mutable_auth_token();
}
inline void UpdateOperationRequest::set_allocated_auth_token(::nugget::app::keymaster::HardwareAuthToken* auth_token) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(auth_token_);
  }
  if (auth_token) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(auth_token)->GetArena();
    if (message_arena != submessage_arena) {
      auth_token = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, auth_token, submessage_arena);
    }
    
  } else {
    
  }
  auth_token_ = auth_token;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.UpdateOperationRequest.auth_token)
}

// .nugget.app.keymaster.VerificationToken verification_token = 5;
inline bool UpdateOperationRequest::_internal_has_verification_token() const {
  return this != internal_default_instance() && verification_token_ != nullptr;
}
inline bool UpdateOperationRequest::has_verification_token() const {
  return _internal_has_verification_token();
}
inline const ::nugget::app::keymaster::VerificationToken& UpdateOperationRequest::_internal_verification_token() const {
  const ::nugget::app::keymaster::VerificationToken* p = verification_token_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::VerificationToken&>(
      ::nugget::app::keymaster::_VerificationToken_default_instance_);
}
inline const ::nugget::app::keymaster::VerificationToken& UpdateOperationRequest::verification_token() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.UpdateOperationRequest.verification_token)
  return _internal_verification_token();
}
inline void UpdateOperationRequest::unsafe_arena_set_allocated_verification_token(
    ::nugget::app::keymaster::VerificationToken* verification_token) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(verification_token_);
  }
  verification_token_ = verification_token;
  if (verification_token) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.UpdateOperationRequest.verification_token)
}
inline ::nugget::app::keymaster::VerificationToken* UpdateOperationRequest::release_verification_token() {
  
  ::nugget::app::keymaster::VerificationToken* temp = verification_token_;
  verification_token_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::VerificationToken* UpdateOperationRequest::unsafe_arena_release_verification_token() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.UpdateOperationRequest.verification_token)
  
  ::nugget::app::keymaster::VerificationToken* temp = verification_token_;
  verification_token_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::VerificationToken* UpdateOperationRequest::_internal_mutable_verification_token() {
  
  if (verification_token_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::VerificationToken>(GetArena());
    verification_token_ = p;
  }
  return verification_token_;
}
inline ::nugget::app::keymaster::VerificationToken* UpdateOperationRequest::mutable_verification_token() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.UpdateOperationRequest.verification_token)
  return _internal_mutable_verification_token();
}
inline void UpdateOperationRequest::set_allocated_verification_token(::nugget::app::keymaster::VerificationToken* verification_token) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(verification_token_);
  }
  if (verification_token) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(verification_token)->GetArena();
    if (message_arena != submessage_arena) {
      verification_token = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, verification_token, submessage_arena);
    }
    
  } else {
    
  }
  verification_token_ = verification_token;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.UpdateOperationRequest.verification_token)
}

// -------------------------------------------------------------------

// UpdateOperationResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void UpdateOperationResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode UpdateOperationResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode UpdateOperationResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.UpdateOperationResponse.error_code)
  return _internal_error_code();
}
inline void UpdateOperationResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void UpdateOperationResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.UpdateOperationResponse.error_code)
}

// uint32 consumed = 2;
inline void UpdateOperationResponse::clear_consumed() {
  consumed_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UpdateOperationResponse::_internal_consumed() const {
  return consumed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UpdateOperationResponse::consumed() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.UpdateOperationResponse.consumed)
  return _internal_consumed();
}
inline void UpdateOperationResponse::_internal_set_consumed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  consumed_ = value;
}
inline void UpdateOperationResponse::set_consumed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_consumed(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.UpdateOperationResponse.consumed)
}

// .nugget.app.keymaster.KeyParameters params = 3;
inline bool UpdateOperationResponse::_internal_has_params() const {
  return this != internal_default_instance() && params_ != nullptr;
}
inline bool UpdateOperationResponse::has_params() const {
  return _internal_has_params();
}
inline const ::nugget::app::keymaster::KeyParameters& UpdateOperationResponse::_internal_params() const {
  const ::nugget::app::keymaster::KeyParameters* p = params_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyParameters&>(
      ::nugget::app::keymaster::_KeyParameters_default_instance_);
}
inline const ::nugget::app::keymaster::KeyParameters& UpdateOperationResponse::params() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.UpdateOperationResponse.params)
  return _internal_params();
}
inline void UpdateOperationResponse::unsafe_arena_set_allocated_params(
    ::nugget::app::keymaster::KeyParameters* params) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  params_ = params;
  if (params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.UpdateOperationResponse.params)
}
inline ::nugget::app::keymaster::KeyParameters* UpdateOperationResponse::release_params() {
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* UpdateOperationResponse::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.UpdateOperationResponse.params)
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* UpdateOperationResponse::_internal_mutable_params() {
  
  if (params_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyParameters>(GetArena());
    params_ = p;
  }
  return params_;
}
inline ::nugget::app::keymaster::KeyParameters* UpdateOperationResponse::mutable_params() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.UpdateOperationResponse.params)
  return _internal_mutable_params();
}
inline void UpdateOperationResponse::set_allocated_params(::nugget::app::keymaster::KeyParameters* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params)->GetArena();
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    
  } else {
    
  }
  params_ = params;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.UpdateOperationResponse.params)
}

// bytes output = 4;
inline void UpdateOperationResponse::clear_output() {
  output_.ClearToEmpty();
}
inline const std::string& UpdateOperationResponse::output() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.UpdateOperationResponse.output)
  return _internal_output();
}
inline void UpdateOperationResponse::set_output(const std::string& value) {
  _internal_set_output(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.UpdateOperationResponse.output)
}
inline std::string* UpdateOperationResponse::mutable_output() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.UpdateOperationResponse.output)
  return _internal_mutable_output();
}
inline const std::string& UpdateOperationResponse::_internal_output() const {
  return output_.Get();
}
inline void UpdateOperationResponse::_internal_set_output(const std::string& value) {
  
  output_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UpdateOperationResponse::set_output(std::string&& value) {
  
  output_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.UpdateOperationResponse.output)
}
inline void UpdateOperationResponse::set_output(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  output_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.UpdateOperationResponse.output)
}
inline void UpdateOperationResponse::set_output(const void* value,
    size_t size) {
  
  output_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.UpdateOperationResponse.output)
}
inline std::string* UpdateOperationResponse::_internal_mutable_output() {
  
  return output_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UpdateOperationResponse::release_output() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.UpdateOperationResponse.output)
  return output_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UpdateOperationResponse::set_allocated_output(std::string* output) {
  if (output != nullptr) {
    
  } else {
    
  }
  output_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), output,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.UpdateOperationResponse.output)
}

// -------------------------------------------------------------------

// FinishOperationRequest

// .nugget.app.keymaster.OperationHandle handle = 1;
inline bool FinishOperationRequest::_internal_has_handle() const {
  return this != internal_default_instance() && handle_ != nullptr;
}
inline bool FinishOperationRequest::has_handle() const {
  return _internal_has_handle();
}
inline const ::nugget::app::keymaster::OperationHandle& FinishOperationRequest::_internal_handle() const {
  const ::nugget::app::keymaster::OperationHandle* p = handle_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::OperationHandle&>(
      ::nugget::app::keymaster::_OperationHandle_default_instance_);
}
inline const ::nugget::app::keymaster::OperationHandle& FinishOperationRequest::handle() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.FinishOperationRequest.handle)
  return _internal_handle();
}
inline void FinishOperationRequest::unsafe_arena_set_allocated_handle(
    ::nugget::app::keymaster::OperationHandle* handle) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle_);
  }
  handle_ = handle;
  if (handle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.FinishOperationRequest.handle)
}
inline ::nugget::app::keymaster::OperationHandle* FinishOperationRequest::release_handle() {
  
  ::nugget::app::keymaster::OperationHandle* temp = handle_;
  handle_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::OperationHandle* FinishOperationRequest::unsafe_arena_release_handle() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.FinishOperationRequest.handle)
  
  ::nugget::app::keymaster::OperationHandle* temp = handle_;
  handle_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::OperationHandle* FinishOperationRequest::_internal_mutable_handle() {
  
  if (handle_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::OperationHandle>(GetArena());
    handle_ = p;
  }
  return handle_;
}
inline ::nugget::app::keymaster::OperationHandle* FinishOperationRequest::mutable_handle() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.FinishOperationRequest.handle)
  return _internal_mutable_handle();
}
inline void FinishOperationRequest::set_allocated_handle(::nugget::app::keymaster::OperationHandle* handle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle_);
  }
  if (handle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle)->GetArena();
    if (message_arena != submessage_arena) {
      handle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, handle, submessage_arena);
    }
    
  } else {
    
  }
  handle_ = handle;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.FinishOperationRequest.handle)
}

// .nugget.app.keymaster.KeyParameters params = 2;
inline bool FinishOperationRequest::_internal_has_params() const {
  return this != internal_default_instance() && params_ != nullptr;
}
inline bool FinishOperationRequest::has_params() const {
  return _internal_has_params();
}
inline const ::nugget::app::keymaster::KeyParameters& FinishOperationRequest::_internal_params() const {
  const ::nugget::app::keymaster::KeyParameters* p = params_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyParameters&>(
      ::nugget::app::keymaster::_KeyParameters_default_instance_);
}
inline const ::nugget::app::keymaster::KeyParameters& FinishOperationRequest::params() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.FinishOperationRequest.params)
  return _internal_params();
}
inline void FinishOperationRequest::unsafe_arena_set_allocated_params(
    ::nugget::app::keymaster::KeyParameters* params) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  params_ = params;
  if (params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.FinishOperationRequest.params)
}
inline ::nugget::app::keymaster::KeyParameters* FinishOperationRequest::release_params() {
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* FinishOperationRequest::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.FinishOperationRequest.params)
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* FinishOperationRequest::_internal_mutable_params() {
  
  if (params_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyParameters>(GetArena());
    params_ = p;
  }
  return params_;
}
inline ::nugget::app::keymaster::KeyParameters* FinishOperationRequest::mutable_params() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.FinishOperationRequest.params)
  return _internal_mutable_params();
}
inline void FinishOperationRequest::set_allocated_params(::nugget::app::keymaster::KeyParameters* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params)->GetArena();
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    
  } else {
    
  }
  params_ = params;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.FinishOperationRequest.params)
}

// bytes input = 3;
inline void FinishOperationRequest::clear_input() {
  input_.ClearToEmpty();
}
inline const std::string& FinishOperationRequest::input() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.FinishOperationRequest.input)
  return _internal_input();
}
inline void FinishOperationRequest::set_input(const std::string& value) {
  _internal_set_input(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.FinishOperationRequest.input)
}
inline std::string* FinishOperationRequest::mutable_input() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.FinishOperationRequest.input)
  return _internal_mutable_input();
}
inline const std::string& FinishOperationRequest::_internal_input() const {
  return input_.Get();
}
inline void FinishOperationRequest::_internal_set_input(const std::string& value) {
  
  input_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void FinishOperationRequest::set_input(std::string&& value) {
  
  input_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.FinishOperationRequest.input)
}
inline void FinishOperationRequest::set_input(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  input_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.FinishOperationRequest.input)
}
inline void FinishOperationRequest::set_input(const void* value,
    size_t size) {
  
  input_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.FinishOperationRequest.input)
}
inline std::string* FinishOperationRequest::_internal_mutable_input() {
  
  return input_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* FinishOperationRequest::release_input() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.FinishOperationRequest.input)
  return input_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void FinishOperationRequest::set_allocated_input(std::string* input) {
  if (input != nullptr) {
    
  } else {
    
  }
  input_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), input,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.FinishOperationRequest.input)
}

// bytes signature = 4;
inline void FinishOperationRequest::clear_signature() {
  signature_.ClearToEmpty();
}
inline const std::string& FinishOperationRequest::signature() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.FinishOperationRequest.signature)
  return _internal_signature();
}
inline void FinishOperationRequest::set_signature(const std::string& value) {
  _internal_set_signature(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.FinishOperationRequest.signature)
}
inline std::string* FinishOperationRequest::mutable_signature() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.FinishOperationRequest.signature)
  return _internal_mutable_signature();
}
inline const std::string& FinishOperationRequest::_internal_signature() const {
  return signature_.Get();
}
inline void FinishOperationRequest::_internal_set_signature(const std::string& value) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void FinishOperationRequest::set_signature(std::string&& value) {
  
  signature_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.FinishOperationRequest.signature)
}
inline void FinishOperationRequest::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.FinishOperationRequest.signature)
}
inline void FinishOperationRequest::set_signature(const void* value,
    size_t size) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.FinishOperationRequest.signature)
}
inline std::string* FinishOperationRequest::_internal_mutable_signature() {
  
  return signature_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* FinishOperationRequest::release_signature() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.FinishOperationRequest.signature)
  return signature_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void FinishOperationRequest::set_allocated_signature(std::string* signature) {
  if (signature != nullptr) {
    
  } else {
    
  }
  signature_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), signature,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.FinishOperationRequest.signature)
}

// .nugget.app.keymaster.HardwareAuthToken auth_token = 5;
inline bool FinishOperationRequest::_internal_has_auth_token() const {
  return this != internal_default_instance() && auth_token_ != nullptr;
}
inline bool FinishOperationRequest::has_auth_token() const {
  return _internal_has_auth_token();
}
inline const ::nugget::app::keymaster::HardwareAuthToken& FinishOperationRequest::_internal_auth_token() const {
  const ::nugget::app::keymaster::HardwareAuthToken* p = auth_token_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::HardwareAuthToken&>(
      ::nugget::app::keymaster::_HardwareAuthToken_default_instance_);
}
inline const ::nugget::app::keymaster::HardwareAuthToken& FinishOperationRequest::auth_token() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.FinishOperationRequest.auth_token)
  return _internal_auth_token();
}
inline void FinishOperationRequest::unsafe_arena_set_allocated_auth_token(
    ::nugget::app::keymaster::HardwareAuthToken* auth_token) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(auth_token_);
  }
  auth_token_ = auth_token;
  if (auth_token) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.FinishOperationRequest.auth_token)
}
inline ::nugget::app::keymaster::HardwareAuthToken* FinishOperationRequest::release_auth_token() {
  
  ::nugget::app::keymaster::HardwareAuthToken* temp = auth_token_;
  auth_token_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::HardwareAuthToken* FinishOperationRequest::unsafe_arena_release_auth_token() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.FinishOperationRequest.auth_token)
  
  ::nugget::app::keymaster::HardwareAuthToken* temp = auth_token_;
  auth_token_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::HardwareAuthToken* FinishOperationRequest::_internal_mutable_auth_token() {
  
  if (auth_token_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::HardwareAuthToken>(GetArena());
    auth_token_ = p;
  }
  return auth_token_;
}
inline ::nugget::app::keymaster::HardwareAuthToken* FinishOperationRequest::mutable_auth_token() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.FinishOperationRequest.auth_token)
  return _internal_mutable_auth_token();
}
inline void FinishOperationRequest::set_allocated_auth_token(::nugget::app::keymaster::HardwareAuthToken* auth_token) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(auth_token_);
  }
  if (auth_token) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(auth_token)->GetArena();
    if (message_arena != submessage_arena) {
      auth_token = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, auth_token, submessage_arena);
    }
    
  } else {
    
  }
  auth_token_ = auth_token;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.FinishOperationRequest.auth_token)
}

// .nugget.app.keymaster.VerificationToken verification_token = 6;
inline bool FinishOperationRequest::_internal_has_verification_token() const {
  return this != internal_default_instance() && verification_token_ != nullptr;
}
inline bool FinishOperationRequest::has_verification_token() const {
  return _internal_has_verification_token();
}
inline const ::nugget::app::keymaster::VerificationToken& FinishOperationRequest::_internal_verification_token() const {
  const ::nugget::app::keymaster::VerificationToken* p = verification_token_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::VerificationToken&>(
      ::nugget::app::keymaster::_VerificationToken_default_instance_);
}
inline const ::nugget::app::keymaster::VerificationToken& FinishOperationRequest::verification_token() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.FinishOperationRequest.verification_token)
  return _internal_verification_token();
}
inline void FinishOperationRequest::unsafe_arena_set_allocated_verification_token(
    ::nugget::app::keymaster::VerificationToken* verification_token) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(verification_token_);
  }
  verification_token_ = verification_token;
  if (verification_token) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.FinishOperationRequest.verification_token)
}
inline ::nugget::app::keymaster::VerificationToken* FinishOperationRequest::release_verification_token() {
  
  ::nugget::app::keymaster::VerificationToken* temp = verification_token_;
  verification_token_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::VerificationToken* FinishOperationRequest::unsafe_arena_release_verification_token() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.FinishOperationRequest.verification_token)
  
  ::nugget::app::keymaster::VerificationToken* temp = verification_token_;
  verification_token_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::VerificationToken* FinishOperationRequest::_internal_mutable_verification_token() {
  
  if (verification_token_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::VerificationToken>(GetArena());
    verification_token_ = p;
  }
  return verification_token_;
}
inline ::nugget::app::keymaster::VerificationToken* FinishOperationRequest::mutable_verification_token() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.FinishOperationRequest.verification_token)
  return _internal_mutable_verification_token();
}
inline void FinishOperationRequest::set_allocated_verification_token(::nugget::app::keymaster::VerificationToken* verification_token) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(verification_token_);
  }
  if (verification_token) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(verification_token)->GetArena();
    if (message_arena != submessage_arena) {
      verification_token = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, verification_token, submessage_arena);
    }
    
  } else {
    
  }
  verification_token_ = verification_token;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.FinishOperationRequest.verification_token)
}

// -------------------------------------------------------------------

// FinishOperationResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void FinishOperationResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode FinishOperationResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode FinishOperationResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.FinishOperationResponse.error_code)
  return _internal_error_code();
}
inline void FinishOperationResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void FinishOperationResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.FinishOperationResponse.error_code)
}

// .nugget.app.keymaster.KeyParameters params = 2;
inline bool FinishOperationResponse::_internal_has_params() const {
  return this != internal_default_instance() && params_ != nullptr;
}
inline bool FinishOperationResponse::has_params() const {
  return _internal_has_params();
}
inline const ::nugget::app::keymaster::KeyParameters& FinishOperationResponse::_internal_params() const {
  const ::nugget::app::keymaster::KeyParameters* p = params_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyParameters&>(
      ::nugget::app::keymaster::_KeyParameters_default_instance_);
}
inline const ::nugget::app::keymaster::KeyParameters& FinishOperationResponse::params() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.FinishOperationResponse.params)
  return _internal_params();
}
inline void FinishOperationResponse::unsafe_arena_set_allocated_params(
    ::nugget::app::keymaster::KeyParameters* params) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  params_ = params;
  if (params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.FinishOperationResponse.params)
}
inline ::nugget::app::keymaster::KeyParameters* FinishOperationResponse::release_params() {
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* FinishOperationResponse::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.FinishOperationResponse.params)
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* FinishOperationResponse::_internal_mutable_params() {
  
  if (params_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyParameters>(GetArena());
    params_ = p;
  }
  return params_;
}
inline ::nugget::app::keymaster::KeyParameters* FinishOperationResponse::mutable_params() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.FinishOperationResponse.params)
  return _internal_mutable_params();
}
inline void FinishOperationResponse::set_allocated_params(::nugget::app::keymaster::KeyParameters* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params)->GetArena();
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    
  } else {
    
  }
  params_ = params;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.FinishOperationResponse.params)
}

// bytes output = 3;
inline void FinishOperationResponse::clear_output() {
  output_.ClearToEmpty();
}
inline const std::string& FinishOperationResponse::output() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.FinishOperationResponse.output)
  return _internal_output();
}
inline void FinishOperationResponse::set_output(const std::string& value) {
  _internal_set_output(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.FinishOperationResponse.output)
}
inline std::string* FinishOperationResponse::mutable_output() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.FinishOperationResponse.output)
  return _internal_mutable_output();
}
inline const std::string& FinishOperationResponse::_internal_output() const {
  return output_.Get();
}
inline void FinishOperationResponse::_internal_set_output(const std::string& value) {
  
  output_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void FinishOperationResponse::set_output(std::string&& value) {
  
  output_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.FinishOperationResponse.output)
}
inline void FinishOperationResponse::set_output(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  output_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.FinishOperationResponse.output)
}
inline void FinishOperationResponse::set_output(const void* value,
    size_t size) {
  
  output_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.FinishOperationResponse.output)
}
inline std::string* FinishOperationResponse::_internal_mutable_output() {
  
  return output_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* FinishOperationResponse::release_output() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.FinishOperationResponse.output)
  return output_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void FinishOperationResponse::set_allocated_output(std::string* output) {
  if (output != nullptr) {
    
  } else {
    
  }
  output_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), output,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.FinishOperationResponse.output)
}

// -------------------------------------------------------------------

// AbortOperationRequest

// .nugget.app.keymaster.OperationHandle handle = 1;
inline bool AbortOperationRequest::_internal_has_handle() const {
  return this != internal_default_instance() && handle_ != nullptr;
}
inline bool AbortOperationRequest::has_handle() const {
  return _internal_has_handle();
}
inline const ::nugget::app::keymaster::OperationHandle& AbortOperationRequest::_internal_handle() const {
  const ::nugget::app::keymaster::OperationHandle* p = handle_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::OperationHandle&>(
      ::nugget::app::keymaster::_OperationHandle_default_instance_);
}
inline const ::nugget::app::keymaster::OperationHandle& AbortOperationRequest::handle() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.AbortOperationRequest.handle)
  return _internal_handle();
}
inline void AbortOperationRequest::unsafe_arena_set_allocated_handle(
    ::nugget::app::keymaster::OperationHandle* handle) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle_);
  }
  handle_ = handle;
  if (handle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.AbortOperationRequest.handle)
}
inline ::nugget::app::keymaster::OperationHandle* AbortOperationRequest::release_handle() {
  
  ::nugget::app::keymaster::OperationHandle* temp = handle_;
  handle_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::OperationHandle* AbortOperationRequest::unsafe_arena_release_handle() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.AbortOperationRequest.handle)
  
  ::nugget::app::keymaster::OperationHandle* temp = handle_;
  handle_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::OperationHandle* AbortOperationRequest::_internal_mutable_handle() {
  
  if (handle_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::OperationHandle>(GetArena());
    handle_ = p;
  }
  return handle_;
}
inline ::nugget::app::keymaster::OperationHandle* AbortOperationRequest::mutable_handle() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.AbortOperationRequest.handle)
  return _internal_mutable_handle();
}
inline void AbortOperationRequest::set_allocated_handle(::nugget::app::keymaster::OperationHandle* handle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle_);
  }
  if (handle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle)->GetArena();
    if (message_arena != submessage_arena) {
      handle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, handle, submessage_arena);
    }
    
  } else {
    
  }
  handle_ = handle;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.AbortOperationRequest.handle)
}

// -------------------------------------------------------------------

// AbortOperationResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void AbortOperationResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode AbortOperationResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode AbortOperationResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.AbortOperationResponse.error_code)
  return _internal_error_code();
}
inline void AbortOperationResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void AbortOperationResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.AbortOperationResponse.error_code)
}

// -------------------------------------------------------------------

// ImportWrappedKeyRequest

// uint32 key_format = 1;
inline void ImportWrappedKeyRequest::clear_key_format() {
  key_format_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ImportWrappedKeyRequest::_internal_key_format() const {
  return key_format_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ImportWrappedKeyRequest::key_format() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ImportWrappedKeyRequest.key_format)
  return _internal_key_format();
}
inline void ImportWrappedKeyRequest::_internal_set_key_format(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  key_format_ = value;
}
inline void ImportWrappedKeyRequest::set_key_format(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_key_format(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ImportWrappedKeyRequest.key_format)
}

// .nugget.app.keymaster.KeyParameters params = 2;
inline bool ImportWrappedKeyRequest::_internal_has_params() const {
  return this != internal_default_instance() && params_ != nullptr;
}
inline bool ImportWrappedKeyRequest::has_params() const {
  return _internal_has_params();
}
inline const ::nugget::app::keymaster::KeyParameters& ImportWrappedKeyRequest::_internal_params() const {
  const ::nugget::app::keymaster::KeyParameters* p = params_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyParameters&>(
      ::nugget::app::keymaster::_KeyParameters_default_instance_);
}
inline const ::nugget::app::keymaster::KeyParameters& ImportWrappedKeyRequest::params() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ImportWrappedKeyRequest.params)
  return _internal_params();
}
inline void ImportWrappedKeyRequest::unsafe_arena_set_allocated_params(
    ::nugget::app::keymaster::KeyParameters* params) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  params_ = params;
  if (params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.ImportWrappedKeyRequest.params)
}
inline ::nugget::app::keymaster::KeyParameters* ImportWrappedKeyRequest::release_params() {
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* ImportWrappedKeyRequest::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ImportWrappedKeyRequest.params)
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* ImportWrappedKeyRequest::_internal_mutable_params() {
  
  if (params_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyParameters>(GetArena());
    params_ = p;
  }
  return params_;
}
inline ::nugget::app::keymaster::KeyParameters* ImportWrappedKeyRequest::mutable_params() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ImportWrappedKeyRequest.params)
  return _internal_mutable_params();
}
inline void ImportWrappedKeyRequest::set_allocated_params(::nugget::app::keymaster::KeyParameters* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params)->GetArena();
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    
  } else {
    
  }
  params_ = params;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ImportWrappedKeyRequest.params)
}

// bytes rsa_envelope = 3;
inline void ImportWrappedKeyRequest::clear_rsa_envelope() {
  rsa_envelope_.ClearToEmpty();
}
inline const std::string& ImportWrappedKeyRequest::rsa_envelope() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ImportWrappedKeyRequest.rsa_envelope)
  return _internal_rsa_envelope();
}
inline void ImportWrappedKeyRequest::set_rsa_envelope(const std::string& value) {
  _internal_set_rsa_envelope(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ImportWrappedKeyRequest.rsa_envelope)
}
inline std::string* ImportWrappedKeyRequest::mutable_rsa_envelope() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ImportWrappedKeyRequest.rsa_envelope)
  return _internal_mutable_rsa_envelope();
}
inline const std::string& ImportWrappedKeyRequest::_internal_rsa_envelope() const {
  return rsa_envelope_.Get();
}
inline void ImportWrappedKeyRequest::_internal_set_rsa_envelope(const std::string& value) {
  
  rsa_envelope_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ImportWrappedKeyRequest::set_rsa_envelope(std::string&& value) {
  
  rsa_envelope_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ImportWrappedKeyRequest.rsa_envelope)
}
inline void ImportWrappedKeyRequest::set_rsa_envelope(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  rsa_envelope_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ImportWrappedKeyRequest.rsa_envelope)
}
inline void ImportWrappedKeyRequest::set_rsa_envelope(const void* value,
    size_t size) {
  
  rsa_envelope_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ImportWrappedKeyRequest.rsa_envelope)
}
inline std::string* ImportWrappedKeyRequest::_internal_mutable_rsa_envelope() {
  
  return rsa_envelope_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ImportWrappedKeyRequest::release_rsa_envelope() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ImportWrappedKeyRequest.rsa_envelope)
  return rsa_envelope_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ImportWrappedKeyRequest::set_allocated_rsa_envelope(std::string* rsa_envelope) {
  if (rsa_envelope != nullptr) {
    
  } else {
    
  }
  rsa_envelope_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rsa_envelope,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ImportWrappedKeyRequest.rsa_envelope)
}

// bytes initialization_vector = 4;
inline void ImportWrappedKeyRequest::clear_initialization_vector() {
  initialization_vector_.ClearToEmpty();
}
inline const std::string& ImportWrappedKeyRequest::initialization_vector() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ImportWrappedKeyRequest.initialization_vector)
  return _internal_initialization_vector();
}
inline void ImportWrappedKeyRequest::set_initialization_vector(const std::string& value) {
  _internal_set_initialization_vector(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ImportWrappedKeyRequest.initialization_vector)
}
inline std::string* ImportWrappedKeyRequest::mutable_initialization_vector() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ImportWrappedKeyRequest.initialization_vector)
  return _internal_mutable_initialization_vector();
}
inline const std::string& ImportWrappedKeyRequest::_internal_initialization_vector() const {
  return initialization_vector_.Get();
}
inline void ImportWrappedKeyRequest::_internal_set_initialization_vector(const std::string& value) {
  
  initialization_vector_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ImportWrappedKeyRequest::set_initialization_vector(std::string&& value) {
  
  initialization_vector_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ImportWrappedKeyRequest.initialization_vector)
}
inline void ImportWrappedKeyRequest::set_initialization_vector(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  initialization_vector_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ImportWrappedKeyRequest.initialization_vector)
}
inline void ImportWrappedKeyRequest::set_initialization_vector(const void* value,
    size_t size) {
  
  initialization_vector_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ImportWrappedKeyRequest.initialization_vector)
}
inline std::string* ImportWrappedKeyRequest::_internal_mutable_initialization_vector() {
  
  return initialization_vector_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ImportWrappedKeyRequest::release_initialization_vector() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ImportWrappedKeyRequest.initialization_vector)
  return initialization_vector_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ImportWrappedKeyRequest::set_allocated_initialization_vector(std::string* initialization_vector) {
  if (initialization_vector != nullptr) {
    
  } else {
    
  }
  initialization_vector_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), initialization_vector,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ImportWrappedKeyRequest.initialization_vector)
}

// bytes encrypted_import_key = 5;
inline void ImportWrappedKeyRequest::clear_encrypted_import_key() {
  encrypted_import_key_.ClearToEmpty();
}
inline const std::string& ImportWrappedKeyRequest::encrypted_import_key() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ImportWrappedKeyRequest.encrypted_import_key)
  return _internal_encrypted_import_key();
}
inline void ImportWrappedKeyRequest::set_encrypted_import_key(const std::string& value) {
  _internal_set_encrypted_import_key(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ImportWrappedKeyRequest.encrypted_import_key)
}
inline std::string* ImportWrappedKeyRequest::mutable_encrypted_import_key() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ImportWrappedKeyRequest.encrypted_import_key)
  return _internal_mutable_encrypted_import_key();
}
inline const std::string& ImportWrappedKeyRequest::_internal_encrypted_import_key() const {
  return encrypted_import_key_.Get();
}
inline void ImportWrappedKeyRequest::_internal_set_encrypted_import_key(const std::string& value) {
  
  encrypted_import_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ImportWrappedKeyRequest::set_encrypted_import_key(std::string&& value) {
  
  encrypted_import_key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ImportWrappedKeyRequest.encrypted_import_key)
}
inline void ImportWrappedKeyRequest::set_encrypted_import_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  encrypted_import_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ImportWrappedKeyRequest.encrypted_import_key)
}
inline void ImportWrappedKeyRequest::set_encrypted_import_key(const void* value,
    size_t size) {
  
  encrypted_import_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ImportWrappedKeyRequest.encrypted_import_key)
}
inline std::string* ImportWrappedKeyRequest::_internal_mutable_encrypted_import_key() {
  
  return encrypted_import_key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ImportWrappedKeyRequest::release_encrypted_import_key() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ImportWrappedKeyRequest.encrypted_import_key)
  return encrypted_import_key_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ImportWrappedKeyRequest::set_allocated_encrypted_import_key(std::string* encrypted_import_key) {
  if (encrypted_import_key != nullptr) {
    
  } else {
    
  }
  encrypted_import_key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), encrypted_import_key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ImportWrappedKeyRequest.encrypted_import_key)
}

// bytes aad = 6;
inline void ImportWrappedKeyRequest::clear_aad() {
  aad_.ClearToEmpty();
}
inline const std::string& ImportWrappedKeyRequest::aad() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ImportWrappedKeyRequest.aad)
  return _internal_aad();
}
inline void ImportWrappedKeyRequest::set_aad(const std::string& value) {
  _internal_set_aad(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ImportWrappedKeyRequest.aad)
}
inline std::string* ImportWrappedKeyRequest::mutable_aad() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ImportWrappedKeyRequest.aad)
  return _internal_mutable_aad();
}
inline const std::string& ImportWrappedKeyRequest::_internal_aad() const {
  return aad_.Get();
}
inline void ImportWrappedKeyRequest::_internal_set_aad(const std::string& value) {
  
  aad_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ImportWrappedKeyRequest::set_aad(std::string&& value) {
  
  aad_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ImportWrappedKeyRequest.aad)
}
inline void ImportWrappedKeyRequest::set_aad(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  aad_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ImportWrappedKeyRequest.aad)
}
inline void ImportWrappedKeyRequest::set_aad(const void* value,
    size_t size) {
  
  aad_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ImportWrappedKeyRequest.aad)
}
inline std::string* ImportWrappedKeyRequest::_internal_mutable_aad() {
  
  return aad_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ImportWrappedKeyRequest::release_aad() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ImportWrappedKeyRequest.aad)
  return aad_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ImportWrappedKeyRequest::set_allocated_aad(std::string* aad) {
  if (aad != nullptr) {
    
  } else {
    
  }
  aad_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), aad,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ImportWrappedKeyRequest.aad)
}

// bytes gcm_tag = 7;
inline void ImportWrappedKeyRequest::clear_gcm_tag() {
  gcm_tag_.ClearToEmpty();
}
inline const std::string& ImportWrappedKeyRequest::gcm_tag() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ImportWrappedKeyRequest.gcm_tag)
  return _internal_gcm_tag();
}
inline void ImportWrappedKeyRequest::set_gcm_tag(const std::string& value) {
  _internal_set_gcm_tag(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ImportWrappedKeyRequest.gcm_tag)
}
inline std::string* ImportWrappedKeyRequest::mutable_gcm_tag() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ImportWrappedKeyRequest.gcm_tag)
  return _internal_mutable_gcm_tag();
}
inline const std::string& ImportWrappedKeyRequest::_internal_gcm_tag() const {
  return gcm_tag_.Get();
}
inline void ImportWrappedKeyRequest::_internal_set_gcm_tag(const std::string& value) {
  
  gcm_tag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ImportWrappedKeyRequest::set_gcm_tag(std::string&& value) {
  
  gcm_tag_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ImportWrappedKeyRequest.gcm_tag)
}
inline void ImportWrappedKeyRequest::set_gcm_tag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gcm_tag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ImportWrappedKeyRequest.gcm_tag)
}
inline void ImportWrappedKeyRequest::set_gcm_tag(const void* value,
    size_t size) {
  
  gcm_tag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ImportWrappedKeyRequest.gcm_tag)
}
inline std::string* ImportWrappedKeyRequest::_internal_mutable_gcm_tag() {
  
  return gcm_tag_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ImportWrappedKeyRequest::release_gcm_tag() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ImportWrappedKeyRequest.gcm_tag)
  return gcm_tag_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ImportWrappedKeyRequest::set_allocated_gcm_tag(std::string* gcm_tag) {
  if (gcm_tag != nullptr) {
    
  } else {
    
  }
  gcm_tag_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gcm_tag,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ImportWrappedKeyRequest.gcm_tag)
}

// .nugget.app.keymaster.KeyBlob wrapping_key_blob = 8;
inline bool ImportWrappedKeyRequest::_internal_has_wrapping_key_blob() const {
  return this != internal_default_instance() && wrapping_key_blob_ != nullptr;
}
inline bool ImportWrappedKeyRequest::has_wrapping_key_blob() const {
  return _internal_has_wrapping_key_blob();
}
inline const ::nugget::app::keymaster::KeyBlob& ImportWrappedKeyRequest::_internal_wrapping_key_blob() const {
  const ::nugget::app::keymaster::KeyBlob* p = wrapping_key_blob_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyBlob&>(
      ::nugget::app::keymaster::_KeyBlob_default_instance_);
}
inline const ::nugget::app::keymaster::KeyBlob& ImportWrappedKeyRequest::wrapping_key_blob() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ImportWrappedKeyRequest.wrapping_key_blob)
  return _internal_wrapping_key_blob();
}
inline void ImportWrappedKeyRequest::unsafe_arena_set_allocated_wrapping_key_blob(
    ::nugget::app::keymaster::KeyBlob* wrapping_key_blob) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(wrapping_key_blob_);
  }
  wrapping_key_blob_ = wrapping_key_blob;
  if (wrapping_key_blob) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.ImportWrappedKeyRequest.wrapping_key_blob)
}
inline ::nugget::app::keymaster::KeyBlob* ImportWrappedKeyRequest::release_wrapping_key_blob() {
  
  ::nugget::app::keymaster::KeyBlob* temp = wrapping_key_blob_;
  wrapping_key_blob_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* ImportWrappedKeyRequest::unsafe_arena_release_wrapping_key_blob() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ImportWrappedKeyRequest.wrapping_key_blob)
  
  ::nugget::app::keymaster::KeyBlob* temp = wrapping_key_blob_;
  wrapping_key_blob_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyBlob* ImportWrappedKeyRequest::_internal_mutable_wrapping_key_blob() {
  
  if (wrapping_key_blob_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyBlob>(GetArena());
    wrapping_key_blob_ = p;
  }
  return wrapping_key_blob_;
}
inline ::nugget::app::keymaster::KeyBlob* ImportWrappedKeyRequest::mutable_wrapping_key_blob() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ImportWrappedKeyRequest.wrapping_key_blob)
  return _internal_mutable_wrapping_key_blob();
}
inline void ImportWrappedKeyRequest::set_allocated_wrapping_key_blob(::nugget::app::keymaster::KeyBlob* wrapping_key_blob) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(wrapping_key_blob_);
  }
  if (wrapping_key_blob) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(wrapping_key_blob)->GetArena();
    if (message_arena != submessage_arena) {
      wrapping_key_blob = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, wrapping_key_blob, submessage_arena);
    }
    
  } else {
    
  }
  wrapping_key_blob_ = wrapping_key_blob;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ImportWrappedKeyRequest.wrapping_key_blob)
}

// bytes masking_key = 9;
inline void ImportWrappedKeyRequest::clear_masking_key() {
  masking_key_.ClearToEmpty();
}
inline const std::string& ImportWrappedKeyRequest::masking_key() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ImportWrappedKeyRequest.masking_key)
  return _internal_masking_key();
}
inline void ImportWrappedKeyRequest::set_masking_key(const std::string& value) {
  _internal_set_masking_key(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ImportWrappedKeyRequest.masking_key)
}
inline std::string* ImportWrappedKeyRequest::mutable_masking_key() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ImportWrappedKeyRequest.masking_key)
  return _internal_mutable_masking_key();
}
inline const std::string& ImportWrappedKeyRequest::_internal_masking_key() const {
  return masking_key_.Get();
}
inline void ImportWrappedKeyRequest::_internal_set_masking_key(const std::string& value) {
  
  masking_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ImportWrappedKeyRequest::set_masking_key(std::string&& value) {
  
  masking_key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ImportWrappedKeyRequest.masking_key)
}
inline void ImportWrappedKeyRequest::set_masking_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  masking_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ImportWrappedKeyRequest.masking_key)
}
inline void ImportWrappedKeyRequest::set_masking_key(const void* value,
    size_t size) {
  
  masking_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ImportWrappedKeyRequest.masking_key)
}
inline std::string* ImportWrappedKeyRequest::_internal_mutable_masking_key() {
  
  return masking_key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ImportWrappedKeyRequest::release_masking_key() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ImportWrappedKeyRequest.masking_key)
  return masking_key_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ImportWrappedKeyRequest::set_allocated_masking_key(std::string* masking_key) {
  if (masking_key != nullptr) {
    
  } else {
    
  }
  masking_key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), masking_key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ImportWrappedKeyRequest.masking_key)
}

// uint64 creation_time_ms = 10;
inline void ImportWrappedKeyRequest::clear_creation_time_ms() {
  creation_time_ms_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ImportWrappedKeyRequest::_internal_creation_time_ms() const {
  return creation_time_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ImportWrappedKeyRequest::creation_time_ms() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ImportWrappedKeyRequest.creation_time_ms)
  return _internal_creation_time_ms();
}
inline void ImportWrappedKeyRequest::_internal_set_creation_time_ms(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  creation_time_ms_ = value;
}
inline void ImportWrappedKeyRequest::set_creation_time_ms(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_creation_time_ms(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ImportWrappedKeyRequest.creation_time_ms)
}

// -------------------------------------------------------------------

// GetHmacSharingParametersRequest

// -------------------------------------------------------------------

// GetHmacSharingParametersResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void GetHmacSharingParametersResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode GetHmacSharingParametersResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode GetHmacSharingParametersResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GetHmacSharingParametersResponse.error_code)
  return _internal_error_code();
}
inline void GetHmacSharingParametersResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void GetHmacSharingParametersResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.GetHmacSharingParametersResponse.error_code)
}

// .nugget.app.keymaster.HmacSharingParameters hmac_sharing_params = 2;
inline bool GetHmacSharingParametersResponse::_internal_has_hmac_sharing_params() const {
  return this != internal_default_instance() && hmac_sharing_params_ != nullptr;
}
inline bool GetHmacSharingParametersResponse::has_hmac_sharing_params() const {
  return _internal_has_hmac_sharing_params();
}
inline const ::nugget::app::keymaster::HmacSharingParameters& GetHmacSharingParametersResponse::_internal_hmac_sharing_params() const {
  const ::nugget::app::keymaster::HmacSharingParameters* p = hmac_sharing_params_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::HmacSharingParameters&>(
      ::nugget::app::keymaster::_HmacSharingParameters_default_instance_);
}
inline const ::nugget::app::keymaster::HmacSharingParameters& GetHmacSharingParametersResponse::hmac_sharing_params() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GetHmacSharingParametersResponse.hmac_sharing_params)
  return _internal_hmac_sharing_params();
}
inline void GetHmacSharingParametersResponse::unsafe_arena_set_allocated_hmac_sharing_params(
    ::nugget::app::keymaster::HmacSharingParameters* hmac_sharing_params) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hmac_sharing_params_);
  }
  hmac_sharing_params_ = hmac_sharing_params;
  if (hmac_sharing_params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.GetHmacSharingParametersResponse.hmac_sharing_params)
}
inline ::nugget::app::keymaster::HmacSharingParameters* GetHmacSharingParametersResponse::release_hmac_sharing_params() {
  
  ::nugget::app::keymaster::HmacSharingParameters* temp = hmac_sharing_params_;
  hmac_sharing_params_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::HmacSharingParameters* GetHmacSharingParametersResponse::unsafe_arena_release_hmac_sharing_params() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.GetHmacSharingParametersResponse.hmac_sharing_params)
  
  ::nugget::app::keymaster::HmacSharingParameters* temp = hmac_sharing_params_;
  hmac_sharing_params_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::HmacSharingParameters* GetHmacSharingParametersResponse::_internal_mutable_hmac_sharing_params() {
  
  if (hmac_sharing_params_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::HmacSharingParameters>(GetArena());
    hmac_sharing_params_ = p;
  }
  return hmac_sharing_params_;
}
inline ::nugget::app::keymaster::HmacSharingParameters* GetHmacSharingParametersResponse::mutable_hmac_sharing_params() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.GetHmacSharingParametersResponse.hmac_sharing_params)
  return _internal_mutable_hmac_sharing_params();
}
inline void GetHmacSharingParametersResponse::set_allocated_hmac_sharing_params(::nugget::app::keymaster::HmacSharingParameters* hmac_sharing_params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(hmac_sharing_params_);
  }
  if (hmac_sharing_params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hmac_sharing_params)->GetArena();
    if (message_arena != submessage_arena) {
      hmac_sharing_params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hmac_sharing_params, submessage_arena);
    }
    
  } else {
    
  }
  hmac_sharing_params_ = hmac_sharing_params;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.GetHmacSharingParametersResponse.hmac_sharing_params)
}

// -------------------------------------------------------------------

// ComputeSharedHmacRequest

// repeated .nugget.app.keymaster.HmacSharingParameters hmac_sharing_params = 1;
inline int ComputeSharedHmacRequest::_internal_hmac_sharing_params_size() const {
  return hmac_sharing_params_.size();
}
inline int ComputeSharedHmacRequest::hmac_sharing_params_size() const {
  return _internal_hmac_sharing_params_size();
}
inline ::nugget::app::keymaster::HmacSharingParameters* ComputeSharedHmacRequest::mutable_hmac_sharing_params(int index) {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ComputeSharedHmacRequest.hmac_sharing_params)
  return hmac_sharing_params_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::nugget::app::keymaster::HmacSharingParameters >*
ComputeSharedHmacRequest::mutable_hmac_sharing_params() {
  // @@protoc_insertion_point(field_mutable_list:nugget.app.keymaster.ComputeSharedHmacRequest.hmac_sharing_params)
  return &hmac_sharing_params_;
}
inline const ::nugget::app::keymaster::HmacSharingParameters& ComputeSharedHmacRequest::_internal_hmac_sharing_params(int index) const {
  return hmac_sharing_params_.Get(index);
}
inline const ::nugget::app::keymaster::HmacSharingParameters& ComputeSharedHmacRequest::hmac_sharing_params(int index) const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ComputeSharedHmacRequest.hmac_sharing_params)
  return _internal_hmac_sharing_params(index);
}
inline ::nugget::app::keymaster::HmacSharingParameters* ComputeSharedHmacRequest::_internal_add_hmac_sharing_params() {
  return hmac_sharing_params_.Add();
}
inline ::nugget::app::keymaster::HmacSharingParameters* ComputeSharedHmacRequest::add_hmac_sharing_params() {
  // @@protoc_insertion_point(field_add:nugget.app.keymaster.ComputeSharedHmacRequest.hmac_sharing_params)
  return _internal_add_hmac_sharing_params();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::nugget::app::keymaster::HmacSharingParameters >&
ComputeSharedHmacRequest::hmac_sharing_params() const {
  // @@protoc_insertion_point(field_list:nugget.app.keymaster.ComputeSharedHmacRequest.hmac_sharing_params)
  return hmac_sharing_params_;
}

// -------------------------------------------------------------------

// ComputeSharedHmacResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void ComputeSharedHmacResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode ComputeSharedHmacResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode ComputeSharedHmacResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ComputeSharedHmacResponse.error_code)
  return _internal_error_code();
}
inline void ComputeSharedHmacResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void ComputeSharedHmacResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ComputeSharedHmacResponse.error_code)
}

// bytes sharing_check = 2;
inline void ComputeSharedHmacResponse::clear_sharing_check() {
  sharing_check_.ClearToEmpty();
}
inline const std::string& ComputeSharedHmacResponse::sharing_check() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ComputeSharedHmacResponse.sharing_check)
  return _internal_sharing_check();
}
inline void ComputeSharedHmacResponse::set_sharing_check(const std::string& value) {
  _internal_set_sharing_check(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ComputeSharedHmacResponse.sharing_check)
}
inline std::string* ComputeSharedHmacResponse::mutable_sharing_check() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ComputeSharedHmacResponse.sharing_check)
  return _internal_mutable_sharing_check();
}
inline const std::string& ComputeSharedHmacResponse::_internal_sharing_check() const {
  return sharing_check_.Get();
}
inline void ComputeSharedHmacResponse::_internal_set_sharing_check(const std::string& value) {
  
  sharing_check_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ComputeSharedHmacResponse::set_sharing_check(std::string&& value) {
  
  sharing_check_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ComputeSharedHmacResponse.sharing_check)
}
inline void ComputeSharedHmacResponse::set_sharing_check(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sharing_check_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ComputeSharedHmacResponse.sharing_check)
}
inline void ComputeSharedHmacResponse::set_sharing_check(const void* value,
    size_t size) {
  
  sharing_check_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ComputeSharedHmacResponse.sharing_check)
}
inline std::string* ComputeSharedHmacResponse::_internal_mutable_sharing_check() {
  
  return sharing_check_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ComputeSharedHmacResponse::release_sharing_check() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ComputeSharedHmacResponse.sharing_check)
  return sharing_check_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ComputeSharedHmacResponse::set_allocated_sharing_check(std::string* sharing_check) {
  if (sharing_check != nullptr) {
    
  } else {
    
  }
  sharing_check_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sharing_check,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ComputeSharedHmacResponse.sharing_check)
}

// -------------------------------------------------------------------

// DeviceLockedRequest

// bool password_only = 1;
inline void DeviceLockedRequest::clear_password_only() {
  password_only_ = false;
}
inline bool DeviceLockedRequest::_internal_password_only() const {
  return password_only_;
}
inline bool DeviceLockedRequest::password_only() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.DeviceLockedRequest.password_only)
  return _internal_password_only();
}
inline void DeviceLockedRequest::_internal_set_password_only(bool value) {
  
  password_only_ = value;
}
inline void DeviceLockedRequest::set_password_only(bool value) {
  _internal_set_password_only(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.DeviceLockedRequest.password_only)
}

// .nugget.app.keymaster.VerificationToken verification_token = 2;
inline bool DeviceLockedRequest::_internal_has_verification_token() const {
  return this != internal_default_instance() && verification_token_ != nullptr;
}
inline bool DeviceLockedRequest::has_verification_token() const {
  return _internal_has_verification_token();
}
inline const ::nugget::app::keymaster::VerificationToken& DeviceLockedRequest::_internal_verification_token() const {
  const ::nugget::app::keymaster::VerificationToken* p = verification_token_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::VerificationToken&>(
      ::nugget::app::keymaster::_VerificationToken_default_instance_);
}
inline const ::nugget::app::keymaster::VerificationToken& DeviceLockedRequest::verification_token() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.DeviceLockedRequest.verification_token)
  return _internal_verification_token();
}
inline void DeviceLockedRequest::unsafe_arena_set_allocated_verification_token(
    ::nugget::app::keymaster::VerificationToken* verification_token) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(verification_token_);
  }
  verification_token_ = verification_token;
  if (verification_token) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.DeviceLockedRequest.verification_token)
}
inline ::nugget::app::keymaster::VerificationToken* DeviceLockedRequest::release_verification_token() {
  
  ::nugget::app::keymaster::VerificationToken* temp = verification_token_;
  verification_token_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::VerificationToken* DeviceLockedRequest::unsafe_arena_release_verification_token() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.DeviceLockedRequest.verification_token)
  
  ::nugget::app::keymaster::VerificationToken* temp = verification_token_;
  verification_token_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::VerificationToken* DeviceLockedRequest::_internal_mutable_verification_token() {
  
  if (verification_token_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::VerificationToken>(GetArena());
    verification_token_ = p;
  }
  return verification_token_;
}
inline ::nugget::app::keymaster::VerificationToken* DeviceLockedRequest::mutable_verification_token() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.DeviceLockedRequest.verification_token)
  return _internal_mutable_verification_token();
}
inline void DeviceLockedRequest::set_allocated_verification_token(::nugget::app::keymaster::VerificationToken* verification_token) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(verification_token_);
  }
  if (verification_token) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(verification_token)->GetArena();
    if (message_arena != submessage_arena) {
      verification_token = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, verification_token, submessage_arena);
    }
    
  } else {
    
  }
  verification_token_ = verification_token;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.DeviceLockedRequest.verification_token)
}

// -------------------------------------------------------------------

// DeviceLockedResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void DeviceLockedResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode DeviceLockedResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode DeviceLockedResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.DeviceLockedResponse.error_code)
  return _internal_error_code();
}
inline void DeviceLockedResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void DeviceLockedResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.DeviceLockedResponse.error_code)
}

// -------------------------------------------------------------------

// EarlyBootEndedRequest

// -------------------------------------------------------------------

// EarlyBootEndedResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void EarlyBootEndedResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode EarlyBootEndedResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode EarlyBootEndedResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.EarlyBootEndedResponse.error_code)
  return _internal_error_code();
}
inline void EarlyBootEndedResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void EarlyBootEndedResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.EarlyBootEndedResponse.error_code)
}

// -------------------------------------------------------------------

// SetRootOfTrustRequest

// bytes digest = 1;
inline void SetRootOfTrustRequest::clear_digest() {
  digest_.ClearToEmpty();
}
inline const std::string& SetRootOfTrustRequest::digest() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.SetRootOfTrustRequest.digest)
  return _internal_digest();
}
inline void SetRootOfTrustRequest::set_digest(const std::string& value) {
  _internal_set_digest(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.SetRootOfTrustRequest.digest)
}
inline std::string* SetRootOfTrustRequest::mutable_digest() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.SetRootOfTrustRequest.digest)
  return _internal_mutable_digest();
}
inline const std::string& SetRootOfTrustRequest::_internal_digest() const {
  return digest_.Get();
}
inline void SetRootOfTrustRequest::_internal_set_digest(const std::string& value) {
  
  digest_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SetRootOfTrustRequest::set_digest(std::string&& value) {
  
  digest_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.SetRootOfTrustRequest.digest)
}
inline void SetRootOfTrustRequest::set_digest(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  digest_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.SetRootOfTrustRequest.digest)
}
inline void SetRootOfTrustRequest::set_digest(const void* value,
    size_t size) {
  
  digest_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.SetRootOfTrustRequest.digest)
}
inline std::string* SetRootOfTrustRequest::_internal_mutable_digest() {
  
  return digest_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SetRootOfTrustRequest::release_digest() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.SetRootOfTrustRequest.digest)
  return digest_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SetRootOfTrustRequest::set_allocated_digest(std::string* digest) {
  if (digest != nullptr) {
    
  } else {
    
  }
  digest_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), digest,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.SetRootOfTrustRequest.digest)
}

// -------------------------------------------------------------------

// SetRootOfTrustResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void SetRootOfTrustResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode SetRootOfTrustResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode SetRootOfTrustResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.SetRootOfTrustResponse.error_code)
  return _internal_error_code();
}
inline void SetRootOfTrustResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void SetRootOfTrustResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.SetRootOfTrustResponse.error_code)
}

// -------------------------------------------------------------------

// SetBootStateRequest

// bool is_unlocked = 1;
inline void SetBootStateRequest::clear_is_unlocked() {
  is_unlocked_ = false;
}
inline bool SetBootStateRequest::_internal_is_unlocked() const {
  return is_unlocked_;
}
inline bool SetBootStateRequest::is_unlocked() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.SetBootStateRequest.is_unlocked)
  return _internal_is_unlocked();
}
inline void SetBootStateRequest::_internal_set_is_unlocked(bool value) {
  
  is_unlocked_ = value;
}
inline void SetBootStateRequest::set_is_unlocked(bool value) {
  _internal_set_is_unlocked(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.SetBootStateRequest.is_unlocked)
}

// bytes public_key = 2;
inline void SetBootStateRequest::clear_public_key() {
  public_key_.ClearToEmpty();
}
inline const std::string& SetBootStateRequest::public_key() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.SetBootStateRequest.public_key)
  return _internal_public_key();
}
inline void SetBootStateRequest::set_public_key(const std::string& value) {
  _internal_set_public_key(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.SetBootStateRequest.public_key)
}
inline std::string* SetBootStateRequest::mutable_public_key() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.SetBootStateRequest.public_key)
  return _internal_mutable_public_key();
}
inline const std::string& SetBootStateRequest::_internal_public_key() const {
  return public_key_.Get();
}
inline void SetBootStateRequest::_internal_set_public_key(const std::string& value) {
  
  public_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SetBootStateRequest::set_public_key(std::string&& value) {
  
  public_key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.SetBootStateRequest.public_key)
}
inline void SetBootStateRequest::set_public_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  public_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.SetBootStateRequest.public_key)
}
inline void SetBootStateRequest::set_public_key(const void* value,
    size_t size) {
  
  public_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.SetBootStateRequest.public_key)
}
inline std::string* SetBootStateRequest::_internal_mutable_public_key() {
  
  return public_key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SetBootStateRequest::release_public_key() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.SetBootStateRequest.public_key)
  return public_key_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SetBootStateRequest::set_allocated_public_key(std::string* public_key) {
  if (public_key != nullptr) {
    
  } else {
    
  }
  public_key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), public_key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.SetBootStateRequest.public_key)
}

// .nugget.app.keymaster.BootColor color = 3;
inline void SetBootStateRequest::clear_color() {
  color_ = 0;
}
inline ::nugget::app::keymaster::BootColor SetBootStateRequest::_internal_color() const {
  return static_cast< ::nugget::app::keymaster::BootColor >(color_);
}
inline ::nugget::app::keymaster::BootColor SetBootStateRequest::color() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.SetBootStateRequest.color)
  return _internal_color();
}
inline void SetBootStateRequest::_internal_set_color(::nugget::app::keymaster::BootColor value) {
  
  color_ = value;
}
inline void SetBootStateRequest::set_color(::nugget::app::keymaster::BootColor value) {
  _internal_set_color(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.SetBootStateRequest.color)
}

// uint32 system_version = 4;
inline void SetBootStateRequest::clear_system_version() {
  system_version_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetBootStateRequest::_internal_system_version() const {
  return system_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetBootStateRequest::system_version() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.SetBootStateRequest.system_version)
  return _internal_system_version();
}
inline void SetBootStateRequest::_internal_set_system_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  system_version_ = value;
}
inline void SetBootStateRequest::set_system_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_system_version(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.SetBootStateRequest.system_version)
}

// uint32 system_security_level = 5;
inline void SetBootStateRequest::clear_system_security_level() {
  system_security_level_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetBootStateRequest::_internal_system_security_level() const {
  return system_security_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetBootStateRequest::system_security_level() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.SetBootStateRequest.system_security_level)
  return _internal_system_security_level();
}
inline void SetBootStateRequest::_internal_set_system_security_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  system_security_level_ = value;
}
inline void SetBootStateRequest::set_system_security_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_system_security_level(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.SetBootStateRequest.system_security_level)
}

// bytes boot_hash = 6;
inline void SetBootStateRequest::clear_boot_hash() {
  boot_hash_.ClearToEmpty();
}
inline const std::string& SetBootStateRequest::boot_hash() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.SetBootStateRequest.boot_hash)
  return _internal_boot_hash();
}
inline void SetBootStateRequest::set_boot_hash(const std::string& value) {
  _internal_set_boot_hash(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.SetBootStateRequest.boot_hash)
}
inline std::string* SetBootStateRequest::mutable_boot_hash() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.SetBootStateRequest.boot_hash)
  return _internal_mutable_boot_hash();
}
inline const std::string& SetBootStateRequest::_internal_boot_hash() const {
  return boot_hash_.Get();
}
inline void SetBootStateRequest::_internal_set_boot_hash(const std::string& value) {
  
  boot_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SetBootStateRequest::set_boot_hash(std::string&& value) {
  
  boot_hash_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.SetBootStateRequest.boot_hash)
}
inline void SetBootStateRequest::set_boot_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  boot_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.SetBootStateRequest.boot_hash)
}
inline void SetBootStateRequest::set_boot_hash(const void* value,
    size_t size) {
  
  boot_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.SetBootStateRequest.boot_hash)
}
inline std::string* SetBootStateRequest::_internal_mutable_boot_hash() {
  
  return boot_hash_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SetBootStateRequest::release_boot_hash() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.SetBootStateRequest.boot_hash)
  return boot_hash_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SetBootStateRequest::set_allocated_boot_hash(std::string* boot_hash) {
  if (boot_hash != nullptr) {
    
  } else {
    
  }
  boot_hash_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), boot_hash,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.SetBootStateRequest.boot_hash)
}

// -------------------------------------------------------------------

// SetBootStateResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void SetBootStateResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode SetBootStateResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode SetBootStateResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.SetBootStateResponse.error_code)
  return _internal_error_code();
}
inline void SetBootStateResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void SetBootStateResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.SetBootStateResponse.error_code)
}

// -------------------------------------------------------------------

// ProvisionDeviceIdsRequest

// bytes product_brand = 1;
inline void ProvisionDeviceIdsRequest::clear_product_brand() {
  product_brand_.ClearToEmpty();
}
inline const std::string& ProvisionDeviceIdsRequest::product_brand() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_brand)
  return _internal_product_brand();
}
inline void ProvisionDeviceIdsRequest::set_product_brand(const std::string& value) {
  _internal_set_product_brand(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_brand)
}
inline std::string* ProvisionDeviceIdsRequest::mutable_product_brand() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_brand)
  return _internal_mutable_product_brand();
}
inline const std::string& ProvisionDeviceIdsRequest::_internal_product_brand() const {
  return product_brand_.Get();
}
inline void ProvisionDeviceIdsRequest::_internal_set_product_brand(const std::string& value) {
  
  product_brand_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProvisionDeviceIdsRequest::set_product_brand(std::string&& value) {
  
  product_brand_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_brand)
}
inline void ProvisionDeviceIdsRequest::set_product_brand(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  product_brand_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_brand)
}
inline void ProvisionDeviceIdsRequest::set_product_brand(const void* value,
    size_t size) {
  
  product_brand_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_brand)
}
inline std::string* ProvisionDeviceIdsRequest::_internal_mutable_product_brand() {
  
  return product_brand_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProvisionDeviceIdsRequest::release_product_brand() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_brand)
  return product_brand_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProvisionDeviceIdsRequest::set_allocated_product_brand(std::string* product_brand) {
  if (product_brand != nullptr) {
    
  } else {
    
  }
  product_brand_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), product_brand,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_brand)
}

// bytes product_device = 2;
inline void ProvisionDeviceIdsRequest::clear_product_device() {
  product_device_.ClearToEmpty();
}
inline const std::string& ProvisionDeviceIdsRequest::product_device() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_device)
  return _internal_product_device();
}
inline void ProvisionDeviceIdsRequest::set_product_device(const std::string& value) {
  _internal_set_product_device(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_device)
}
inline std::string* ProvisionDeviceIdsRequest::mutable_product_device() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_device)
  return _internal_mutable_product_device();
}
inline const std::string& ProvisionDeviceIdsRequest::_internal_product_device() const {
  return product_device_.Get();
}
inline void ProvisionDeviceIdsRequest::_internal_set_product_device(const std::string& value) {
  
  product_device_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProvisionDeviceIdsRequest::set_product_device(std::string&& value) {
  
  product_device_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_device)
}
inline void ProvisionDeviceIdsRequest::set_product_device(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  product_device_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_device)
}
inline void ProvisionDeviceIdsRequest::set_product_device(const void* value,
    size_t size) {
  
  product_device_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_device)
}
inline std::string* ProvisionDeviceIdsRequest::_internal_mutable_product_device() {
  
  return product_device_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProvisionDeviceIdsRequest::release_product_device() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_device)
  return product_device_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProvisionDeviceIdsRequest::set_allocated_product_device(std::string* product_device) {
  if (product_device != nullptr) {
    
  } else {
    
  }
  product_device_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), product_device,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_device)
}

// bytes product_name = 3;
inline void ProvisionDeviceIdsRequest::clear_product_name() {
  product_name_.ClearToEmpty();
}
inline const std::string& ProvisionDeviceIdsRequest::product_name() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_name)
  return _internal_product_name();
}
inline void ProvisionDeviceIdsRequest::set_product_name(const std::string& value) {
  _internal_set_product_name(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_name)
}
inline std::string* ProvisionDeviceIdsRequest::mutable_product_name() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_name)
  return _internal_mutable_product_name();
}
inline const std::string& ProvisionDeviceIdsRequest::_internal_product_name() const {
  return product_name_.Get();
}
inline void ProvisionDeviceIdsRequest::_internal_set_product_name(const std::string& value) {
  
  product_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProvisionDeviceIdsRequest::set_product_name(std::string&& value) {
  
  product_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_name)
}
inline void ProvisionDeviceIdsRequest::set_product_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  product_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_name)
}
inline void ProvisionDeviceIdsRequest::set_product_name(const void* value,
    size_t size) {
  
  product_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_name)
}
inline std::string* ProvisionDeviceIdsRequest::_internal_mutable_product_name() {
  
  return product_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProvisionDeviceIdsRequest::release_product_name() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_name)
  return product_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProvisionDeviceIdsRequest::set_allocated_product_name(std::string* product_name) {
  if (product_name != nullptr) {
    
  } else {
    
  }
  product_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), product_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_name)
}

// bytes serialno = 4;
inline void ProvisionDeviceIdsRequest::clear_serialno() {
  serialno_.ClearToEmpty();
}
inline const std::string& ProvisionDeviceIdsRequest::serialno() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionDeviceIdsRequest.serialno)
  return _internal_serialno();
}
inline void ProvisionDeviceIdsRequest::set_serialno(const std::string& value) {
  _internal_set_serialno(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionDeviceIdsRequest.serialno)
}
inline std::string* ProvisionDeviceIdsRequest::mutable_serialno() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ProvisionDeviceIdsRequest.serialno)
  return _internal_mutable_serialno();
}
inline const std::string& ProvisionDeviceIdsRequest::_internal_serialno() const {
  return serialno_.Get();
}
inline void ProvisionDeviceIdsRequest::_internal_set_serialno(const std::string& value) {
  
  serialno_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProvisionDeviceIdsRequest::set_serialno(std::string&& value) {
  
  serialno_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ProvisionDeviceIdsRequest.serialno)
}
inline void ProvisionDeviceIdsRequest::set_serialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  serialno_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ProvisionDeviceIdsRequest.serialno)
}
inline void ProvisionDeviceIdsRequest::set_serialno(const void* value,
    size_t size) {
  
  serialno_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ProvisionDeviceIdsRequest.serialno)
}
inline std::string* ProvisionDeviceIdsRequest::_internal_mutable_serialno() {
  
  return serialno_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProvisionDeviceIdsRequest::release_serialno() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ProvisionDeviceIdsRequest.serialno)
  return serialno_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProvisionDeviceIdsRequest::set_allocated_serialno(std::string* serialno) {
  if (serialno != nullptr) {
    
  } else {
    
  }
  serialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), serialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ProvisionDeviceIdsRequest.serialno)
}

// bytes product_manufacturer = 5;
inline void ProvisionDeviceIdsRequest::clear_product_manufacturer() {
  product_manufacturer_.ClearToEmpty();
}
inline const std::string& ProvisionDeviceIdsRequest::product_manufacturer() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_manufacturer)
  return _internal_product_manufacturer();
}
inline void ProvisionDeviceIdsRequest::set_product_manufacturer(const std::string& value) {
  _internal_set_product_manufacturer(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_manufacturer)
}
inline std::string* ProvisionDeviceIdsRequest::mutable_product_manufacturer() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_manufacturer)
  return _internal_mutable_product_manufacturer();
}
inline const std::string& ProvisionDeviceIdsRequest::_internal_product_manufacturer() const {
  return product_manufacturer_.Get();
}
inline void ProvisionDeviceIdsRequest::_internal_set_product_manufacturer(const std::string& value) {
  
  product_manufacturer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProvisionDeviceIdsRequest::set_product_manufacturer(std::string&& value) {
  
  product_manufacturer_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_manufacturer)
}
inline void ProvisionDeviceIdsRequest::set_product_manufacturer(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  product_manufacturer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_manufacturer)
}
inline void ProvisionDeviceIdsRequest::set_product_manufacturer(const void* value,
    size_t size) {
  
  product_manufacturer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_manufacturer)
}
inline std::string* ProvisionDeviceIdsRequest::_internal_mutable_product_manufacturer() {
  
  return product_manufacturer_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProvisionDeviceIdsRequest::release_product_manufacturer() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_manufacturer)
  return product_manufacturer_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProvisionDeviceIdsRequest::set_allocated_product_manufacturer(std::string* product_manufacturer) {
  if (product_manufacturer != nullptr) {
    
  } else {
    
  }
  product_manufacturer_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), product_manufacturer,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_manufacturer)
}

// bytes product_model = 6;
inline void ProvisionDeviceIdsRequest::clear_product_model() {
  product_model_.ClearToEmpty();
}
inline const std::string& ProvisionDeviceIdsRequest::product_model() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_model)
  return _internal_product_model();
}
inline void ProvisionDeviceIdsRequest::set_product_model(const std::string& value) {
  _internal_set_product_model(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_model)
}
inline std::string* ProvisionDeviceIdsRequest::mutable_product_model() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_model)
  return _internal_mutable_product_model();
}
inline const std::string& ProvisionDeviceIdsRequest::_internal_product_model() const {
  return product_model_.Get();
}
inline void ProvisionDeviceIdsRequest::_internal_set_product_model(const std::string& value) {
  
  product_model_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProvisionDeviceIdsRequest::set_product_model(std::string&& value) {
  
  product_model_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_model)
}
inline void ProvisionDeviceIdsRequest::set_product_model(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  product_model_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_model)
}
inline void ProvisionDeviceIdsRequest::set_product_model(const void* value,
    size_t size) {
  
  product_model_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_model)
}
inline std::string* ProvisionDeviceIdsRequest::_internal_mutable_product_model() {
  
  return product_model_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProvisionDeviceIdsRequest::release_product_model() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_model)
  return product_model_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProvisionDeviceIdsRequest::set_allocated_product_model(std::string* product_model) {
  if (product_model != nullptr) {
    
  } else {
    
  }
  product_model_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), product_model,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ProvisionDeviceIdsRequest.product_model)
}

// bytes imei = 7;
inline void ProvisionDeviceIdsRequest::clear_imei() {
  imei_.ClearToEmpty();
}
inline const std::string& ProvisionDeviceIdsRequest::imei() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionDeviceIdsRequest.imei)
  return _internal_imei();
}
inline void ProvisionDeviceIdsRequest::set_imei(const std::string& value) {
  _internal_set_imei(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionDeviceIdsRequest.imei)
}
inline std::string* ProvisionDeviceIdsRequest::mutable_imei() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ProvisionDeviceIdsRequest.imei)
  return _internal_mutable_imei();
}
inline const std::string& ProvisionDeviceIdsRequest::_internal_imei() const {
  return imei_.Get();
}
inline void ProvisionDeviceIdsRequest::_internal_set_imei(const std::string& value) {
  
  imei_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProvisionDeviceIdsRequest::set_imei(std::string&& value) {
  
  imei_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ProvisionDeviceIdsRequest.imei)
}
inline void ProvisionDeviceIdsRequest::set_imei(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  imei_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ProvisionDeviceIdsRequest.imei)
}
inline void ProvisionDeviceIdsRequest::set_imei(const void* value,
    size_t size) {
  
  imei_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ProvisionDeviceIdsRequest.imei)
}
inline std::string* ProvisionDeviceIdsRequest::_internal_mutable_imei() {
  
  return imei_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProvisionDeviceIdsRequest::release_imei() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ProvisionDeviceIdsRequest.imei)
  return imei_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProvisionDeviceIdsRequest::set_allocated_imei(std::string* imei) {
  if (imei != nullptr) {
    
  } else {
    
  }
  imei_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), imei,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ProvisionDeviceIdsRequest.imei)
}

// bytes meid = 8;
inline void ProvisionDeviceIdsRequest::clear_meid() {
  meid_.ClearToEmpty();
}
inline const std::string& ProvisionDeviceIdsRequest::meid() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionDeviceIdsRequest.meid)
  return _internal_meid();
}
inline void ProvisionDeviceIdsRequest::set_meid(const std::string& value) {
  _internal_set_meid(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionDeviceIdsRequest.meid)
}
inline std::string* ProvisionDeviceIdsRequest::mutable_meid() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ProvisionDeviceIdsRequest.meid)
  return _internal_mutable_meid();
}
inline const std::string& ProvisionDeviceIdsRequest::_internal_meid() const {
  return meid_.Get();
}
inline void ProvisionDeviceIdsRequest::_internal_set_meid(const std::string& value) {
  
  meid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProvisionDeviceIdsRequest::set_meid(std::string&& value) {
  
  meid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ProvisionDeviceIdsRequest.meid)
}
inline void ProvisionDeviceIdsRequest::set_meid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  meid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ProvisionDeviceIdsRequest.meid)
}
inline void ProvisionDeviceIdsRequest::set_meid(const void* value,
    size_t size) {
  
  meid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ProvisionDeviceIdsRequest.meid)
}
inline std::string* ProvisionDeviceIdsRequest::_internal_mutable_meid() {
  
  return meid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProvisionDeviceIdsRequest::release_meid() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ProvisionDeviceIdsRequest.meid)
  return meid_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProvisionDeviceIdsRequest::set_allocated_meid(std::string* meid) {
  if (meid != nullptr) {
    
  } else {
    
  }
  meid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), meid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ProvisionDeviceIdsRequest.meid)
}

// -------------------------------------------------------------------

// ProvisionDeviceIdsResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void ProvisionDeviceIdsResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode ProvisionDeviceIdsResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode ProvisionDeviceIdsResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionDeviceIdsResponse.error_code)
  return _internal_error_code();
}
inline void ProvisionDeviceIdsResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void ProvisionDeviceIdsResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionDeviceIdsResponse.error_code)
}

// .nugget.app.keymaster.ChipFusing chip_fusing = 2;
inline void ProvisionDeviceIdsResponse::clear_chip_fusing() {
  chip_fusing_ = 0;
}
inline ::nugget::app::keymaster::ChipFusing ProvisionDeviceIdsResponse::_internal_chip_fusing() const {
  return static_cast< ::nugget::app::keymaster::ChipFusing >(chip_fusing_);
}
inline ::nugget::app::keymaster::ChipFusing ProvisionDeviceIdsResponse::chip_fusing() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionDeviceIdsResponse.chip_fusing)
  return _internal_chip_fusing();
}
inline void ProvisionDeviceIdsResponse::_internal_set_chip_fusing(::nugget::app::keymaster::ChipFusing value) {
  
  chip_fusing_ = value;
}
inline void ProvisionDeviceIdsResponse::set_chip_fusing(::nugget::app::keymaster::ChipFusing value) {
  _internal_set_chip_fusing(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionDeviceIdsResponse.chip_fusing)
}

// bool nodelocked_ro = 3;
inline void ProvisionDeviceIdsResponse::clear_nodelocked_ro() {
  nodelocked_ro_ = false;
}
inline bool ProvisionDeviceIdsResponse::_internal_nodelocked_ro() const {
  return nodelocked_ro_;
}
inline bool ProvisionDeviceIdsResponse::nodelocked_ro() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionDeviceIdsResponse.nodelocked_ro)
  return _internal_nodelocked_ro();
}
inline void ProvisionDeviceIdsResponse::_internal_set_nodelocked_ro(bool value) {
  
  nodelocked_ro_ = value;
}
inline void ProvisionDeviceIdsResponse::set_nodelocked_ro(bool value) {
  _internal_set_nodelocked_ro(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionDeviceIdsResponse.nodelocked_ro)
}

// -------------------------------------------------------------------

// ReadTeeBatchCertificateRequest

// .nugget.app.keymaster.Algorithm algorithm = 1;
inline void ReadTeeBatchCertificateRequest::clear_algorithm() {
  algorithm_ = 0;
}
inline ::nugget::app::keymaster::Algorithm ReadTeeBatchCertificateRequest::_internal_algorithm() const {
  return static_cast< ::nugget::app::keymaster::Algorithm >(algorithm_);
}
inline ::nugget::app::keymaster::Algorithm ReadTeeBatchCertificateRequest::algorithm() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ReadTeeBatchCertificateRequest.algorithm)
  return _internal_algorithm();
}
inline void ReadTeeBatchCertificateRequest::_internal_set_algorithm(::nugget::app::keymaster::Algorithm value) {
  
  algorithm_ = value;
}
inline void ReadTeeBatchCertificateRequest::set_algorithm(::nugget::app::keymaster::Algorithm value) {
  _internal_set_algorithm(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ReadTeeBatchCertificateRequest.algorithm)
}

// -------------------------------------------------------------------

// ReadTeeBatchCertificateResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void ReadTeeBatchCertificateResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode ReadTeeBatchCertificateResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode ReadTeeBatchCertificateResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ReadTeeBatchCertificateResponse.error_code)
  return _internal_error_code();
}
inline void ReadTeeBatchCertificateResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void ReadTeeBatchCertificateResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ReadTeeBatchCertificateResponse.error_code)
}

// .nugget.app.keymaster.RSAKey rsa = 2;
inline bool ReadTeeBatchCertificateResponse::_internal_has_rsa() const {
  return this != internal_default_instance() && rsa_ != nullptr;
}
inline bool ReadTeeBatchCertificateResponse::has_rsa() const {
  return _internal_has_rsa();
}
inline const ::nugget::app::keymaster::RSAKey& ReadTeeBatchCertificateResponse::_internal_rsa() const {
  const ::nugget::app::keymaster::RSAKey* p = rsa_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::RSAKey&>(
      ::nugget::app::keymaster::_RSAKey_default_instance_);
}
inline const ::nugget::app::keymaster::RSAKey& ReadTeeBatchCertificateResponse::rsa() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ReadTeeBatchCertificateResponse.rsa)
  return _internal_rsa();
}
inline void ReadTeeBatchCertificateResponse::unsafe_arena_set_allocated_rsa(
    ::nugget::app::keymaster::RSAKey* rsa) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsa_);
  }
  rsa_ = rsa;
  if (rsa) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.ReadTeeBatchCertificateResponse.rsa)
}
inline ::nugget::app::keymaster::RSAKey* ReadTeeBatchCertificateResponse::release_rsa() {
  
  ::nugget::app::keymaster::RSAKey* temp = rsa_;
  rsa_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::RSAKey* ReadTeeBatchCertificateResponse::unsafe_arena_release_rsa() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ReadTeeBatchCertificateResponse.rsa)
  
  ::nugget::app::keymaster::RSAKey* temp = rsa_;
  rsa_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::RSAKey* ReadTeeBatchCertificateResponse::_internal_mutable_rsa() {
  
  if (rsa_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::RSAKey>(GetArena());
    rsa_ = p;
  }
  return rsa_;
}
inline ::nugget::app::keymaster::RSAKey* ReadTeeBatchCertificateResponse::mutable_rsa() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ReadTeeBatchCertificateResponse.rsa)
  return _internal_mutable_rsa();
}
inline void ReadTeeBatchCertificateResponse::set_allocated_rsa(::nugget::app::keymaster::RSAKey* rsa) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsa_);
  }
  if (rsa) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsa)->GetArena();
    if (message_arena != submessage_arena) {
      rsa = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsa, submessage_arena);
    }
    
  } else {
    
  }
  rsa_ = rsa;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ReadTeeBatchCertificateResponse.rsa)
}

// .nugget.app.keymaster.ECKey ec = 3;
inline bool ReadTeeBatchCertificateResponse::_internal_has_ec() const {
  return this != internal_default_instance() && ec_ != nullptr;
}
inline bool ReadTeeBatchCertificateResponse::has_ec() const {
  return _internal_has_ec();
}
inline const ::nugget::app::keymaster::ECKey& ReadTeeBatchCertificateResponse::_internal_ec() const {
  const ::nugget::app::keymaster::ECKey* p = ec_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::ECKey&>(
      ::nugget::app::keymaster::_ECKey_default_instance_);
}
inline const ::nugget::app::keymaster::ECKey& ReadTeeBatchCertificateResponse::ec() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ReadTeeBatchCertificateResponse.ec)
  return _internal_ec();
}
inline void ReadTeeBatchCertificateResponse::unsafe_arena_set_allocated_ec(
    ::nugget::app::keymaster::ECKey* ec) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ec_);
  }
  ec_ = ec;
  if (ec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.ReadTeeBatchCertificateResponse.ec)
}
inline ::nugget::app::keymaster::ECKey* ReadTeeBatchCertificateResponse::release_ec() {
  
  ::nugget::app::keymaster::ECKey* temp = ec_;
  ec_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::ECKey* ReadTeeBatchCertificateResponse::unsafe_arena_release_ec() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ReadTeeBatchCertificateResponse.ec)
  
  ::nugget::app::keymaster::ECKey* temp = ec_;
  ec_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::ECKey* ReadTeeBatchCertificateResponse::_internal_mutable_ec() {
  
  if (ec_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::ECKey>(GetArena());
    ec_ = p;
  }
  return ec_;
}
inline ::nugget::app::keymaster::ECKey* ReadTeeBatchCertificateResponse::mutable_ec() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ReadTeeBatchCertificateResponse.ec)
  return _internal_mutable_ec();
}
inline void ReadTeeBatchCertificateResponse::set_allocated_ec(::nugget::app::keymaster::ECKey* ec) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ec_);
  }
  if (ec) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ec)->GetArena();
    if (message_arena != submessage_arena) {
      ec = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ec, submessage_arena);
    }
    
  } else {
    
  }
  ec_ = ec;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ReadTeeBatchCertificateResponse.ec)
}

// bytes batch_cert = 4;
inline void ReadTeeBatchCertificateResponse::clear_batch_cert() {
  batch_cert_.ClearToEmpty();
}
inline const std::string& ReadTeeBatchCertificateResponse::batch_cert() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ReadTeeBatchCertificateResponse.batch_cert)
  return _internal_batch_cert();
}
inline void ReadTeeBatchCertificateResponse::set_batch_cert(const std::string& value) {
  _internal_set_batch_cert(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ReadTeeBatchCertificateResponse.batch_cert)
}
inline std::string* ReadTeeBatchCertificateResponse::mutable_batch_cert() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ReadTeeBatchCertificateResponse.batch_cert)
  return _internal_mutable_batch_cert();
}
inline const std::string& ReadTeeBatchCertificateResponse::_internal_batch_cert() const {
  return batch_cert_.Get();
}
inline void ReadTeeBatchCertificateResponse::_internal_set_batch_cert(const std::string& value) {
  
  batch_cert_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ReadTeeBatchCertificateResponse::set_batch_cert(std::string&& value) {
  
  batch_cert_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ReadTeeBatchCertificateResponse.batch_cert)
}
inline void ReadTeeBatchCertificateResponse::set_batch_cert(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  batch_cert_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ReadTeeBatchCertificateResponse.batch_cert)
}
inline void ReadTeeBatchCertificateResponse::set_batch_cert(const void* value,
    size_t size) {
  
  batch_cert_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ReadTeeBatchCertificateResponse.batch_cert)
}
inline std::string* ReadTeeBatchCertificateResponse::_internal_mutable_batch_cert() {
  
  return batch_cert_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ReadTeeBatchCertificateResponse::release_batch_cert() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ReadTeeBatchCertificateResponse.batch_cert)
  return batch_cert_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ReadTeeBatchCertificateResponse::set_allocated_batch_cert(std::string* batch_cert) {
  if (batch_cert != nullptr) {
    
  } else {
    
  }
  batch_cert_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), batch_cert,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ReadTeeBatchCertificateResponse.batch_cert)
}

// -------------------------------------------------------------------

// DTupHandshakeRequest

// bytes nonce_client = 1;
inline void DTupHandshakeRequest::clear_nonce_client() {
  nonce_client_.ClearToEmpty();
}
inline const std::string& DTupHandshakeRequest::nonce_client() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.DTupHandshakeRequest.nonce_client)
  return _internal_nonce_client();
}
inline void DTupHandshakeRequest::set_nonce_client(const std::string& value) {
  _internal_set_nonce_client(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.DTupHandshakeRequest.nonce_client)
}
inline std::string* DTupHandshakeRequest::mutable_nonce_client() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.DTupHandshakeRequest.nonce_client)
  return _internal_mutable_nonce_client();
}
inline const std::string& DTupHandshakeRequest::_internal_nonce_client() const {
  return nonce_client_.Get();
}
inline void DTupHandshakeRequest::_internal_set_nonce_client(const std::string& value) {
  
  nonce_client_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DTupHandshakeRequest::set_nonce_client(std::string&& value) {
  
  nonce_client_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.DTupHandshakeRequest.nonce_client)
}
inline void DTupHandshakeRequest::set_nonce_client(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  nonce_client_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.DTupHandshakeRequest.nonce_client)
}
inline void DTupHandshakeRequest::set_nonce_client(const void* value,
    size_t size) {
  
  nonce_client_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.DTupHandshakeRequest.nonce_client)
}
inline std::string* DTupHandshakeRequest::_internal_mutable_nonce_client() {
  
  return nonce_client_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DTupHandshakeRequest::release_nonce_client() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.DTupHandshakeRequest.nonce_client)
  return nonce_client_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DTupHandshakeRequest::set_allocated_nonce_client(std::string* nonce_client) {
  if (nonce_client != nullptr) {
    
  } else {
    
  }
  nonce_client_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nonce_client,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.DTupHandshakeRequest.nonce_client)
}

// -------------------------------------------------------------------

// DTupHandshakeResponse

// .nugget.app.keymaster.DTupError error_code = 1;
inline void DTupHandshakeResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::DTupError DTupHandshakeResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::DTupError >(error_code_);
}
inline ::nugget::app::keymaster::DTupError DTupHandshakeResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.DTupHandshakeResponse.error_code)
  return _internal_error_code();
}
inline void DTupHandshakeResponse::_internal_set_error_code(::nugget::app::keymaster::DTupError value) {
  
  error_code_ = value;
}
inline void DTupHandshakeResponse::set_error_code(::nugget::app::keymaster::DTupError value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.DTupHandshakeResponse.error_code)
}

// bytes nonce_citadel = 2;
inline void DTupHandshakeResponse::clear_nonce_citadel() {
  nonce_citadel_.ClearToEmpty();
}
inline const std::string& DTupHandshakeResponse::nonce_citadel() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.DTupHandshakeResponse.nonce_citadel)
  return _internal_nonce_citadel();
}
inline void DTupHandshakeResponse::set_nonce_citadel(const std::string& value) {
  _internal_set_nonce_citadel(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.DTupHandshakeResponse.nonce_citadel)
}
inline std::string* DTupHandshakeResponse::mutable_nonce_citadel() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.DTupHandshakeResponse.nonce_citadel)
  return _internal_mutable_nonce_citadel();
}
inline const std::string& DTupHandshakeResponse::_internal_nonce_citadel() const {
  return nonce_citadel_.Get();
}
inline void DTupHandshakeResponse::_internal_set_nonce_citadel(const std::string& value) {
  
  nonce_citadel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DTupHandshakeResponse::set_nonce_citadel(std::string&& value) {
  
  nonce_citadel_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.DTupHandshakeResponse.nonce_citadel)
}
inline void DTupHandshakeResponse::set_nonce_citadel(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  nonce_citadel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.DTupHandshakeResponse.nonce_citadel)
}
inline void DTupHandshakeResponse::set_nonce_citadel(const void* value,
    size_t size) {
  
  nonce_citadel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.DTupHandshakeResponse.nonce_citadel)
}
inline std::string* DTupHandshakeResponse::_internal_mutable_nonce_citadel() {
  
  return nonce_citadel_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DTupHandshakeResponse::release_nonce_citadel() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.DTupHandshakeResponse.nonce_citadel)
  return nonce_citadel_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DTupHandshakeResponse::set_allocated_nonce_citadel(std::string* nonce_citadel) {
  if (nonce_citadel != nullptr) {
    
  } else {
    
  }
  nonce_citadel_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nonce_citadel,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.DTupHandshakeResponse.nonce_citadel)
}

// bytes signature = 3;
inline void DTupHandshakeResponse::clear_signature() {
  signature_.ClearToEmpty();
}
inline const std::string& DTupHandshakeResponse::signature() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.DTupHandshakeResponse.signature)
  return _internal_signature();
}
inline void DTupHandshakeResponse::set_signature(const std::string& value) {
  _internal_set_signature(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.DTupHandshakeResponse.signature)
}
inline std::string* DTupHandshakeResponse::mutable_signature() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.DTupHandshakeResponse.signature)
  return _internal_mutable_signature();
}
inline const std::string& DTupHandshakeResponse::_internal_signature() const {
  return signature_.Get();
}
inline void DTupHandshakeResponse::_internal_set_signature(const std::string& value) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DTupHandshakeResponse::set_signature(std::string&& value) {
  
  signature_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.DTupHandshakeResponse.signature)
}
inline void DTupHandshakeResponse::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.DTupHandshakeResponse.signature)
}
inline void DTupHandshakeResponse::set_signature(const void* value,
    size_t size) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.DTupHandshakeResponse.signature)
}
inline std::string* DTupHandshakeResponse::_internal_mutable_signature() {
  
  return signature_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DTupHandshakeResponse::release_signature() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.DTupHandshakeResponse.signature)
  return signature_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DTupHandshakeResponse::set_allocated_signature(std::string* signature) {
  if (signature != nullptr) {
    
  } else {
    
  }
  signature_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), signature,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.DTupHandshakeResponse.signature)
}

// -------------------------------------------------------------------

// DTupFetchInputEventRequest

// -------------------------------------------------------------------

// DTupFetchInputEventResponse

// .nugget.app.keymaster.DTupError error_code = 1;
inline void DTupFetchInputEventResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::DTupError DTupFetchInputEventResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::DTupError >(error_code_);
}
inline ::nugget::app::keymaster::DTupError DTupFetchInputEventResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.DTupFetchInputEventResponse.error_code)
  return _internal_error_code();
}
inline void DTupFetchInputEventResponse::_internal_set_error_code(::nugget::app::keymaster::DTupError value) {
  
  error_code_ = value;
}
inline void DTupFetchInputEventResponse::set_error_code(::nugget::app::keymaster::DTupError value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.DTupFetchInputEventResponse.error_code)
}

// .nugget.app.keymaster.DTupKeyEvent event = 2;
inline void DTupFetchInputEventResponse::clear_event() {
  event_ = 0;
}
inline ::nugget::app::keymaster::DTupKeyEvent DTupFetchInputEventResponse::_internal_event() const {
  return static_cast< ::nugget::app::keymaster::DTupKeyEvent >(event_);
}
inline ::nugget::app::keymaster::DTupKeyEvent DTupFetchInputEventResponse::event() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.DTupFetchInputEventResponse.event)
  return _internal_event();
}
inline void DTupFetchInputEventResponse::_internal_set_event(::nugget::app::keymaster::DTupKeyEvent value) {
  
  event_ = value;
}
inline void DTupFetchInputEventResponse::set_event(::nugget::app::keymaster::DTupKeyEvent value) {
  _internal_set_event(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.DTupFetchInputEventResponse.event)
}

// bytes signature = 3;
inline void DTupFetchInputEventResponse::clear_signature() {
  signature_.ClearToEmpty();
}
inline const std::string& DTupFetchInputEventResponse::signature() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.DTupFetchInputEventResponse.signature)
  return _internal_signature();
}
inline void DTupFetchInputEventResponse::set_signature(const std::string& value) {
  _internal_set_signature(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.DTupFetchInputEventResponse.signature)
}
inline std::string* DTupFetchInputEventResponse::mutable_signature() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.DTupFetchInputEventResponse.signature)
  return _internal_mutable_signature();
}
inline const std::string& DTupFetchInputEventResponse::_internal_signature() const {
  return signature_.Get();
}
inline void DTupFetchInputEventResponse::_internal_set_signature(const std::string& value) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DTupFetchInputEventResponse::set_signature(std::string&& value) {
  
  signature_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.DTupFetchInputEventResponse.signature)
}
inline void DTupFetchInputEventResponse::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.DTupFetchInputEventResponse.signature)
}
inline void DTupFetchInputEventResponse::set_signature(const void* value,
    size_t size) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.DTupFetchInputEventResponse.signature)
}
inline std::string* DTupFetchInputEventResponse::_internal_mutable_signature() {
  
  return signature_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DTupFetchInputEventResponse::release_signature() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.DTupFetchInputEventResponse.signature)
  return signature_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DTupFetchInputEventResponse::set_allocated_signature(std::string* signature) {
  if (signature != nullptr) {
    
  } else {
    
  }
  signature_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), signature,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.DTupFetchInputEventResponse.signature)
}

// -------------------------------------------------------------------

// SetSystemVersionInfoRequest

// uint32 system_version = 1;
inline void SetSystemVersionInfoRequest::clear_system_version() {
  system_version_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetSystemVersionInfoRequest::_internal_system_version() const {
  return system_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetSystemVersionInfoRequest::system_version() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.SetSystemVersionInfoRequest.system_version)
  return _internal_system_version();
}
inline void SetSystemVersionInfoRequest::_internal_set_system_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  system_version_ = value;
}
inline void SetSystemVersionInfoRequest::set_system_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_system_version(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.SetSystemVersionInfoRequest.system_version)
}

// uint32 system_security_level = 2;
inline void SetSystemVersionInfoRequest::clear_system_security_level() {
  system_security_level_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetSystemVersionInfoRequest::_internal_system_security_level() const {
  return system_security_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetSystemVersionInfoRequest::system_security_level() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.SetSystemVersionInfoRequest.system_security_level)
  return _internal_system_security_level();
}
inline void SetSystemVersionInfoRequest::_internal_set_system_security_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  system_security_level_ = value;
}
inline void SetSystemVersionInfoRequest::set_system_security_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_system_security_level(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.SetSystemVersionInfoRequest.system_security_level)
}

// uint32 vendor_security_level = 3;
inline void SetSystemVersionInfoRequest::clear_vendor_security_level() {
  vendor_security_level_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetSystemVersionInfoRequest::_internal_vendor_security_level() const {
  return vendor_security_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetSystemVersionInfoRequest::vendor_security_level() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.SetSystemVersionInfoRequest.vendor_security_level)
  return _internal_vendor_security_level();
}
inline void SetSystemVersionInfoRequest::_internal_set_vendor_security_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  vendor_security_level_ = value;
}
inline void SetSystemVersionInfoRequest::set_vendor_security_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_vendor_security_level(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.SetSystemVersionInfoRequest.vendor_security_level)
}

// -------------------------------------------------------------------

// SetSystemVersionInfoResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void SetSystemVersionInfoResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode SetSystemVersionInfoResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode SetSystemVersionInfoResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.SetSystemVersionInfoResponse.error_code)
  return _internal_error_code();
}
inline void SetSystemVersionInfoResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void SetSystemVersionInfoResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.SetSystemVersionInfoResponse.error_code)
}

// -------------------------------------------------------------------

// GetBootInfoRequest

// -------------------------------------------------------------------

// GetBootInfoResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void GetBootInfoResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode GetBootInfoResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode GetBootInfoResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GetBootInfoResponse.error_code)
  return _internal_error_code();
}
inline void GetBootInfoResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void GetBootInfoResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.GetBootInfoResponse.error_code)
}

// bool is_unlocked = 2;
inline void GetBootInfoResponse::clear_is_unlocked() {
  is_unlocked_ = false;
}
inline bool GetBootInfoResponse::_internal_is_unlocked() const {
  return is_unlocked_;
}
inline bool GetBootInfoResponse::is_unlocked() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GetBootInfoResponse.is_unlocked)
  return _internal_is_unlocked();
}
inline void GetBootInfoResponse::_internal_set_is_unlocked(bool value) {
  
  is_unlocked_ = value;
}
inline void GetBootInfoResponse::set_is_unlocked(bool value) {
  _internal_set_is_unlocked(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.GetBootInfoResponse.is_unlocked)
}

// .nugget.app.keymaster.BootColor boot_color = 3;
inline void GetBootInfoResponse::clear_boot_color() {
  boot_color_ = 0;
}
inline ::nugget::app::keymaster::BootColor GetBootInfoResponse::_internal_boot_color() const {
  return static_cast< ::nugget::app::keymaster::BootColor >(boot_color_);
}
inline ::nugget::app::keymaster::BootColor GetBootInfoResponse::boot_color() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GetBootInfoResponse.boot_color)
  return _internal_boot_color();
}
inline void GetBootInfoResponse::_internal_set_boot_color(::nugget::app::keymaster::BootColor value) {
  
  boot_color_ = value;
}
inline void GetBootInfoResponse::set_boot_color(::nugget::app::keymaster::BootColor value) {
  _internal_set_boot_color(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.GetBootInfoResponse.boot_color)
}

// bytes boot_key = 4;
inline void GetBootInfoResponse::clear_boot_key() {
  boot_key_.ClearToEmpty();
}
inline const std::string& GetBootInfoResponse::boot_key() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GetBootInfoResponse.boot_key)
  return _internal_boot_key();
}
inline void GetBootInfoResponse::set_boot_key(const std::string& value) {
  _internal_set_boot_key(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.GetBootInfoResponse.boot_key)
}
inline std::string* GetBootInfoResponse::mutable_boot_key() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.GetBootInfoResponse.boot_key)
  return _internal_mutable_boot_key();
}
inline const std::string& GetBootInfoResponse::_internal_boot_key() const {
  return boot_key_.Get();
}
inline void GetBootInfoResponse::_internal_set_boot_key(const std::string& value) {
  
  boot_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetBootInfoResponse::set_boot_key(std::string&& value) {
  
  boot_key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.GetBootInfoResponse.boot_key)
}
inline void GetBootInfoResponse::set_boot_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  boot_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.GetBootInfoResponse.boot_key)
}
inline void GetBootInfoResponse::set_boot_key(const void* value,
    size_t size) {
  
  boot_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.GetBootInfoResponse.boot_key)
}
inline std::string* GetBootInfoResponse::_internal_mutable_boot_key() {
  
  return boot_key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetBootInfoResponse::release_boot_key() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.GetBootInfoResponse.boot_key)
  return boot_key_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetBootInfoResponse::set_allocated_boot_key(std::string* boot_key) {
  if (boot_key != nullptr) {
    
  } else {
    
  }
  boot_key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), boot_key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.GetBootInfoResponse.boot_key)
}

// bytes boot_hash = 5;
inline void GetBootInfoResponse::clear_boot_hash() {
  boot_hash_.ClearToEmpty();
}
inline const std::string& GetBootInfoResponse::boot_hash() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GetBootInfoResponse.boot_hash)
  return _internal_boot_hash();
}
inline void GetBootInfoResponse::set_boot_hash(const std::string& value) {
  _internal_set_boot_hash(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.GetBootInfoResponse.boot_hash)
}
inline std::string* GetBootInfoResponse::mutable_boot_hash() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.GetBootInfoResponse.boot_hash)
  return _internal_mutable_boot_hash();
}
inline const std::string& GetBootInfoResponse::_internal_boot_hash() const {
  return boot_hash_.Get();
}
inline void GetBootInfoResponse::_internal_set_boot_hash(const std::string& value) {
  
  boot_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetBootInfoResponse::set_boot_hash(std::string&& value) {
  
  boot_hash_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.GetBootInfoResponse.boot_hash)
}
inline void GetBootInfoResponse::set_boot_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  boot_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.GetBootInfoResponse.boot_hash)
}
inline void GetBootInfoResponse::set_boot_hash(const void* value,
    size_t size) {
  
  boot_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.GetBootInfoResponse.boot_hash)
}
inline std::string* GetBootInfoResponse::_internal_mutable_boot_hash() {
  
  return boot_hash_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetBootInfoResponse::release_boot_hash() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.GetBootInfoResponse.boot_hash)
  return boot_hash_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetBootInfoResponse::set_allocated_boot_hash(std::string* boot_hash) {
  if (boot_hash != nullptr) {
    
  } else {
    
  }
  boot_hash_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), boot_hash,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.GetBootInfoResponse.boot_hash)
}

// -------------------------------------------------------------------

// ProvisionPresharedSecretRequest

// bytes preshared_secret = 1;
inline void ProvisionPresharedSecretRequest::clear_preshared_secret() {
  preshared_secret_.ClearToEmpty();
}
inline const std::string& ProvisionPresharedSecretRequest::preshared_secret() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionPresharedSecretRequest.preshared_secret)
  return _internal_preshared_secret();
}
inline void ProvisionPresharedSecretRequest::set_preshared_secret(const std::string& value) {
  _internal_set_preshared_secret(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionPresharedSecretRequest.preshared_secret)
}
inline std::string* ProvisionPresharedSecretRequest::mutable_preshared_secret() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ProvisionPresharedSecretRequest.preshared_secret)
  return _internal_mutable_preshared_secret();
}
inline const std::string& ProvisionPresharedSecretRequest::_internal_preshared_secret() const {
  return preshared_secret_.Get();
}
inline void ProvisionPresharedSecretRequest::_internal_set_preshared_secret(const std::string& value) {
  
  preshared_secret_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProvisionPresharedSecretRequest::set_preshared_secret(std::string&& value) {
  
  preshared_secret_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ProvisionPresharedSecretRequest.preshared_secret)
}
inline void ProvisionPresharedSecretRequest::set_preshared_secret(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  preshared_secret_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ProvisionPresharedSecretRequest.preshared_secret)
}
inline void ProvisionPresharedSecretRequest::set_preshared_secret(const void* value,
    size_t size) {
  
  preshared_secret_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ProvisionPresharedSecretRequest.preshared_secret)
}
inline std::string* ProvisionPresharedSecretRequest::_internal_mutable_preshared_secret() {
  
  return preshared_secret_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProvisionPresharedSecretRequest::release_preshared_secret() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ProvisionPresharedSecretRequest.preshared_secret)
  return preshared_secret_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProvisionPresharedSecretRequest::set_allocated_preshared_secret(std::string* preshared_secret) {
  if (preshared_secret != nullptr) {
    
  } else {
    
  }
  preshared_secret_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), preshared_secret,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ProvisionPresharedSecretRequest.preshared_secret)
}

// bool get_status = 2;
inline void ProvisionPresharedSecretRequest::clear_get_status() {
  get_status_ = false;
}
inline bool ProvisionPresharedSecretRequest::_internal_get_status() const {
  return get_status_;
}
inline bool ProvisionPresharedSecretRequest::get_status() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionPresharedSecretRequest.get_status)
  return _internal_get_status();
}
inline void ProvisionPresharedSecretRequest::_internal_set_get_status(bool value) {
  
  get_status_ = value;
}
inline void ProvisionPresharedSecretRequest::set_get_status(bool value) {
  _internal_set_get_status(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionPresharedSecretRequest.get_status)
}

// -------------------------------------------------------------------

// ProvisionPresharedSecretResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void ProvisionPresharedSecretResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode ProvisionPresharedSecretResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode ProvisionPresharedSecretResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionPresharedSecretResponse.error_code)
  return _internal_error_code();
}
inline void ProvisionPresharedSecretResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void ProvisionPresharedSecretResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionPresharedSecretResponse.error_code)
}

// .nugget.app.keymaster.PresharedSecretStatus status = 2;
inline void ProvisionPresharedSecretResponse::clear_status() {
  status_ = 0;
}
inline ::nugget::app::keymaster::PresharedSecretStatus ProvisionPresharedSecretResponse::_internal_status() const {
  return static_cast< ::nugget::app::keymaster::PresharedSecretStatus >(status_);
}
inline ::nugget::app::keymaster::PresharedSecretStatus ProvisionPresharedSecretResponse::status() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionPresharedSecretResponse.status)
  return _internal_status();
}
inline void ProvisionPresharedSecretResponse::_internal_set_status(::nugget::app::keymaster::PresharedSecretStatus value) {
  
  status_ = value;
}
inline void ProvisionPresharedSecretResponse::set_status(::nugget::app::keymaster::PresharedSecretStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionPresharedSecretResponse.status)
}

// .nugget.app.keymaster.BootColor color = 3;
inline void ProvisionPresharedSecretResponse::clear_color() {
  color_ = 0;
}
inline ::nugget::app::keymaster::BootColor ProvisionPresharedSecretResponse::_internal_color() const {
  return static_cast< ::nugget::app::keymaster::BootColor >(color_);
}
inline ::nugget::app::keymaster::BootColor ProvisionPresharedSecretResponse::color() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionPresharedSecretResponse.color)
  return _internal_color();
}
inline void ProvisionPresharedSecretResponse::_internal_set_color(::nugget::app::keymaster::BootColor value) {
  
  color_ = value;
}
inline void ProvisionPresharedSecretResponse::set_color(::nugget::app::keymaster::BootColor value) {
  _internal_set_color(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionPresharedSecretResponse.color)
}

// bytes digest = 4;
inline void ProvisionPresharedSecretResponse::clear_digest() {
  digest_.ClearToEmpty();
}
inline const std::string& ProvisionPresharedSecretResponse::digest() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionPresharedSecretResponse.digest)
  return _internal_digest();
}
inline void ProvisionPresharedSecretResponse::set_digest(const std::string& value) {
  _internal_set_digest(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionPresharedSecretResponse.digest)
}
inline std::string* ProvisionPresharedSecretResponse::mutable_digest() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ProvisionPresharedSecretResponse.digest)
  return _internal_mutable_digest();
}
inline const std::string& ProvisionPresharedSecretResponse::_internal_digest() const {
  return digest_.Get();
}
inline void ProvisionPresharedSecretResponse::_internal_set_digest(const std::string& value) {
  
  digest_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProvisionPresharedSecretResponse::set_digest(std::string&& value) {
  
  digest_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ProvisionPresharedSecretResponse.digest)
}
inline void ProvisionPresharedSecretResponse::set_digest(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  digest_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ProvisionPresharedSecretResponse.digest)
}
inline void ProvisionPresharedSecretResponse::set_digest(const void* value,
    size_t size) {
  
  digest_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ProvisionPresharedSecretResponse.digest)
}
inline std::string* ProvisionPresharedSecretResponse::_internal_mutable_digest() {
  
  return digest_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProvisionPresharedSecretResponse::release_digest() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ProvisionPresharedSecretResponse.digest)
  return digest_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProvisionPresharedSecretResponse::set_allocated_digest(std::string* digest) {
  if (digest != nullptr) {
    
  } else {
    
  }
  digest_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), digest,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ProvisionPresharedSecretResponse.digest)
}

// -------------------------------------------------------------------

// ProvisionCertificatesRequest

// uint32 block_number = 1;
inline void ProvisionCertificatesRequest::clear_block_number() {
  block_number_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProvisionCertificatesRequest::_internal_block_number() const {
  return block_number_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProvisionCertificatesRequest::block_number() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionCertificatesRequest.block_number)
  return _internal_block_number();
}
inline void ProvisionCertificatesRequest::_internal_set_block_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  block_number_ = value;
}
inline void ProvisionCertificatesRequest::set_block_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_block_number(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionCertificatesRequest.block_number)
}

// bytes cert_block = 2;
inline void ProvisionCertificatesRequest::clear_cert_block() {
  cert_block_.ClearToEmpty();
}
inline const std::string& ProvisionCertificatesRequest::cert_block() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionCertificatesRequest.cert_block)
  return _internal_cert_block();
}
inline void ProvisionCertificatesRequest::set_cert_block(const std::string& value) {
  _internal_set_cert_block(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionCertificatesRequest.cert_block)
}
inline std::string* ProvisionCertificatesRequest::mutable_cert_block() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ProvisionCertificatesRequest.cert_block)
  return _internal_mutable_cert_block();
}
inline const std::string& ProvisionCertificatesRequest::_internal_cert_block() const {
  return cert_block_.Get();
}
inline void ProvisionCertificatesRequest::_internal_set_cert_block(const std::string& value) {
  
  cert_block_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProvisionCertificatesRequest::set_cert_block(std::string&& value) {
  
  cert_block_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ProvisionCertificatesRequest.cert_block)
}
inline void ProvisionCertificatesRequest::set_cert_block(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cert_block_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ProvisionCertificatesRequest.cert_block)
}
inline void ProvisionCertificatesRequest::set_cert_block(const void* value,
    size_t size) {
  
  cert_block_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ProvisionCertificatesRequest.cert_block)
}
inline std::string* ProvisionCertificatesRequest::_internal_mutable_cert_block() {
  
  return cert_block_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProvisionCertificatesRequest::release_cert_block() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ProvisionCertificatesRequest.cert_block)
  return cert_block_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProvisionCertificatesRequest::set_allocated_cert_block(std::string* cert_block) {
  if (cert_block != nullptr) {
    
  } else {
    
  }
  cert_block_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cert_block,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ProvisionCertificatesRequest.cert_block)
}

// bytes digest = 3;
inline void ProvisionCertificatesRequest::clear_digest() {
  digest_.ClearToEmpty();
}
inline const std::string& ProvisionCertificatesRequest::digest() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionCertificatesRequest.digest)
  return _internal_digest();
}
inline void ProvisionCertificatesRequest::set_digest(const std::string& value) {
  _internal_set_digest(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionCertificatesRequest.digest)
}
inline std::string* ProvisionCertificatesRequest::mutable_digest() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ProvisionCertificatesRequest.digest)
  return _internal_mutable_digest();
}
inline const std::string& ProvisionCertificatesRequest::_internal_digest() const {
  return digest_.Get();
}
inline void ProvisionCertificatesRequest::_internal_set_digest(const std::string& value) {
  
  digest_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProvisionCertificatesRequest::set_digest(std::string&& value) {
  
  digest_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.ProvisionCertificatesRequest.digest)
}
inline void ProvisionCertificatesRequest::set_digest(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  digest_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.ProvisionCertificatesRequest.digest)
}
inline void ProvisionCertificatesRequest::set_digest(const void* value,
    size_t size) {
  
  digest_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.ProvisionCertificatesRequest.digest)
}
inline std::string* ProvisionCertificatesRequest::_internal_mutable_digest() {
  
  return digest_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProvisionCertificatesRequest::release_digest() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ProvisionCertificatesRequest.digest)
  return digest_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProvisionCertificatesRequest::set_allocated_digest(std::string* digest) {
  if (digest != nullptr) {
    
  } else {
    
  }
  digest_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), digest,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ProvisionCertificatesRequest.digest)
}

// -------------------------------------------------------------------

// ProvisionCertificatesResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void ProvisionCertificatesResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode ProvisionCertificatesResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode ProvisionCertificatesResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionCertificatesResponse.error_code)
  return _internal_error_code();
}
inline void ProvisionCertificatesResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void ProvisionCertificatesResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionCertificatesResponse.error_code)
}

// .nugget.app.keymaster.CertificateStatus cert_status = 2;
inline void ProvisionCertificatesResponse::clear_cert_status() {
  cert_status_ = 0;
}
inline ::nugget::app::keymaster::CertificateStatus ProvisionCertificatesResponse::_internal_cert_status() const {
  return static_cast< ::nugget::app::keymaster::CertificateStatus >(cert_status_);
}
inline ::nugget::app::keymaster::CertificateStatus ProvisionCertificatesResponse::cert_status() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ProvisionCertificatesResponse.cert_status)
  return _internal_cert_status();
}
inline void ProvisionCertificatesResponse::_internal_set_cert_status(::nugget::app::keymaster::CertificateStatus value) {
  
  cert_status_ = value;
}
inline void ProvisionCertificatesResponse::set_cert_status(::nugget::app::keymaster::CertificateStatus value) {
  _internal_set_cert_status(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ProvisionCertificatesResponse.cert_status)
}

// -------------------------------------------------------------------

// ReadCertificateRequest

// .nugget.app.keymaster.AttestationSelector selector = 1;
inline void ReadCertificateRequest::clear_selector() {
  selector_ = 0;
}
inline ::nugget::app::keymaster::AttestationSelector ReadCertificateRequest::_internal_selector() const {
  return static_cast< ::nugget::app::keymaster::AttestationSelector >(selector_);
}
inline ::nugget::app::keymaster::AttestationSelector ReadCertificateRequest::selector() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ReadCertificateRequest.selector)
  return _internal_selector();
}
inline void ReadCertificateRequest::_internal_set_selector(::nugget::app::keymaster::AttestationSelector value) {
  
  selector_ = value;
}
inline void ReadCertificateRequest::set_selector(::nugget::app::keymaster::AttestationSelector value) {
  _internal_set_selector(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ReadCertificateRequest.selector)
}

// .nugget.app.keymaster.Algorithm algorithm = 2;
inline void ReadCertificateRequest::clear_algorithm() {
  algorithm_ = 0;
}
inline ::nugget::app::keymaster::Algorithm ReadCertificateRequest::_internal_algorithm() const {
  return static_cast< ::nugget::app::keymaster::Algorithm >(algorithm_);
}
inline ::nugget::app::keymaster::Algorithm ReadCertificateRequest::algorithm() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ReadCertificateRequest.algorithm)
  return _internal_algorithm();
}
inline void ReadCertificateRequest::_internal_set_algorithm(::nugget::app::keymaster::Algorithm value) {
  
  algorithm_ = value;
}
inline void ReadCertificateRequest::set_algorithm(::nugget::app::keymaster::Algorithm value) {
  _internal_set_algorithm(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ReadCertificateRequest.algorithm)
}

// -------------------------------------------------------------------

// ReadCertificateResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void ReadCertificateResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode ReadCertificateResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode ReadCertificateResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ReadCertificateResponse.error_code)
  return _internal_error_code();
}
inline void ReadCertificateResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void ReadCertificateResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.ReadCertificateResponse.error_code)
}

// .nugget.app.keymaster.Certificate cert = 2;
inline bool ReadCertificateResponse::_internal_has_cert() const {
  return this != internal_default_instance() && cert_ != nullptr;
}
inline bool ReadCertificateResponse::has_cert() const {
  return _internal_has_cert();
}
inline const ::nugget::app::keymaster::Certificate& ReadCertificateResponse::_internal_cert() const {
  const ::nugget::app::keymaster::Certificate* p = cert_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::Certificate&>(
      ::nugget::app::keymaster::_Certificate_default_instance_);
}
inline const ::nugget::app::keymaster::Certificate& ReadCertificateResponse::cert() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.ReadCertificateResponse.cert)
  return _internal_cert();
}
inline void ReadCertificateResponse::unsafe_arena_set_allocated_cert(
    ::nugget::app::keymaster::Certificate* cert) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cert_);
  }
  cert_ = cert;
  if (cert) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.ReadCertificateResponse.cert)
}
inline ::nugget::app::keymaster::Certificate* ReadCertificateResponse::release_cert() {
  
  ::nugget::app::keymaster::Certificate* temp = cert_;
  cert_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::Certificate* ReadCertificateResponse::unsafe_arena_release_cert() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.ReadCertificateResponse.cert)
  
  ::nugget::app::keymaster::Certificate* temp = cert_;
  cert_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::Certificate* ReadCertificateResponse::_internal_mutable_cert() {
  
  if (cert_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::Certificate>(GetArena());
    cert_ = p;
  }
  return cert_;
}
inline ::nugget::app::keymaster::Certificate* ReadCertificateResponse::mutable_cert() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.ReadCertificateResponse.cert)
  return _internal_mutable_cert();
}
inline void ReadCertificateResponse::set_allocated_cert(::nugget::app::keymaster::Certificate* cert) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cert_);
  }
  if (cert) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cert)->GetArena();
    if (message_arena != submessage_arena) {
      cert = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cert, submessage_arena);
    }
    
  } else {
    
  }
  cert_ = cert;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.ReadCertificateResponse.cert)
}

// -------------------------------------------------------------------

// VigoReadVSRequest

// -------------------------------------------------------------------

// VigoReadVSResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void VigoReadVSResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode VigoReadVSResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode VigoReadVSResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.VigoReadVSResponse.error_code)
  return _internal_error_code();
}
inline void VigoReadVSResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void VigoReadVSResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.VigoReadVSResponse.error_code)
}

// .nugget.app.keymaster.VigoKey vs_key = 2;
inline bool VigoReadVSResponse::_internal_has_vs_key() const {
  return this != internal_default_instance() && vs_key_ != nullptr;
}
inline bool VigoReadVSResponse::has_vs_key() const {
  return _internal_has_vs_key();
}
inline const ::nugget::app::keymaster::VigoKey& VigoReadVSResponse::_internal_vs_key() const {
  const ::nugget::app::keymaster::VigoKey* p = vs_key_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::VigoKey&>(
      ::nugget::app::keymaster::_VigoKey_default_instance_);
}
inline const ::nugget::app::keymaster::VigoKey& VigoReadVSResponse::vs_key() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.VigoReadVSResponse.vs_key)
  return _internal_vs_key();
}
inline void VigoReadVSResponse::unsafe_arena_set_allocated_vs_key(
    ::nugget::app::keymaster::VigoKey* vs_key) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(vs_key_);
  }
  vs_key_ = vs_key;
  if (vs_key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.VigoReadVSResponse.vs_key)
}
inline ::nugget::app::keymaster::VigoKey* VigoReadVSResponse::release_vs_key() {
  
  ::nugget::app::keymaster::VigoKey* temp = vs_key_;
  vs_key_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::VigoKey* VigoReadVSResponse::unsafe_arena_release_vs_key() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.VigoReadVSResponse.vs_key)
  
  ::nugget::app::keymaster::VigoKey* temp = vs_key_;
  vs_key_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::VigoKey* VigoReadVSResponse::_internal_mutable_vs_key() {
  
  if (vs_key_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::VigoKey>(GetArena());
    vs_key_ = p;
  }
  return vs_key_;
}
inline ::nugget::app::keymaster::VigoKey* VigoReadVSResponse::mutable_vs_key() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.VigoReadVSResponse.vs_key)
  return _internal_mutable_vs_key();
}
inline void VigoReadVSResponse::set_allocated_vs_key(::nugget::app::keymaster::VigoKey* vs_key) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(vs_key_);
  }
  if (vs_key) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(vs_key)->GetArena();
    if (message_arena != submessage_arena) {
      vs_key = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vs_key, submessage_arena);
    }
    
  } else {
    
  }
  vs_key_ = vs_key;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.VigoReadVSResponse.vs_key)
}

// -------------------------------------------------------------------

// VigoStartChannelRequest

// .nugget.app.keymaster.VigoKey client_key = 1;
inline bool VigoStartChannelRequest::_internal_has_client_key() const {
  return this != internal_default_instance() && client_key_ != nullptr;
}
inline bool VigoStartChannelRequest::has_client_key() const {
  return _internal_has_client_key();
}
inline const ::nugget::app::keymaster::VigoKey& VigoStartChannelRequest::_internal_client_key() const {
  const ::nugget::app::keymaster::VigoKey* p = client_key_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::VigoKey&>(
      ::nugget::app::keymaster::_VigoKey_default_instance_);
}
inline const ::nugget::app::keymaster::VigoKey& VigoStartChannelRequest::client_key() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.VigoStartChannelRequest.client_key)
  return _internal_client_key();
}
inline void VigoStartChannelRequest::unsafe_arena_set_allocated_client_key(
    ::nugget::app::keymaster::VigoKey* client_key) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(client_key_);
  }
  client_key_ = client_key;
  if (client_key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.VigoStartChannelRequest.client_key)
}
inline ::nugget::app::keymaster::VigoKey* VigoStartChannelRequest::release_client_key() {
  
  ::nugget::app::keymaster::VigoKey* temp = client_key_;
  client_key_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::VigoKey* VigoStartChannelRequest::unsafe_arena_release_client_key() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.VigoStartChannelRequest.client_key)
  
  ::nugget::app::keymaster::VigoKey* temp = client_key_;
  client_key_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::VigoKey* VigoStartChannelRequest::_internal_mutable_client_key() {
  
  if (client_key_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::VigoKey>(GetArena());
    client_key_ = p;
  }
  return client_key_;
}
inline ::nugget::app::keymaster::VigoKey* VigoStartChannelRequest::mutable_client_key() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.VigoStartChannelRequest.client_key)
  return _internal_mutable_client_key();
}
inline void VigoStartChannelRequest::set_allocated_client_key(::nugget::app::keymaster::VigoKey* client_key) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(client_key_);
  }
  if (client_key) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(client_key)->GetArena();
    if (message_arena != submessage_arena) {
      client_key = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, client_key, submessage_arena);
    }
    
  } else {
    
  }
  client_key_ = client_key;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.VigoStartChannelRequest.client_key)
}

// -------------------------------------------------------------------

// VigoStartChannelResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void VigoStartChannelResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode VigoStartChannelResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode VigoStartChannelResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.VigoStartChannelResponse.error_code)
  return _internal_error_code();
}
inline void VigoStartChannelResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void VigoStartChannelResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.VigoStartChannelResponse.error_code)
}

// .nugget.app.keymaster.VigoKey server_key = 2;
inline bool VigoStartChannelResponse::_internal_has_server_key() const {
  return this != internal_default_instance() && server_key_ != nullptr;
}
inline bool VigoStartChannelResponse::has_server_key() const {
  return _internal_has_server_key();
}
inline const ::nugget::app::keymaster::VigoKey& VigoStartChannelResponse::_internal_server_key() const {
  const ::nugget::app::keymaster::VigoKey* p = server_key_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::VigoKey&>(
      ::nugget::app::keymaster::_VigoKey_default_instance_);
}
inline const ::nugget::app::keymaster::VigoKey& VigoStartChannelResponse::server_key() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.VigoStartChannelResponse.server_key)
  return _internal_server_key();
}
inline void VigoStartChannelResponse::unsafe_arena_set_allocated_server_key(
    ::nugget::app::keymaster::VigoKey* server_key) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(server_key_);
  }
  server_key_ = server_key;
  if (server_key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.VigoStartChannelResponse.server_key)
}
inline ::nugget::app::keymaster::VigoKey* VigoStartChannelResponse::release_server_key() {
  
  ::nugget::app::keymaster::VigoKey* temp = server_key_;
  server_key_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::VigoKey* VigoStartChannelResponse::unsafe_arena_release_server_key() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.VigoStartChannelResponse.server_key)
  
  ::nugget::app::keymaster::VigoKey* temp = server_key_;
  server_key_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::VigoKey* VigoStartChannelResponse::_internal_mutable_server_key() {
  
  if (server_key_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::VigoKey>(GetArena());
    server_key_ = p;
  }
  return server_key_;
}
inline ::nugget::app::keymaster::VigoKey* VigoStartChannelResponse::mutable_server_key() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.VigoStartChannelResponse.server_key)
  return _internal_mutable_server_key();
}
inline void VigoStartChannelResponse::set_allocated_server_key(::nugget::app::keymaster::VigoKey* server_key) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(server_key_);
  }
  if (server_key) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(server_key)->GetArena();
    if (message_arena != submessage_arena) {
      server_key = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, server_key, submessage_arena);
    }
    
  } else {
    
  }
  server_key_ = server_key;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.VigoStartChannelResponse.server_key)
}

// .nugget.app.keymaster.VigoSignature channel_signature = 3;
inline bool VigoStartChannelResponse::_internal_has_channel_signature() const {
  return this != internal_default_instance() && channel_signature_ != nullptr;
}
inline bool VigoStartChannelResponse::has_channel_signature() const {
  return _internal_has_channel_signature();
}
inline const ::nugget::app::keymaster::VigoSignature& VigoStartChannelResponse::_internal_channel_signature() const {
  const ::nugget::app::keymaster::VigoSignature* p = channel_signature_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::VigoSignature&>(
      ::nugget::app::keymaster::_VigoSignature_default_instance_);
}
inline const ::nugget::app::keymaster::VigoSignature& VigoStartChannelResponse::channel_signature() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.VigoStartChannelResponse.channel_signature)
  return _internal_channel_signature();
}
inline void VigoStartChannelResponse::unsafe_arena_set_allocated_channel_signature(
    ::nugget::app::keymaster::VigoSignature* channel_signature) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_signature_);
  }
  channel_signature_ = channel_signature;
  if (channel_signature) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.VigoStartChannelResponse.channel_signature)
}
inline ::nugget::app::keymaster::VigoSignature* VigoStartChannelResponse::release_channel_signature() {
  
  ::nugget::app::keymaster::VigoSignature* temp = channel_signature_;
  channel_signature_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::VigoSignature* VigoStartChannelResponse::unsafe_arena_release_channel_signature() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.VigoStartChannelResponse.channel_signature)
  
  ::nugget::app::keymaster::VigoSignature* temp = channel_signature_;
  channel_signature_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::VigoSignature* VigoStartChannelResponse::_internal_mutable_channel_signature() {
  
  if (channel_signature_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::VigoSignature>(GetArena());
    channel_signature_ = p;
  }
  return channel_signature_;
}
inline ::nugget::app::keymaster::VigoSignature* VigoStartChannelResponse::mutable_channel_signature() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.VigoStartChannelResponse.channel_signature)
  return _internal_mutable_channel_signature();
}
inline void VigoStartChannelResponse::set_allocated_channel_signature(::nugget::app::keymaster::VigoSignature* channel_signature) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_signature_);
  }
  if (channel_signature) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_signature)->GetArena();
    if (message_arena != submessage_arena) {
      channel_signature = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, channel_signature, submessage_arena);
    }
    
  } else {
    
  }
  channel_signature_ = channel_signature;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.VigoStartChannelResponse.channel_signature)
}

// -------------------------------------------------------------------

// VigoStoreSecretRequest

// .nugget.app.keymaster.VigoKey rs_key = 1;
inline bool VigoStoreSecretRequest::_internal_has_rs_key() const {
  return this != internal_default_instance() && rs_key_ != nullptr;
}
inline bool VigoStoreSecretRequest::has_rs_key() const {
  return _internal_has_rs_key();
}
inline const ::nugget::app::keymaster::VigoKey& VigoStoreSecretRequest::_internal_rs_key() const {
  const ::nugget::app::keymaster::VigoKey* p = rs_key_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::VigoKey&>(
      ::nugget::app::keymaster::_VigoKey_default_instance_);
}
inline const ::nugget::app::keymaster::VigoKey& VigoStoreSecretRequest::rs_key() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.VigoStoreSecretRequest.rs_key)
  return _internal_rs_key();
}
inline void VigoStoreSecretRequest::unsafe_arena_set_allocated_rs_key(
    ::nugget::app::keymaster::VigoKey* rs_key) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rs_key_);
  }
  rs_key_ = rs_key;
  if (rs_key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.VigoStoreSecretRequest.rs_key)
}
inline ::nugget::app::keymaster::VigoKey* VigoStoreSecretRequest::release_rs_key() {
  
  ::nugget::app::keymaster::VigoKey* temp = rs_key_;
  rs_key_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::VigoKey* VigoStoreSecretRequest::unsafe_arena_release_rs_key() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.VigoStoreSecretRequest.rs_key)
  
  ::nugget::app::keymaster::VigoKey* temp = rs_key_;
  rs_key_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::VigoKey* VigoStoreSecretRequest::_internal_mutable_rs_key() {
  
  if (rs_key_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::VigoKey>(GetArena());
    rs_key_ = p;
  }
  return rs_key_;
}
inline ::nugget::app::keymaster::VigoKey* VigoStoreSecretRequest::mutable_rs_key() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.VigoStoreSecretRequest.rs_key)
  return _internal_mutable_rs_key();
}
inline void VigoStoreSecretRequest::set_allocated_rs_key(::nugget::app::keymaster::VigoKey* rs_key) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rs_key_);
  }
  if (rs_key) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rs_key)->GetArena();
    if (message_arena != submessage_arena) {
      rs_key = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rs_key, submessage_arena);
    }
    
  } else {
    
  }
  rs_key_ = rs_key;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.VigoStoreSecretRequest.rs_key)
}

// .nugget.app.keymaster.VigoSecret secret_encrypted = 2;
inline bool VigoStoreSecretRequest::_internal_has_secret_encrypted() const {
  return this != internal_default_instance() && secret_encrypted_ != nullptr;
}
inline bool VigoStoreSecretRequest::has_secret_encrypted() const {
  return _internal_has_secret_encrypted();
}
inline const ::nugget::app::keymaster::VigoSecret& VigoStoreSecretRequest::_internal_secret_encrypted() const {
  const ::nugget::app::keymaster::VigoSecret* p = secret_encrypted_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::VigoSecret&>(
      ::nugget::app::keymaster::_VigoSecret_default_instance_);
}
inline const ::nugget::app::keymaster::VigoSecret& VigoStoreSecretRequest::secret_encrypted() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.VigoStoreSecretRequest.secret_encrypted)
  return _internal_secret_encrypted();
}
inline void VigoStoreSecretRequest::unsafe_arena_set_allocated_secret_encrypted(
    ::nugget::app::keymaster::VigoSecret* secret_encrypted) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(secret_encrypted_);
  }
  secret_encrypted_ = secret_encrypted;
  if (secret_encrypted) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.VigoStoreSecretRequest.secret_encrypted)
}
inline ::nugget::app::keymaster::VigoSecret* VigoStoreSecretRequest::release_secret_encrypted() {
  
  ::nugget::app::keymaster::VigoSecret* temp = secret_encrypted_;
  secret_encrypted_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::VigoSecret* VigoStoreSecretRequest::unsafe_arena_release_secret_encrypted() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.VigoStoreSecretRequest.secret_encrypted)
  
  ::nugget::app::keymaster::VigoSecret* temp = secret_encrypted_;
  secret_encrypted_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::VigoSecret* VigoStoreSecretRequest::_internal_mutable_secret_encrypted() {
  
  if (secret_encrypted_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::VigoSecret>(GetArena());
    secret_encrypted_ = p;
  }
  return secret_encrypted_;
}
inline ::nugget::app::keymaster::VigoSecret* VigoStoreSecretRequest::mutable_secret_encrypted() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.VigoStoreSecretRequest.secret_encrypted)
  return _internal_mutable_secret_encrypted();
}
inline void VigoStoreSecretRequest::set_allocated_secret_encrypted(::nugget::app::keymaster::VigoSecret* secret_encrypted) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(secret_encrypted_);
  }
  if (secret_encrypted) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(secret_encrypted)->GetArena();
    if (message_arena != submessage_arena) {
      secret_encrypted = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, secret_encrypted, submessage_arena);
    }
    
  } else {
    
  }
  secret_encrypted_ = secret_encrypted;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.VigoStoreSecretRequest.secret_encrypted)
}

// -------------------------------------------------------------------

// VigoStoreSecretResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void VigoStoreSecretResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode VigoStoreSecretResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode VigoStoreSecretResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.VigoStoreSecretResponse.error_code)
  return _internal_error_code();
}
inline void VigoStoreSecretResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void VigoStoreSecretResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.VigoStoreSecretResponse.error_code)
}

// -------------------------------------------------------------------

// VigoReleaseSecretRequest

// .nugget.app.keymaster.VigoSignature rs_signature = 1;
inline bool VigoReleaseSecretRequest::_internal_has_rs_signature() const {
  return this != internal_default_instance() && rs_signature_ != nullptr;
}
inline bool VigoReleaseSecretRequest::has_rs_signature() const {
  return _internal_has_rs_signature();
}
inline const ::nugget::app::keymaster::VigoSignature& VigoReleaseSecretRequest::_internal_rs_signature() const {
  const ::nugget::app::keymaster::VigoSignature* p = rs_signature_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::VigoSignature&>(
      ::nugget::app::keymaster::_VigoSignature_default_instance_);
}
inline const ::nugget::app::keymaster::VigoSignature& VigoReleaseSecretRequest::rs_signature() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.VigoReleaseSecretRequest.rs_signature)
  return _internal_rs_signature();
}
inline void VigoReleaseSecretRequest::unsafe_arena_set_allocated_rs_signature(
    ::nugget::app::keymaster::VigoSignature* rs_signature) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rs_signature_);
  }
  rs_signature_ = rs_signature;
  if (rs_signature) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.VigoReleaseSecretRequest.rs_signature)
}
inline ::nugget::app::keymaster::VigoSignature* VigoReleaseSecretRequest::release_rs_signature() {
  
  ::nugget::app::keymaster::VigoSignature* temp = rs_signature_;
  rs_signature_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::VigoSignature* VigoReleaseSecretRequest::unsafe_arena_release_rs_signature() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.VigoReleaseSecretRequest.rs_signature)
  
  ::nugget::app::keymaster::VigoSignature* temp = rs_signature_;
  rs_signature_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::VigoSignature* VigoReleaseSecretRequest::_internal_mutable_rs_signature() {
  
  if (rs_signature_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::VigoSignature>(GetArena());
    rs_signature_ = p;
  }
  return rs_signature_;
}
inline ::nugget::app::keymaster::VigoSignature* VigoReleaseSecretRequest::mutable_rs_signature() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.VigoReleaseSecretRequest.rs_signature)
  return _internal_mutable_rs_signature();
}
inline void VigoReleaseSecretRequest::set_allocated_rs_signature(::nugget::app::keymaster::VigoSignature* rs_signature) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rs_signature_);
  }
  if (rs_signature) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rs_signature)->GetArena();
    if (message_arena != submessage_arena) {
      rs_signature = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rs_signature, submessage_arena);
    }
    
  } else {
    
  }
  rs_signature_ = rs_signature;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.VigoReleaseSecretRequest.rs_signature)
}

// -------------------------------------------------------------------

// VigoReleaseSecretResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void VigoReleaseSecretResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode VigoReleaseSecretResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode VigoReleaseSecretResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.VigoReleaseSecretResponse.error_code)
  return _internal_error_code();
}
inline void VigoReleaseSecretResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void VigoReleaseSecretResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.VigoReleaseSecretResponse.error_code)
}

// .nugget.app.keymaster.VigoSecret secret_encrypted = 2;
inline bool VigoReleaseSecretResponse::_internal_has_secret_encrypted() const {
  return this != internal_default_instance() && secret_encrypted_ != nullptr;
}
inline bool VigoReleaseSecretResponse::has_secret_encrypted() const {
  return _internal_has_secret_encrypted();
}
inline const ::nugget::app::keymaster::VigoSecret& VigoReleaseSecretResponse::_internal_secret_encrypted() const {
  const ::nugget::app::keymaster::VigoSecret* p = secret_encrypted_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::VigoSecret&>(
      ::nugget::app::keymaster::_VigoSecret_default_instance_);
}
inline const ::nugget::app::keymaster::VigoSecret& VigoReleaseSecretResponse::secret_encrypted() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.VigoReleaseSecretResponse.secret_encrypted)
  return _internal_secret_encrypted();
}
inline void VigoReleaseSecretResponse::unsafe_arena_set_allocated_secret_encrypted(
    ::nugget::app::keymaster::VigoSecret* secret_encrypted) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(secret_encrypted_);
  }
  secret_encrypted_ = secret_encrypted;
  if (secret_encrypted) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.VigoReleaseSecretResponse.secret_encrypted)
}
inline ::nugget::app::keymaster::VigoSecret* VigoReleaseSecretResponse::release_secret_encrypted() {
  
  ::nugget::app::keymaster::VigoSecret* temp = secret_encrypted_;
  secret_encrypted_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::VigoSecret* VigoReleaseSecretResponse::unsafe_arena_release_secret_encrypted() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.VigoReleaseSecretResponse.secret_encrypted)
  
  ::nugget::app::keymaster::VigoSecret* temp = secret_encrypted_;
  secret_encrypted_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::VigoSecret* VigoReleaseSecretResponse::_internal_mutable_secret_encrypted() {
  
  if (secret_encrypted_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::VigoSecret>(GetArena());
    secret_encrypted_ = p;
  }
  return secret_encrypted_;
}
inline ::nugget::app::keymaster::VigoSecret* VigoReleaseSecretResponse::mutable_secret_encrypted() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.VigoReleaseSecretResponse.secret_encrypted)
  return _internal_mutable_secret_encrypted();
}
inline void VigoReleaseSecretResponse::set_allocated_secret_encrypted(::nugget::app::keymaster::VigoSecret* secret_encrypted) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(secret_encrypted_);
  }
  if (secret_encrypted) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(secret_encrypted)->GetArena();
    if (message_arena != submessage_arena) {
      secret_encrypted = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, secret_encrypted, submessage_arena);
    }
    
  } else {
    
  }
  secret_encrypted_ = secret_encrypted;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.VigoReleaseSecretResponse.secret_encrypted)
}

// -------------------------------------------------------------------

// IdentityStartAttestKeyRequest

// bytes pubkey = 1;
inline void IdentityStartAttestKeyRequest::clear_pubkey() {
  pubkey_.ClearToEmpty();
}
inline const std::string& IdentityStartAttestKeyRequest::pubkey() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.IdentityStartAttestKeyRequest.pubkey)
  return _internal_pubkey();
}
inline void IdentityStartAttestKeyRequest::set_pubkey(const std::string& value) {
  _internal_set_pubkey(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.IdentityStartAttestKeyRequest.pubkey)
}
inline std::string* IdentityStartAttestKeyRequest::mutable_pubkey() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.IdentityStartAttestKeyRequest.pubkey)
  return _internal_mutable_pubkey();
}
inline const std::string& IdentityStartAttestKeyRequest::_internal_pubkey() const {
  return pubkey_.Get();
}
inline void IdentityStartAttestKeyRequest::_internal_set_pubkey(const std::string& value) {
  
  pubkey_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void IdentityStartAttestKeyRequest::set_pubkey(std::string&& value) {
  
  pubkey_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.IdentityStartAttestKeyRequest.pubkey)
}
inline void IdentityStartAttestKeyRequest::set_pubkey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pubkey_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.IdentityStartAttestKeyRequest.pubkey)
}
inline void IdentityStartAttestKeyRequest::set_pubkey(const void* value,
    size_t size) {
  
  pubkey_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.IdentityStartAttestKeyRequest.pubkey)
}
inline std::string* IdentityStartAttestKeyRequest::_internal_mutable_pubkey() {
  
  return pubkey_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* IdentityStartAttestKeyRequest::release_pubkey() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.IdentityStartAttestKeyRequest.pubkey)
  return pubkey_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void IdentityStartAttestKeyRequest::set_allocated_pubkey(std::string* pubkey) {
  if (pubkey != nullptr) {
    
  } else {
    
  }
  pubkey_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pubkey,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.IdentityStartAttestKeyRequest.pubkey)
}

// .nugget.app.keymaster.KeyParameters params = 2;
inline bool IdentityStartAttestKeyRequest::_internal_has_params() const {
  return this != internal_default_instance() && params_ != nullptr;
}
inline bool IdentityStartAttestKeyRequest::has_params() const {
  return _internal_has_params();
}
inline const ::nugget::app::keymaster::KeyParameters& IdentityStartAttestKeyRequest::_internal_params() const {
  const ::nugget::app::keymaster::KeyParameters* p = params_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::KeyParameters&>(
      ::nugget::app::keymaster::_KeyParameters_default_instance_);
}
inline const ::nugget::app::keymaster::KeyParameters& IdentityStartAttestKeyRequest::params() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.IdentityStartAttestKeyRequest.params)
  return _internal_params();
}
inline void IdentityStartAttestKeyRequest::unsafe_arena_set_allocated_params(
    ::nugget::app::keymaster::KeyParameters* params) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  params_ = params;
  if (params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.IdentityStartAttestKeyRequest.params)
}
inline ::nugget::app::keymaster::KeyParameters* IdentityStartAttestKeyRequest::release_params() {
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* IdentityStartAttestKeyRequest::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.IdentityStartAttestKeyRequest.params)
  
  ::nugget::app::keymaster::KeyParameters* temp = params_;
  params_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::KeyParameters* IdentityStartAttestKeyRequest::_internal_mutable_params() {
  
  if (params_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::KeyParameters>(GetArena());
    params_ = p;
  }
  return params_;
}
inline ::nugget::app::keymaster::KeyParameters* IdentityStartAttestKeyRequest::mutable_params() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.IdentityStartAttestKeyRequest.params)
  return _internal_mutable_params();
}
inline void IdentityStartAttestKeyRequest::set_allocated_params(::nugget::app::keymaster::KeyParameters* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params)->GetArena();
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    
  } else {
    
  }
  params_ = params;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.IdentityStartAttestKeyRequest.params)
}

// uint32 attestation_app_id_len = 3;
inline void IdentityStartAttestKeyRequest::clear_attestation_app_id_len() {
  attestation_app_id_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IdentityStartAttestKeyRequest::_internal_attestation_app_id_len() const {
  return attestation_app_id_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IdentityStartAttestKeyRequest::attestation_app_id_len() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.IdentityStartAttestKeyRequest.attestation_app_id_len)
  return _internal_attestation_app_id_len();
}
inline void IdentityStartAttestKeyRequest::_internal_set_attestation_app_id_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  attestation_app_id_len_ = value;
}
inline void IdentityStartAttestKeyRequest::set_attestation_app_id_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_attestation_app_id_len(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.IdentityStartAttestKeyRequest.attestation_app_id_len)
}

// .nugget.app.keymaster.AttestationSelector selector = 4;
inline void IdentityStartAttestKeyRequest::clear_selector() {
  selector_ = 0;
}
inline ::nugget::app::keymaster::AttestationSelector IdentityStartAttestKeyRequest::_internal_selector() const {
  return static_cast< ::nugget::app::keymaster::AttestationSelector >(selector_);
}
inline ::nugget::app::keymaster::AttestationSelector IdentityStartAttestKeyRequest::selector() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.IdentityStartAttestKeyRequest.selector)
  return _internal_selector();
}
inline void IdentityStartAttestKeyRequest::_internal_set_selector(::nugget::app::keymaster::AttestationSelector value) {
  
  selector_ = value;
}
inline void IdentityStartAttestKeyRequest::set_selector(::nugget::app::keymaster::AttestationSelector value) {
  _internal_set_selector(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.IdentityStartAttestKeyRequest.selector)
}

// bytes not_before = 5;
inline void IdentityStartAttestKeyRequest::clear_not_before() {
  not_before_.ClearToEmpty();
}
inline const std::string& IdentityStartAttestKeyRequest::not_before() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.IdentityStartAttestKeyRequest.not_before)
  return _internal_not_before();
}
inline void IdentityStartAttestKeyRequest::set_not_before(const std::string& value) {
  _internal_set_not_before(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.IdentityStartAttestKeyRequest.not_before)
}
inline std::string* IdentityStartAttestKeyRequest::mutable_not_before() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.IdentityStartAttestKeyRequest.not_before)
  return _internal_mutable_not_before();
}
inline const std::string& IdentityStartAttestKeyRequest::_internal_not_before() const {
  return not_before_.Get();
}
inline void IdentityStartAttestKeyRequest::_internal_set_not_before(const std::string& value) {
  
  not_before_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void IdentityStartAttestKeyRequest::set_not_before(std::string&& value) {
  
  not_before_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.IdentityStartAttestKeyRequest.not_before)
}
inline void IdentityStartAttestKeyRequest::set_not_before(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  not_before_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.IdentityStartAttestKeyRequest.not_before)
}
inline void IdentityStartAttestKeyRequest::set_not_before(const void* value,
    size_t size) {
  
  not_before_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.IdentityStartAttestKeyRequest.not_before)
}
inline std::string* IdentityStartAttestKeyRequest::_internal_mutable_not_before() {
  
  return not_before_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* IdentityStartAttestKeyRequest::release_not_before() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.IdentityStartAttestKeyRequest.not_before)
  return not_before_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void IdentityStartAttestKeyRequest::set_allocated_not_before(std::string* not_before) {
  if (not_before != nullptr) {
    
  } else {
    
  }
  not_before_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), not_before,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.IdentityStartAttestKeyRequest.not_before)
}

// bytes not_after = 6;
inline void IdentityStartAttestKeyRequest::clear_not_after() {
  not_after_.ClearToEmpty();
}
inline const std::string& IdentityStartAttestKeyRequest::not_after() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.IdentityStartAttestKeyRequest.not_after)
  return _internal_not_after();
}
inline void IdentityStartAttestKeyRequest::set_not_after(const std::string& value) {
  _internal_set_not_after(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.IdentityStartAttestKeyRequest.not_after)
}
inline std::string* IdentityStartAttestKeyRequest::mutable_not_after() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.IdentityStartAttestKeyRequest.not_after)
  return _internal_mutable_not_after();
}
inline const std::string& IdentityStartAttestKeyRequest::_internal_not_after() const {
  return not_after_.Get();
}
inline void IdentityStartAttestKeyRequest::_internal_set_not_after(const std::string& value) {
  
  not_after_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void IdentityStartAttestKeyRequest::set_not_after(std::string&& value) {
  
  not_after_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.IdentityStartAttestKeyRequest.not_after)
}
inline void IdentityStartAttestKeyRequest::set_not_after(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  not_after_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.IdentityStartAttestKeyRequest.not_after)
}
inline void IdentityStartAttestKeyRequest::set_not_after(const void* value,
    size_t size) {
  
  not_after_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.IdentityStartAttestKeyRequest.not_after)
}
inline std::string* IdentityStartAttestKeyRequest::_internal_mutable_not_after() {
  
  return not_after_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* IdentityStartAttestKeyRequest::release_not_after() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.IdentityStartAttestKeyRequest.not_after)
  return not_after_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void IdentityStartAttestKeyRequest::set_allocated_not_after(std::string* not_after) {
  if (not_after != nullptr) {
    
  } else {
    
  }
  not_after_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), not_after,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.IdentityStartAttestKeyRequest.not_after)
}

// uint64 creation_time_ms = 7;
inline void IdentityStartAttestKeyRequest::clear_creation_time_ms() {
  creation_time_ms_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 IdentityStartAttestKeyRequest::_internal_creation_time_ms() const {
  return creation_time_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 IdentityStartAttestKeyRequest::creation_time_ms() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.IdentityStartAttestKeyRequest.creation_time_ms)
  return _internal_creation_time_ms();
}
inline void IdentityStartAttestKeyRequest::_internal_set_creation_time_ms(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  creation_time_ms_ = value;
}
inline void IdentityStartAttestKeyRequest::set_creation_time_ms(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_creation_time_ms(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.IdentityStartAttestKeyRequest.creation_time_ms)
}

// bool use_km_attest_key = 8;
inline void IdentityStartAttestKeyRequest::clear_use_km_attest_key() {
  use_km_attest_key_ = false;
}
inline bool IdentityStartAttestKeyRequest::_internal_use_km_attest_key() const {
  return use_km_attest_key_;
}
inline bool IdentityStartAttestKeyRequest::use_km_attest_key() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.IdentityStartAttestKeyRequest.use_km_attest_key)
  return _internal_use_km_attest_key();
}
inline void IdentityStartAttestKeyRequest::_internal_set_use_km_attest_key(bool value) {
  
  use_km_attest_key_ = value;
}
inline void IdentityStartAttestKeyRequest::set_use_km_attest_key(bool value) {
  _internal_set_use_km_attest_key(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.IdentityStartAttestKeyRequest.use_km_attest_key)
}

// -------------------------------------------------------------------

// IdentityStartAttestKeyResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void IdentityStartAttestKeyResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode IdentityStartAttestKeyResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode IdentityStartAttestKeyResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.IdentityStartAttestKeyResponse.error_code)
  return _internal_error_code();
}
inline void IdentityStartAttestKeyResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void IdentityStartAttestKeyResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.IdentityStartAttestKeyResponse.error_code)
}

// .nugget.app.keymaster.OperationHandle handle = 2;
inline bool IdentityStartAttestKeyResponse::_internal_has_handle() const {
  return this != internal_default_instance() && handle_ != nullptr;
}
inline bool IdentityStartAttestKeyResponse::has_handle() const {
  return _internal_has_handle();
}
inline const ::nugget::app::keymaster::OperationHandle& IdentityStartAttestKeyResponse::_internal_handle() const {
  const ::nugget::app::keymaster::OperationHandle* p = handle_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::OperationHandle&>(
      ::nugget::app::keymaster::_OperationHandle_default_instance_);
}
inline const ::nugget::app::keymaster::OperationHandle& IdentityStartAttestKeyResponse::handle() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.IdentityStartAttestKeyResponse.handle)
  return _internal_handle();
}
inline void IdentityStartAttestKeyResponse::unsafe_arena_set_allocated_handle(
    ::nugget::app::keymaster::OperationHandle* handle) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle_);
  }
  handle_ = handle;
  if (handle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.IdentityStartAttestKeyResponse.handle)
}
inline ::nugget::app::keymaster::OperationHandle* IdentityStartAttestKeyResponse::release_handle() {
  
  ::nugget::app::keymaster::OperationHandle* temp = handle_;
  handle_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::OperationHandle* IdentityStartAttestKeyResponse::unsafe_arena_release_handle() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.IdentityStartAttestKeyResponse.handle)
  
  ::nugget::app::keymaster::OperationHandle* temp = handle_;
  handle_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::OperationHandle* IdentityStartAttestKeyResponse::_internal_mutable_handle() {
  
  if (handle_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::OperationHandle>(GetArena());
    handle_ = p;
  }
  return handle_;
}
inline ::nugget::app::keymaster::OperationHandle* IdentityStartAttestKeyResponse::mutable_handle() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.IdentityStartAttestKeyResponse.handle)
  return _internal_mutable_handle();
}
inline void IdentityStartAttestKeyResponse::set_allocated_handle(::nugget::app::keymaster::OperationHandle* handle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle_);
  }
  if (handle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle)->GetArena();
    if (message_arena != submessage_arena) {
      handle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, handle, submessage_arena);
    }
    
  } else {
    
  }
  handle_ = handle;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.IdentityStartAttestKeyResponse.handle)
}

// bytes certificate_prologue = 3;
inline void IdentityStartAttestKeyResponse::clear_certificate_prologue() {
  certificate_prologue_.ClearToEmpty();
}
inline const std::string& IdentityStartAttestKeyResponse::certificate_prologue() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.IdentityStartAttestKeyResponse.certificate_prologue)
  return _internal_certificate_prologue();
}
inline void IdentityStartAttestKeyResponse::set_certificate_prologue(const std::string& value) {
  _internal_set_certificate_prologue(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.IdentityStartAttestKeyResponse.certificate_prologue)
}
inline std::string* IdentityStartAttestKeyResponse::mutable_certificate_prologue() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.IdentityStartAttestKeyResponse.certificate_prologue)
  return _internal_mutable_certificate_prologue();
}
inline const std::string& IdentityStartAttestKeyResponse::_internal_certificate_prologue() const {
  return certificate_prologue_.Get();
}
inline void IdentityStartAttestKeyResponse::_internal_set_certificate_prologue(const std::string& value) {
  
  certificate_prologue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void IdentityStartAttestKeyResponse::set_certificate_prologue(std::string&& value) {
  
  certificate_prologue_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.IdentityStartAttestKeyResponse.certificate_prologue)
}
inline void IdentityStartAttestKeyResponse::set_certificate_prologue(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  certificate_prologue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.IdentityStartAttestKeyResponse.certificate_prologue)
}
inline void IdentityStartAttestKeyResponse::set_certificate_prologue(const void* value,
    size_t size) {
  
  certificate_prologue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.IdentityStartAttestKeyResponse.certificate_prologue)
}
inline std::string* IdentityStartAttestKeyResponse::_internal_mutable_certificate_prologue() {
  
  return certificate_prologue_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* IdentityStartAttestKeyResponse::release_certificate_prologue() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.IdentityStartAttestKeyResponse.certificate_prologue)
  return certificate_prologue_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void IdentityStartAttestKeyResponse::set_allocated_certificate_prologue(std::string* certificate_prologue) {
  if (certificate_prologue != nullptr) {
    
  } else {
    
  }
  certificate_prologue_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), certificate_prologue,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.IdentityStartAttestKeyResponse.certificate_prologue)
}

// -------------------------------------------------------------------

// IdentityFinishAttestKeyRequest

// .nugget.app.keymaster.OperationHandle handle = 1;
inline bool IdentityFinishAttestKeyRequest::_internal_has_handle() const {
  return this != internal_default_instance() && handle_ != nullptr;
}
inline bool IdentityFinishAttestKeyRequest::has_handle() const {
  return _internal_has_handle();
}
inline const ::nugget::app::keymaster::OperationHandle& IdentityFinishAttestKeyRequest::_internal_handle() const {
  const ::nugget::app::keymaster::OperationHandle* p = handle_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::keymaster::OperationHandle&>(
      ::nugget::app::keymaster::_OperationHandle_default_instance_);
}
inline const ::nugget::app::keymaster::OperationHandle& IdentityFinishAttestKeyRequest::handle() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.IdentityFinishAttestKeyRequest.handle)
  return _internal_handle();
}
inline void IdentityFinishAttestKeyRequest::unsafe_arena_set_allocated_handle(
    ::nugget::app::keymaster::OperationHandle* handle) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle_);
  }
  handle_ = handle;
  if (handle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.keymaster.IdentityFinishAttestKeyRequest.handle)
}
inline ::nugget::app::keymaster::OperationHandle* IdentityFinishAttestKeyRequest::release_handle() {
  
  ::nugget::app::keymaster::OperationHandle* temp = handle_;
  handle_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::keymaster::OperationHandle* IdentityFinishAttestKeyRequest::unsafe_arena_release_handle() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.IdentityFinishAttestKeyRequest.handle)
  
  ::nugget::app::keymaster::OperationHandle* temp = handle_;
  handle_ = nullptr;
  return temp;
}
inline ::nugget::app::keymaster::OperationHandle* IdentityFinishAttestKeyRequest::_internal_mutable_handle() {
  
  if (handle_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::keymaster::OperationHandle>(GetArena());
    handle_ = p;
  }
  return handle_;
}
inline ::nugget::app::keymaster::OperationHandle* IdentityFinishAttestKeyRequest::mutable_handle() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.IdentityFinishAttestKeyRequest.handle)
  return _internal_mutable_handle();
}
inline void IdentityFinishAttestKeyRequest::set_allocated_handle(::nugget::app::keymaster::OperationHandle* handle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle_);
  }
  if (handle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle)->GetArena();
    if (message_arena != submessage_arena) {
      handle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, handle, submessage_arena);
    }
    
  } else {
    
  }
  handle_ = handle;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.IdentityFinishAttestKeyRequest.handle)
}

// bool use_km_attest_key = 2;
inline void IdentityFinishAttestKeyRequest::clear_use_km_attest_key() {
  use_km_attest_key_ = false;
}
inline bool IdentityFinishAttestKeyRequest::_internal_use_km_attest_key() const {
  return use_km_attest_key_;
}
inline bool IdentityFinishAttestKeyRequest::use_km_attest_key() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.IdentityFinishAttestKeyRequest.use_km_attest_key)
  return _internal_use_km_attest_key();
}
inline void IdentityFinishAttestKeyRequest::_internal_set_use_km_attest_key(bool value) {
  
  use_km_attest_key_ = value;
}
inline void IdentityFinishAttestKeyRequest::set_use_km_attest_key(bool value) {
  _internal_set_use_km_attest_key(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.IdentityFinishAttestKeyRequest.use_km_attest_key)
}

// -------------------------------------------------------------------

// IdentityFinishAttestKeyResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void IdentityFinishAttestKeyResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode IdentityFinishAttestKeyResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode IdentityFinishAttestKeyResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.IdentityFinishAttestKeyResponse.error_code)
  return _internal_error_code();
}
inline void IdentityFinishAttestKeyResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void IdentityFinishAttestKeyResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.IdentityFinishAttestKeyResponse.error_code)
}

// bytes certificate_epilogue = 2;
inline void IdentityFinishAttestKeyResponse::clear_certificate_epilogue() {
  certificate_epilogue_.ClearToEmpty();
}
inline const std::string& IdentityFinishAttestKeyResponse::certificate_epilogue() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.IdentityFinishAttestKeyResponse.certificate_epilogue)
  return _internal_certificate_epilogue();
}
inline void IdentityFinishAttestKeyResponse::set_certificate_epilogue(const std::string& value) {
  _internal_set_certificate_epilogue(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.IdentityFinishAttestKeyResponse.certificate_epilogue)
}
inline std::string* IdentityFinishAttestKeyResponse::mutable_certificate_epilogue() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.IdentityFinishAttestKeyResponse.certificate_epilogue)
  return _internal_mutable_certificate_epilogue();
}
inline const std::string& IdentityFinishAttestKeyResponse::_internal_certificate_epilogue() const {
  return certificate_epilogue_.Get();
}
inline void IdentityFinishAttestKeyResponse::_internal_set_certificate_epilogue(const std::string& value) {
  
  certificate_epilogue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void IdentityFinishAttestKeyResponse::set_certificate_epilogue(std::string&& value) {
  
  certificate_epilogue_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.IdentityFinishAttestKeyResponse.certificate_epilogue)
}
inline void IdentityFinishAttestKeyResponse::set_certificate_epilogue(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  certificate_epilogue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.IdentityFinishAttestKeyResponse.certificate_epilogue)
}
inline void IdentityFinishAttestKeyResponse::set_certificate_epilogue(const void* value,
    size_t size) {
  
  certificate_epilogue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.IdentityFinishAttestKeyResponse.certificate_epilogue)
}
inline std::string* IdentityFinishAttestKeyResponse::_internal_mutable_certificate_epilogue() {
  
  return certificate_epilogue_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* IdentityFinishAttestKeyResponse::release_certificate_epilogue() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.IdentityFinishAttestKeyResponse.certificate_epilogue)
  return certificate_epilogue_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void IdentityFinishAttestKeyResponse::set_allocated_certificate_epilogue(std::string* certificate_epilogue) {
  if (certificate_epilogue != nullptr) {
    
  } else {
    
  }
  certificate_epilogue_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), certificate_epilogue,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.IdentityFinishAttestKeyResponse.certificate_epilogue)
}

// .nugget.app.keymaster.ChipFusing chip_fusing = 3;
inline void IdentityFinishAttestKeyResponse::clear_chip_fusing() {
  chip_fusing_ = 0;
}
inline ::nugget::app::keymaster::ChipFusing IdentityFinishAttestKeyResponse::_internal_chip_fusing() const {
  return static_cast< ::nugget::app::keymaster::ChipFusing >(chip_fusing_);
}
inline ::nugget::app::keymaster::ChipFusing IdentityFinishAttestKeyResponse::chip_fusing() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.IdentityFinishAttestKeyResponse.chip_fusing)
  return _internal_chip_fusing();
}
inline void IdentityFinishAttestKeyResponse::_internal_set_chip_fusing(::nugget::app::keymaster::ChipFusing value) {
  
  chip_fusing_ = value;
}
inline void IdentityFinishAttestKeyResponse::set_chip_fusing(::nugget::app::keymaster::ChipFusing value) {
  _internal_set_chip_fusing(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.IdentityFinishAttestKeyResponse.chip_fusing)
}

// bool nodelocked_ro = 4;
inline void IdentityFinishAttestKeyResponse::clear_nodelocked_ro() {
  nodelocked_ro_ = false;
}
inline bool IdentityFinishAttestKeyResponse::_internal_nodelocked_ro() const {
  return nodelocked_ro_;
}
inline bool IdentityFinishAttestKeyResponse::nodelocked_ro() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.IdentityFinishAttestKeyResponse.nodelocked_ro)
  return _internal_nodelocked_ro();
}
inline void IdentityFinishAttestKeyResponse::_internal_set_nodelocked_ro(bool value) {
  
  nodelocked_ro_ = value;
}
inline void IdentityFinishAttestKeyResponse::set_nodelocked_ro(bool value) {
  _internal_set_nodelocked_ro(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.IdentityFinishAttestKeyResponse.nodelocked_ro)
}

// -------------------------------------------------------------------

// GetPerFactoryResetValueRequest

// bool bootloader_only = 1;
inline void GetPerFactoryResetValueRequest::clear_bootloader_only() {
  bootloader_only_ = false;
}
inline bool GetPerFactoryResetValueRequest::_internal_bootloader_only() const {
  return bootloader_only_;
}
inline bool GetPerFactoryResetValueRequest::bootloader_only() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GetPerFactoryResetValueRequest.bootloader_only)
  return _internal_bootloader_only();
}
inline void GetPerFactoryResetValueRequest::_internal_set_bootloader_only(bool value) {
  
  bootloader_only_ = value;
}
inline void GetPerFactoryResetValueRequest::set_bootloader_only(bool value) {
  _internal_set_bootloader_only(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.GetPerFactoryResetValueRequest.bootloader_only)
}

// bytes input = 2;
inline void GetPerFactoryResetValueRequest::clear_input() {
  input_.ClearToEmpty();
}
inline const std::string& GetPerFactoryResetValueRequest::input() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GetPerFactoryResetValueRequest.input)
  return _internal_input();
}
inline void GetPerFactoryResetValueRequest::set_input(const std::string& value) {
  _internal_set_input(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.GetPerFactoryResetValueRequest.input)
}
inline std::string* GetPerFactoryResetValueRequest::mutable_input() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.GetPerFactoryResetValueRequest.input)
  return _internal_mutable_input();
}
inline const std::string& GetPerFactoryResetValueRequest::_internal_input() const {
  return input_.Get();
}
inline void GetPerFactoryResetValueRequest::_internal_set_input(const std::string& value) {
  
  input_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetPerFactoryResetValueRequest::set_input(std::string&& value) {
  
  input_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.GetPerFactoryResetValueRequest.input)
}
inline void GetPerFactoryResetValueRequest::set_input(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  input_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.GetPerFactoryResetValueRequest.input)
}
inline void GetPerFactoryResetValueRequest::set_input(const void* value,
    size_t size) {
  
  input_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.GetPerFactoryResetValueRequest.input)
}
inline std::string* GetPerFactoryResetValueRequest::_internal_mutable_input() {
  
  return input_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetPerFactoryResetValueRequest::release_input() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.GetPerFactoryResetValueRequest.input)
  return input_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetPerFactoryResetValueRequest::set_allocated_input(std::string* input) {
  if (input != nullptr) {
    
  } else {
    
  }
  input_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), input,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.GetPerFactoryResetValueRequest.input)
}

// -------------------------------------------------------------------

// GetPerFactoryResetValueResponse

// .nugget.app.keymaster.ErrorCode error_code = 1;
inline void GetPerFactoryResetValueResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::nugget::app::keymaster::ErrorCode GetPerFactoryResetValueResponse::_internal_error_code() const {
  return static_cast< ::nugget::app::keymaster::ErrorCode >(error_code_);
}
inline ::nugget::app::keymaster::ErrorCode GetPerFactoryResetValueResponse::error_code() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GetPerFactoryResetValueResponse.error_code)
  return _internal_error_code();
}
inline void GetPerFactoryResetValueResponse::_internal_set_error_code(::nugget::app::keymaster::ErrorCode value) {
  
  error_code_ = value;
}
inline void GetPerFactoryResetValueResponse::set_error_code(::nugget::app::keymaster::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.GetPerFactoryResetValueResponse.error_code)
}

// bytes output = 2;
inline void GetPerFactoryResetValueResponse::clear_output() {
  output_.ClearToEmpty();
}
inline const std::string& GetPerFactoryResetValueResponse::output() const {
  // @@protoc_insertion_point(field_get:nugget.app.keymaster.GetPerFactoryResetValueResponse.output)
  return _internal_output();
}
inline void GetPerFactoryResetValueResponse::set_output(const std::string& value) {
  _internal_set_output(value);
  // @@protoc_insertion_point(field_set:nugget.app.keymaster.GetPerFactoryResetValueResponse.output)
}
inline std::string* GetPerFactoryResetValueResponse::mutable_output() {
  // @@protoc_insertion_point(field_mutable:nugget.app.keymaster.GetPerFactoryResetValueResponse.output)
  return _internal_mutable_output();
}
inline const std::string& GetPerFactoryResetValueResponse::_internal_output() const {
  return output_.Get();
}
inline void GetPerFactoryResetValueResponse::_internal_set_output(const std::string& value) {
  
  output_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetPerFactoryResetValueResponse::set_output(std::string&& value) {
  
  output_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.keymaster.GetPerFactoryResetValueResponse.output)
}
inline void GetPerFactoryResetValueResponse::set_output(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  output_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.keymaster.GetPerFactoryResetValueResponse.output)
}
inline void GetPerFactoryResetValueResponse::set_output(const void* value,
    size_t size) {
  
  output_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.keymaster.GetPerFactoryResetValueResponse.output)
}
inline std::string* GetPerFactoryResetValueResponse::_internal_mutable_output() {
  
  return output_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetPerFactoryResetValueResponse::release_output() {
  // @@protoc_insertion_point(field_release:nugget.app.keymaster.GetPerFactoryResetValueResponse.output)
  return output_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetPerFactoryResetValueResponse::set_allocated_output(std::string* output) {
  if (output != nullptr) {
    
  } else {
    
  }
  output_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), output,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.keymaster.GetPerFactoryResetValueResponse.output)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace keymaster
}  // namespace app
}  // namespace nugget

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_nugget_2fapp_2fkeymaster_2fkeymaster_2eproto
