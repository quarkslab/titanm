// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nugget/app/avb/avb.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_nugget_2fapp_2favb_2favb_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_nugget_2fapp_2favb_2favb_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015005 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "nugget/protobuf/options.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_nugget_2fapp_2favb_2favb_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_nugget_2fapp_2favb_2favb_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[34]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_nugget_2fapp_2favb_2favb_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(int index);
namespace nugget {
namespace app {
namespace avb {
class BootloaderDoneRequest;
struct BootloaderDoneRequestDefaultTypeInternal;
extern BootloaderDoneRequestDefaultTypeInternal _BootloaderDoneRequest_default_instance_;
class BootloaderDoneResponse;
struct BootloaderDoneResponseDefaultTypeInternal;
extern BootloaderDoneResponseDefaultTypeInternal _BootloaderDoneResponse_default_instance_;
class CarrierLockRequest;
struct CarrierLockRequestDefaultTypeInternal;
extern CarrierLockRequestDefaultTypeInternal _CarrierLockRequest_default_instance_;
class CarrierLockResponse;
struct CarrierLockResponseDefaultTypeInternal;
extern CarrierLockResponseDefaultTypeInternal _CarrierLockResponse_default_instance_;
class CarrierLockTestRequest;
struct CarrierLockTestRequestDefaultTypeInternal;
extern CarrierLockTestRequestDefaultTypeInternal _CarrierLockTestRequest_default_instance_;
class CarrierLockTestResponse;
struct CarrierLockTestResponseDefaultTypeInternal;
extern CarrierLockTestResponseDefaultTypeInternal _CarrierLockTestResponse_default_instance_;
class CarrierUnlock;
struct CarrierUnlockDefaultTypeInternal;
extern CarrierUnlockDefaultTypeInternal _CarrierUnlock_default_instance_;
class CarrierUnlockRequest;
struct CarrierUnlockRequestDefaultTypeInternal;
extern CarrierUnlockRequestDefaultTypeInternal _CarrierUnlockRequest_default_instance_;
class CarrierUnlockResponse;
struct CarrierUnlockResponseDefaultTypeInternal;
extern CarrierUnlockResponseDefaultTypeInternal _CarrierUnlockResponse_default_instance_;
class GetLockRequest;
struct GetLockRequestDefaultTypeInternal;
extern GetLockRequestDefaultTypeInternal _GetLockRequest_default_instance_;
class GetLockResponse;
struct GetLockResponseDefaultTypeInternal;
extern GetLockResponseDefaultTypeInternal _GetLockResponse_default_instance_;
class GetOwnerKeyRequest;
struct GetOwnerKeyRequestDefaultTypeInternal;
extern GetOwnerKeyRequestDefaultTypeInternal _GetOwnerKeyRequest_default_instance_;
class GetOwnerKeyResponse;
struct GetOwnerKeyResponseDefaultTypeInternal;
extern GetOwnerKeyResponseDefaultTypeInternal _GetOwnerKeyResponse_default_instance_;
class GetResetChallengeRequest;
struct GetResetChallengeRequestDefaultTypeInternal;
extern GetResetChallengeRequestDefaultTypeInternal _GetResetChallengeRequest_default_instance_;
class GetResetChallengeResponse;
struct GetResetChallengeResponseDefaultTypeInternal;
extern GetResetChallengeResponseDefaultTypeInternal _GetResetChallengeResponse_default_instance_;
class GetStateRequest;
struct GetStateRequestDefaultTypeInternal;
extern GetStateRequestDefaultTypeInternal _GetStateRequest_default_instance_;
class GetStateResponse;
struct GetStateResponseDefaultTypeInternal;
extern GetStateResponseDefaultTypeInternal _GetStateResponse_default_instance_;
class LoadRequest;
struct LoadRequestDefaultTypeInternal;
extern LoadRequestDefaultTypeInternal _LoadRequest_default_instance_;
class LoadResponse;
struct LoadResponseDefaultTypeInternal;
extern LoadResponseDefaultTypeInternal _LoadResponse_default_instance_;
class ProductionResetTestRequest;
struct ProductionResetTestRequestDefaultTypeInternal;
extern ProductionResetTestRequestDefaultTypeInternal _ProductionResetTestRequest_default_instance_;
class ProductionResetTestResponse;
struct ProductionResetTestResponseDefaultTypeInternal;
extern ProductionResetTestResponseDefaultTypeInternal _ProductionResetTestResponse_default_instance_;
class ResetRequest;
struct ResetRequestDefaultTypeInternal;
extern ResetRequestDefaultTypeInternal _ResetRequest_default_instance_;
class ResetResponse;
struct ResetResponseDefaultTypeInternal;
extern ResetResponseDefaultTypeInternal _ResetResponse_default_instance_;
class ResetToken;
struct ResetTokenDefaultTypeInternal;
extern ResetTokenDefaultTypeInternal _ResetToken_default_instance_;
class SetBootLockRequest;
struct SetBootLockRequestDefaultTypeInternal;
extern SetBootLockRequestDefaultTypeInternal _SetBootLockRequest_default_instance_;
class SetBootLockResponse;
struct SetBootLockResponseDefaultTypeInternal;
extern SetBootLockResponseDefaultTypeInternal _SetBootLockResponse_default_instance_;
class SetDeviceLockRequest;
struct SetDeviceLockRequestDefaultTypeInternal;
extern SetDeviceLockRequestDefaultTypeInternal _SetDeviceLockRequest_default_instance_;
class SetDeviceLockResponse;
struct SetDeviceLockResponseDefaultTypeInternal;
extern SetDeviceLockResponseDefaultTypeInternal _SetDeviceLockResponse_default_instance_;
class SetOwnerLockRequest;
struct SetOwnerLockRequestDefaultTypeInternal;
extern SetOwnerLockRequestDefaultTypeInternal _SetOwnerLockRequest_default_instance_;
class SetOwnerLockResponse;
struct SetOwnerLockResponseDefaultTypeInternal;
extern SetOwnerLockResponseDefaultTypeInternal _SetOwnerLockResponse_default_instance_;
class SetProductionRequest;
struct SetProductionRequestDefaultTypeInternal;
extern SetProductionRequestDefaultTypeInternal _SetProductionRequest_default_instance_;
class SetProductionResponse;
struct SetProductionResponseDefaultTypeInternal;
extern SetProductionResponseDefaultTypeInternal _SetProductionResponse_default_instance_;
class StoreRequest;
struct StoreRequestDefaultTypeInternal;
extern StoreRequestDefaultTypeInternal _StoreRequest_default_instance_;
class StoreResponse;
struct StoreResponseDefaultTypeInternal;
extern StoreResponseDefaultTypeInternal _StoreResponse_default_instance_;
}  // namespace avb
}  // namespace app
}  // namespace nugget
PROTOBUF_NAMESPACE_OPEN
template<> ::nugget::app::avb::BootloaderDoneRequest* Arena::CreateMaybeMessage<::nugget::app::avb::BootloaderDoneRequest>(Arena*);
template<> ::nugget::app::avb::BootloaderDoneResponse* Arena::CreateMaybeMessage<::nugget::app::avb::BootloaderDoneResponse>(Arena*);
template<> ::nugget::app::avb::CarrierLockRequest* Arena::CreateMaybeMessage<::nugget::app::avb::CarrierLockRequest>(Arena*);
template<> ::nugget::app::avb::CarrierLockResponse* Arena::CreateMaybeMessage<::nugget::app::avb::CarrierLockResponse>(Arena*);
template<> ::nugget::app::avb::CarrierLockTestRequest* Arena::CreateMaybeMessage<::nugget::app::avb::CarrierLockTestRequest>(Arena*);
template<> ::nugget::app::avb::CarrierLockTestResponse* Arena::CreateMaybeMessage<::nugget::app::avb::CarrierLockTestResponse>(Arena*);
template<> ::nugget::app::avb::CarrierUnlock* Arena::CreateMaybeMessage<::nugget::app::avb::CarrierUnlock>(Arena*);
template<> ::nugget::app::avb::CarrierUnlockRequest* Arena::CreateMaybeMessage<::nugget::app::avb::CarrierUnlockRequest>(Arena*);
template<> ::nugget::app::avb::CarrierUnlockResponse* Arena::CreateMaybeMessage<::nugget::app::avb::CarrierUnlockResponse>(Arena*);
template<> ::nugget::app::avb::GetLockRequest* Arena::CreateMaybeMessage<::nugget::app::avb::GetLockRequest>(Arena*);
template<> ::nugget::app::avb::GetLockResponse* Arena::CreateMaybeMessage<::nugget::app::avb::GetLockResponse>(Arena*);
template<> ::nugget::app::avb::GetOwnerKeyRequest* Arena::CreateMaybeMessage<::nugget::app::avb::GetOwnerKeyRequest>(Arena*);
template<> ::nugget::app::avb::GetOwnerKeyResponse* Arena::CreateMaybeMessage<::nugget::app::avb::GetOwnerKeyResponse>(Arena*);
template<> ::nugget::app::avb::GetResetChallengeRequest* Arena::CreateMaybeMessage<::nugget::app::avb::GetResetChallengeRequest>(Arena*);
template<> ::nugget::app::avb::GetResetChallengeResponse* Arena::CreateMaybeMessage<::nugget::app::avb::GetResetChallengeResponse>(Arena*);
template<> ::nugget::app::avb::GetStateRequest* Arena::CreateMaybeMessage<::nugget::app::avb::GetStateRequest>(Arena*);
template<> ::nugget::app::avb::GetStateResponse* Arena::CreateMaybeMessage<::nugget::app::avb::GetStateResponse>(Arena*);
template<> ::nugget::app::avb::LoadRequest* Arena::CreateMaybeMessage<::nugget::app::avb::LoadRequest>(Arena*);
template<> ::nugget::app::avb::LoadResponse* Arena::CreateMaybeMessage<::nugget::app::avb::LoadResponse>(Arena*);
template<> ::nugget::app::avb::ProductionResetTestRequest* Arena::CreateMaybeMessage<::nugget::app::avb::ProductionResetTestRequest>(Arena*);
template<> ::nugget::app::avb::ProductionResetTestResponse* Arena::CreateMaybeMessage<::nugget::app::avb::ProductionResetTestResponse>(Arena*);
template<> ::nugget::app::avb::ResetRequest* Arena::CreateMaybeMessage<::nugget::app::avb::ResetRequest>(Arena*);
template<> ::nugget::app::avb::ResetResponse* Arena::CreateMaybeMessage<::nugget::app::avb::ResetResponse>(Arena*);
template<> ::nugget::app::avb::ResetToken* Arena::CreateMaybeMessage<::nugget::app::avb::ResetToken>(Arena*);
template<> ::nugget::app::avb::SetBootLockRequest* Arena::CreateMaybeMessage<::nugget::app::avb::SetBootLockRequest>(Arena*);
template<> ::nugget::app::avb::SetBootLockResponse* Arena::CreateMaybeMessage<::nugget::app::avb::SetBootLockResponse>(Arena*);
template<> ::nugget::app::avb::SetDeviceLockRequest* Arena::CreateMaybeMessage<::nugget::app::avb::SetDeviceLockRequest>(Arena*);
template<> ::nugget::app::avb::SetDeviceLockResponse* Arena::CreateMaybeMessage<::nugget::app::avb::SetDeviceLockResponse>(Arena*);
template<> ::nugget::app::avb::SetOwnerLockRequest* Arena::CreateMaybeMessage<::nugget::app::avb::SetOwnerLockRequest>(Arena*);
template<> ::nugget::app::avb::SetOwnerLockResponse* Arena::CreateMaybeMessage<::nugget::app::avb::SetOwnerLockResponse>(Arena*);
template<> ::nugget::app::avb::SetProductionRequest* Arena::CreateMaybeMessage<::nugget::app::avb::SetProductionRequest>(Arena*);
template<> ::nugget::app::avb::SetProductionResponse* Arena::CreateMaybeMessage<::nugget::app::avb::SetProductionResponse>(Arena*);
template<> ::nugget::app::avb::StoreRequest* Arena::CreateMaybeMessage<::nugget::app::avb::StoreRequest>(Arena*);
template<> ::nugget::app::avb::StoreResponse* Arena::CreateMaybeMessage<::nugget::app::avb::StoreResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace nugget {
namespace app {
namespace avb {

enum ResetToken_Selectors : int {
  ResetToken_Selectors_INVALID = 0,
  ResetToken_Selectors_CURRENT = 1,
  ResetToken_Selectors_ResetToken_Selectors_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ResetToken_Selectors_ResetToken_Selectors_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ResetToken_Selectors_IsValid(int value);
constexpr ResetToken_Selectors ResetToken_Selectors_Selectors_MIN = ResetToken_Selectors_INVALID;
constexpr ResetToken_Selectors ResetToken_Selectors_Selectors_MAX = ResetToken_Selectors_CURRENT;
constexpr int ResetToken_Selectors_Selectors_ARRAYSIZE = ResetToken_Selectors_Selectors_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ResetToken_Selectors_descriptor();
template<typename T>
inline const std::string& ResetToken_Selectors_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ResetToken_Selectors>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ResetToken_Selectors_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ResetToken_Selectors_descriptor(), enum_t_value);
}
inline bool ResetToken_Selectors_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ResetToken_Selectors* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ResetToken_Selectors>(
    ResetToken_Selectors_descriptor(), name, value);
}
enum ResetRequest_ResetKind : int {
  ResetRequest_ResetKind_PRODUCTION = 0,
  ResetRequest_ResetKind_LOCKS = 1,
  ResetRequest_ResetKind_ResetRequest_ResetKind_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ResetRequest_ResetKind_ResetRequest_ResetKind_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ResetRequest_ResetKind_IsValid(int value);
constexpr ResetRequest_ResetKind ResetRequest_ResetKind_ResetKind_MIN = ResetRequest_ResetKind_PRODUCTION;
constexpr ResetRequest_ResetKind ResetRequest_ResetKind_ResetKind_MAX = ResetRequest_ResetKind_LOCKS;
constexpr int ResetRequest_ResetKind_ResetKind_ARRAYSIZE = ResetRequest_ResetKind_ResetKind_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ResetRequest_ResetKind_descriptor();
template<typename T>
inline const std::string& ResetRequest_ResetKind_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ResetRequest_ResetKind>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ResetRequest_ResetKind_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ResetRequest_ResetKind_descriptor(), enum_t_value);
}
inline bool ResetRequest_ResetKind_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ResetRequest_ResetKind* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ResetRequest_ResetKind>(
    ResetRequest_ResetKind_descriptor(), name, value);
}
enum LockIndex : int {
  CARRIER = 0,
  DEVICE = 1,
  BOOT = 2,
  OWNER = 3,
  LockIndex_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  LockIndex_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool LockIndex_IsValid(int value);
constexpr LockIndex LockIndex_MIN = CARRIER;
constexpr LockIndex LockIndex_MAX = OWNER;
constexpr int LockIndex_ARRAYSIZE = LockIndex_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LockIndex_descriptor();
template<typename T>
inline const std::string& LockIndex_Name(T enum_t_value) {
  static_assert(::std::is_same<T, LockIndex>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function LockIndex_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    LockIndex_descriptor(), enum_t_value);
}
inline bool LockIndex_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, LockIndex* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<LockIndex>(
    LockIndex_descriptor(), name, value);
}
// ===================================================================

class GetStateRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.GetStateRequest) */ {
 public:
  inline GetStateRequest() : GetStateRequest(nullptr) {}
  virtual ~GetStateRequest();
  explicit constexpr GetStateRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetStateRequest(const GetStateRequest& from);
  GetStateRequest(GetStateRequest&& from) noexcept
    : GetStateRequest() {
    *this = ::std::move(from);
  }

  inline GetStateRequest& operator=(const GetStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStateRequest& operator=(GetStateRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetStateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStateRequest* internal_default_instance() {
    return reinterpret_cast<const GetStateRequest*>(
               &_GetStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetStateRequest& a, GetStateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStateRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStateRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetStateRequest* New() const final {
    return CreateMaybeMessage<GetStateRequest>(nullptr);
  }

  GetStateRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetStateRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetStateRequest& from);
  void MergeFrom(const GetStateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStateRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.GetStateRequest";
  }
  protected:
  explicit GetStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeysclearResetFieldNumber = 1,
  };
  // bool keysclear_reset = 1;
  void clear_keysclear_reset();
  bool keysclear_reset() const;
  void set_keysclear_reset(bool value);
  private:
  bool _internal_keysclear_reset() const;
  void _internal_set_keysclear_reset(bool value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.GetStateRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool keysclear_reset_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class GetStateResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.GetStateResponse) */ {
 public:
  inline GetStateResponse() : GetStateResponse(nullptr) {}
  virtual ~GetStateResponse();
  explicit constexpr GetStateResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetStateResponse(const GetStateResponse& from);
  GetStateResponse(GetStateResponse&& from) noexcept
    : GetStateResponse() {
    *this = ::std::move(from);
  }

  inline GetStateResponse& operator=(const GetStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStateResponse& operator=(GetStateResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetStateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStateResponse* internal_default_instance() {
    return reinterpret_cast<const GetStateResponse*>(
               &_GetStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetStateResponse& a, GetStateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStateResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStateResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetStateResponse* New() const final {
    return CreateMaybeMessage<GetStateResponse>(nullptr);
  }

  GetStateResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetStateResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetStateResponse& from);
  void MergeFrom(const GetStateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStateResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.GetStateResponse";
  }
  protected:
  explicit GetStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocksFieldNumber = 5,
    kVersionFieldNumber = 1,
    kBootloaderFieldNumber = 2,
    kProductionFieldNumber = 3,
    kKeysclearRequiredFieldNumber = 6,
    kNumberOfLocksFieldNumber = 4,
  };
  // bytes locks = 5;
  void clear_locks();
  const std::string& locks() const;
  void set_locks(const std::string& value);
  void set_locks(std::string&& value);
  void set_locks(const char* value);
  void set_locks(const void* value, size_t size);
  std::string* mutable_locks();
  std::string* release_locks();
  void set_allocated_locks(std::string* locks);
  private:
  const std::string& _internal_locks() const;
  void _internal_set_locks(const std::string& value);
  std::string* _internal_mutable_locks();
  public:

  // uint64 version = 1;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // bool bootloader = 2;
  void clear_bootloader();
  bool bootloader() const;
  void set_bootloader(bool value);
  private:
  bool _internal_bootloader() const;
  void _internal_set_bootloader(bool value);
  public:

  // bool production = 3;
  void clear_production();
  bool production() const;
  void set_production(bool value);
  private:
  bool _internal_production() const;
  void _internal_set_production(bool value);
  public:

  // bool keysclear_required = 6;
  void clear_keysclear_required();
  bool keysclear_required() const;
  void set_keysclear_required(bool value);
  private:
  bool _internal_keysclear_required() const;
  void _internal_set_keysclear_required(bool value);
  public:

  // uint32 number_of_locks = 4;
  void clear_number_of_locks();
  ::PROTOBUF_NAMESPACE_ID::uint32 number_of_locks() const;
  void set_number_of_locks(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_number_of_locks() const;
  void _internal_set_number_of_locks(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.GetStateResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr locks_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  bool bootloader_;
  bool production_;
  bool keysclear_required_;
  ::PROTOBUF_NAMESPACE_ID::uint32 number_of_locks_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class LoadRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.LoadRequest) */ {
 public:
  inline LoadRequest() : LoadRequest(nullptr) {}
  virtual ~LoadRequest();
  explicit constexpr LoadRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  LoadRequest(const LoadRequest& from);
  LoadRequest(LoadRequest&& from) noexcept
    : LoadRequest() {
    *this = ::std::move(from);
  }

  inline LoadRequest& operator=(const LoadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadRequest& operator=(LoadRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LoadRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoadRequest* internal_default_instance() {
    return reinterpret_cast<const LoadRequest*>(
               &_LoadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(LoadRequest& a, LoadRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LoadRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoadRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LoadRequest* New() const final {
    return CreateMaybeMessage<LoadRequest>(nullptr);
  }

  LoadRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LoadRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LoadRequest& from);
  void MergeFrom(const LoadRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoadRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.LoadRequest";
  }
  protected:
  explicit LoadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSlotFieldNumber = 1,
  };
  // uint32 slot = 1;
  void clear_slot();
  ::PROTOBUF_NAMESPACE_ID::uint32 slot() const;
  void set_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_slot() const;
  void _internal_set_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.LoadRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 slot_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class LoadResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.LoadResponse) */ {
 public:
  inline LoadResponse() : LoadResponse(nullptr) {}
  virtual ~LoadResponse();
  explicit constexpr LoadResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  LoadResponse(const LoadResponse& from);
  LoadResponse(LoadResponse&& from) noexcept
    : LoadResponse() {
    *this = ::std::move(from);
  }

  inline LoadResponse& operator=(const LoadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadResponse& operator=(LoadResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LoadResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoadResponse* internal_default_instance() {
    return reinterpret_cast<const LoadResponse*>(
               &_LoadResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(LoadResponse& a, LoadResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LoadResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoadResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LoadResponse* New() const final {
    return CreateMaybeMessage<LoadResponse>(nullptr);
  }

  LoadResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LoadResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LoadResponse& from);
  void MergeFrom(const LoadResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoadResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.LoadResponse";
  }
  protected:
  explicit LoadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 1,
  };
  // uint64 version = 1;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.LoadResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class StoreRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.StoreRequest) */ {
 public:
  inline StoreRequest() : StoreRequest(nullptr) {}
  virtual ~StoreRequest();
  explicit constexpr StoreRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StoreRequest(const StoreRequest& from);
  StoreRequest(StoreRequest&& from) noexcept
    : StoreRequest() {
    *this = ::std::move(from);
  }

  inline StoreRequest& operator=(const StoreRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StoreRequest& operator=(StoreRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StoreRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StoreRequest* internal_default_instance() {
    return reinterpret_cast<const StoreRequest*>(
               &_StoreRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(StoreRequest& a, StoreRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StoreRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StoreRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StoreRequest* New() const final {
    return CreateMaybeMessage<StoreRequest>(nullptr);
  }

  StoreRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StoreRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StoreRequest& from);
  void MergeFrom(const StoreRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StoreRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.StoreRequest";
  }
  protected:
  explicit StoreRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 2,
    kSlotFieldNumber = 1,
  };
  // uint64 version = 2;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 slot = 1;
  void clear_slot();
  ::PROTOBUF_NAMESPACE_ID::uint32 slot() const;
  void set_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_slot() const;
  void _internal_set_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.StoreRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 slot_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class StoreResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.StoreResponse) */ {
 public:
  inline StoreResponse() : StoreResponse(nullptr) {}
  virtual ~StoreResponse();
  explicit constexpr StoreResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StoreResponse(const StoreResponse& from);
  StoreResponse(StoreResponse&& from) noexcept
    : StoreResponse() {
    *this = ::std::move(from);
  }

  inline StoreResponse& operator=(const StoreResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StoreResponse& operator=(StoreResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StoreResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StoreResponse* internal_default_instance() {
    return reinterpret_cast<const StoreResponse*>(
               &_StoreResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(StoreResponse& a, StoreResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(StoreResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StoreResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StoreResponse* New() const final {
    return CreateMaybeMessage<StoreResponse>(nullptr);
  }

  StoreResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StoreResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StoreResponse& from);
  void MergeFrom(const StoreResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StoreResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.StoreResponse";
  }
  protected:
  explicit StoreResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.avb.StoreResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class GetLockRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.GetLockRequest) */ {
 public:
  inline GetLockRequest() : GetLockRequest(nullptr) {}
  virtual ~GetLockRequest();
  explicit constexpr GetLockRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetLockRequest(const GetLockRequest& from);
  GetLockRequest(GetLockRequest&& from) noexcept
    : GetLockRequest() {
    *this = ::std::move(from);
  }

  inline GetLockRequest& operator=(const GetLockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLockRequest& operator=(GetLockRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetLockRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLockRequest* internal_default_instance() {
    return reinterpret_cast<const GetLockRequest*>(
               &_GetLockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GetLockRequest& a, GetLockRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLockRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLockRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetLockRequest* New() const final {
    return CreateMaybeMessage<GetLockRequest>(nullptr);
  }

  GetLockRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetLockRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetLockRequest& from);
  void MergeFrom(const GetLockRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLockRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.GetLockRequest";
  }
  protected:
  explicit GetLockRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLockFieldNumber = 1,
  };
  // .nugget.app.avb.LockIndex lock = 1;
  void clear_lock();
  ::nugget::app::avb::LockIndex lock() const;
  void set_lock(::nugget::app::avb::LockIndex value);
  private:
  ::nugget::app::avb::LockIndex _internal_lock() const;
  void _internal_set_lock(::nugget::app::avb::LockIndex value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.GetLockRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int lock_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class GetLockResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.GetLockResponse) */ {
 public:
  inline GetLockResponse() : GetLockResponse(nullptr) {}
  virtual ~GetLockResponse();
  explicit constexpr GetLockResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetLockResponse(const GetLockResponse& from);
  GetLockResponse(GetLockResponse&& from) noexcept
    : GetLockResponse() {
    *this = ::std::move(from);
  }

  inline GetLockResponse& operator=(const GetLockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLockResponse& operator=(GetLockResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetLockResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLockResponse* internal_default_instance() {
    return reinterpret_cast<const GetLockResponse*>(
               &_GetLockResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(GetLockResponse& a, GetLockResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLockResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLockResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetLockResponse* New() const final {
    return CreateMaybeMessage<GetLockResponse>(nullptr);
  }

  GetLockResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetLockResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetLockResponse& from);
  void MergeFrom(const GetLockResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLockResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.GetLockResponse";
  }
  protected:
  explicit GetLockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLockedFieldNumber = 1,
  };
  // uint32 locked = 1;
  void clear_locked();
  ::PROTOBUF_NAMESPACE_ID::uint32 locked() const;
  void set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_locked() const;
  void _internal_set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.GetLockResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 locked_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class CarrierUnlock PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.CarrierUnlock) */ {
 public:
  inline CarrierUnlock() : CarrierUnlock(nullptr) {}
  virtual ~CarrierUnlock();
  explicit constexpr CarrierUnlock(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CarrierUnlock(const CarrierUnlock& from);
  CarrierUnlock(CarrierUnlock&& from) noexcept
    : CarrierUnlock() {
    *this = ::std::move(from);
  }

  inline CarrierUnlock& operator=(const CarrierUnlock& from) {
    CopyFrom(from);
    return *this;
  }
  inline CarrierUnlock& operator=(CarrierUnlock&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CarrierUnlock& default_instance() {
    return *internal_default_instance();
  }
  static inline const CarrierUnlock* internal_default_instance() {
    return reinterpret_cast<const CarrierUnlock*>(
               &_CarrierUnlock_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CarrierUnlock& a, CarrierUnlock& b) {
    a.Swap(&b);
  }
  inline void Swap(CarrierUnlock* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CarrierUnlock* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CarrierUnlock* New() const final {
    return CreateMaybeMessage<CarrierUnlock>(nullptr);
  }

  CarrierUnlock* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CarrierUnlock>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CarrierUnlock& from);
  void MergeFrom(const CarrierUnlock& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CarrierUnlock* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.CarrierUnlock";
  }
  protected:
  explicit CarrierUnlock(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSignatureFieldNumber = 3,
    kVersionFieldNumber = 1,
    kNonceFieldNumber = 2,
  };
  // bytes signature = 3;
  void clear_signature();
  const std::string& signature() const;
  void set_signature(const std::string& value);
  void set_signature(std::string&& value);
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  std::string* mutable_signature();
  std::string* release_signature();
  void set_allocated_signature(std::string* signature);
  private:
  const std::string& _internal_signature() const;
  void _internal_set_signature(const std::string& value);
  std::string* _internal_mutable_signature();
  public:

  // uint64 version = 1;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 nonce = 2;
  void clear_nonce();
  ::PROTOBUF_NAMESPACE_ID::uint64 nonce() const;
  void set_nonce(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_nonce() const;
  void _internal_set_nonce(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.CarrierUnlock)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signature_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  ::PROTOBUF_NAMESPACE_ID::uint64 nonce_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class CarrierLockRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.CarrierLockRequest) */ {
 public:
  inline CarrierLockRequest() : CarrierLockRequest(nullptr) {}
  virtual ~CarrierLockRequest();
  explicit constexpr CarrierLockRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CarrierLockRequest(const CarrierLockRequest& from);
  CarrierLockRequest(CarrierLockRequest&& from) noexcept
    : CarrierLockRequest() {
    *this = ::std::move(from);
  }

  inline CarrierLockRequest& operator=(const CarrierLockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CarrierLockRequest& operator=(CarrierLockRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CarrierLockRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CarrierLockRequest* internal_default_instance() {
    return reinterpret_cast<const CarrierLockRequest*>(
               &_CarrierLockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CarrierLockRequest& a, CarrierLockRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CarrierLockRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CarrierLockRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CarrierLockRequest* New() const final {
    return CreateMaybeMessage<CarrierLockRequest>(nullptr);
  }

  CarrierLockRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CarrierLockRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CarrierLockRequest& from);
  void MergeFrom(const CarrierLockRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CarrierLockRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.CarrierLockRequest";
  }
  protected:
  explicit CarrierLockRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeviceDataFieldNumber = 2,
    kLockedFieldNumber = 1,
  };
  // bytes device_data = 2;
  void clear_device_data();
  const std::string& device_data() const;
  void set_device_data(const std::string& value);
  void set_device_data(std::string&& value);
  void set_device_data(const char* value);
  void set_device_data(const void* value, size_t size);
  std::string* mutable_device_data();
  std::string* release_device_data();
  void set_allocated_device_data(std::string* device_data);
  private:
  const std::string& _internal_device_data() const;
  void _internal_set_device_data(const std::string& value);
  std::string* _internal_mutable_device_data();
  public:

  // uint32 locked = 1;
  void clear_locked();
  ::PROTOBUF_NAMESPACE_ID::uint32 locked() const;
  void set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_locked() const;
  void _internal_set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.CarrierLockRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr device_data_;
  ::PROTOBUF_NAMESPACE_ID::uint32 locked_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class CarrierLockResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.CarrierLockResponse) */ {
 public:
  inline CarrierLockResponse() : CarrierLockResponse(nullptr) {}
  virtual ~CarrierLockResponse();
  explicit constexpr CarrierLockResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CarrierLockResponse(const CarrierLockResponse& from);
  CarrierLockResponse(CarrierLockResponse&& from) noexcept
    : CarrierLockResponse() {
    *this = ::std::move(from);
  }

  inline CarrierLockResponse& operator=(const CarrierLockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CarrierLockResponse& operator=(CarrierLockResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CarrierLockResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CarrierLockResponse* internal_default_instance() {
    return reinterpret_cast<const CarrierLockResponse*>(
               &_CarrierLockResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CarrierLockResponse& a, CarrierLockResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CarrierLockResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CarrierLockResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CarrierLockResponse* New() const final {
    return CreateMaybeMessage<CarrierLockResponse>(nullptr);
  }

  CarrierLockResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CarrierLockResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CarrierLockResponse& from);
  void MergeFrom(const CarrierLockResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CarrierLockResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.CarrierLockResponse";
  }
  protected:
  explicit CarrierLockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.avb.CarrierLockResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class CarrierUnlockRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.CarrierUnlockRequest) */ {
 public:
  inline CarrierUnlockRequest() : CarrierUnlockRequest(nullptr) {}
  virtual ~CarrierUnlockRequest();
  explicit constexpr CarrierUnlockRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CarrierUnlockRequest(const CarrierUnlockRequest& from);
  CarrierUnlockRequest(CarrierUnlockRequest&& from) noexcept
    : CarrierUnlockRequest() {
    *this = ::std::move(from);
  }

  inline CarrierUnlockRequest& operator=(const CarrierUnlockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CarrierUnlockRequest& operator=(CarrierUnlockRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CarrierUnlockRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CarrierUnlockRequest* internal_default_instance() {
    return reinterpret_cast<const CarrierUnlockRequest*>(
               &_CarrierUnlockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CarrierUnlockRequest& a, CarrierUnlockRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CarrierUnlockRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CarrierUnlockRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CarrierUnlockRequest* New() const final {
    return CreateMaybeMessage<CarrierUnlockRequest>(nullptr);
  }

  CarrierUnlockRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CarrierUnlockRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CarrierUnlockRequest& from);
  void MergeFrom(const CarrierUnlockRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CarrierUnlockRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.CarrierUnlockRequest";
  }
  protected:
  explicit CarrierUnlockRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokenFieldNumber = 1,
  };
  // .nugget.app.avb.CarrierUnlock token = 1;
  bool has_token() const;
  private:
  bool _internal_has_token() const;
  public:
  void clear_token();
  const ::nugget::app::avb::CarrierUnlock& token() const;
  ::nugget::app::avb::CarrierUnlock* release_token();
  ::nugget::app::avb::CarrierUnlock* mutable_token();
  void set_allocated_token(::nugget::app::avb::CarrierUnlock* token);
  private:
  const ::nugget::app::avb::CarrierUnlock& _internal_token() const;
  ::nugget::app::avb::CarrierUnlock* _internal_mutable_token();
  public:
  void unsafe_arena_set_allocated_token(
      ::nugget::app::avb::CarrierUnlock* token);
  ::nugget::app::avb::CarrierUnlock* unsafe_arena_release_token();

  // @@protoc_insertion_point(class_scope:nugget.app.avb.CarrierUnlockRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::avb::CarrierUnlock* token_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class CarrierUnlockResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.CarrierUnlockResponse) */ {
 public:
  inline CarrierUnlockResponse() : CarrierUnlockResponse(nullptr) {}
  virtual ~CarrierUnlockResponse();
  explicit constexpr CarrierUnlockResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CarrierUnlockResponse(const CarrierUnlockResponse& from);
  CarrierUnlockResponse(CarrierUnlockResponse&& from) noexcept
    : CarrierUnlockResponse() {
    *this = ::std::move(from);
  }

  inline CarrierUnlockResponse& operator=(const CarrierUnlockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CarrierUnlockResponse& operator=(CarrierUnlockResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CarrierUnlockResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CarrierUnlockResponse* internal_default_instance() {
    return reinterpret_cast<const CarrierUnlockResponse*>(
               &_CarrierUnlockResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CarrierUnlockResponse& a, CarrierUnlockResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CarrierUnlockResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CarrierUnlockResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CarrierUnlockResponse* New() const final {
    return CreateMaybeMessage<CarrierUnlockResponse>(nullptr);
  }

  CarrierUnlockResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CarrierUnlockResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CarrierUnlockResponse& from);
  void MergeFrom(const CarrierUnlockResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CarrierUnlockResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.CarrierUnlockResponse";
  }
  protected:
  explicit CarrierUnlockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.avb.CarrierUnlockResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class SetDeviceLockRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.SetDeviceLockRequest) */ {
 public:
  inline SetDeviceLockRequest() : SetDeviceLockRequest(nullptr) {}
  virtual ~SetDeviceLockRequest();
  explicit constexpr SetDeviceLockRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetDeviceLockRequest(const SetDeviceLockRequest& from);
  SetDeviceLockRequest(SetDeviceLockRequest&& from) noexcept
    : SetDeviceLockRequest() {
    *this = ::std::move(from);
  }

  inline SetDeviceLockRequest& operator=(const SetDeviceLockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetDeviceLockRequest& operator=(SetDeviceLockRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetDeviceLockRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetDeviceLockRequest* internal_default_instance() {
    return reinterpret_cast<const SetDeviceLockRequest*>(
               &_SetDeviceLockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(SetDeviceLockRequest& a, SetDeviceLockRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetDeviceLockRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetDeviceLockRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetDeviceLockRequest* New() const final {
    return CreateMaybeMessage<SetDeviceLockRequest>(nullptr);
  }

  SetDeviceLockRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetDeviceLockRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetDeviceLockRequest& from);
  void MergeFrom(const SetDeviceLockRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetDeviceLockRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.SetDeviceLockRequest";
  }
  protected:
  explicit SetDeviceLockRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLockedFieldNumber = 1,
  };
  // uint32 locked = 1;
  void clear_locked();
  ::PROTOBUF_NAMESPACE_ID::uint32 locked() const;
  void set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_locked() const;
  void _internal_set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.SetDeviceLockRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 locked_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class SetDeviceLockResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.SetDeviceLockResponse) */ {
 public:
  inline SetDeviceLockResponse() : SetDeviceLockResponse(nullptr) {}
  virtual ~SetDeviceLockResponse();
  explicit constexpr SetDeviceLockResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetDeviceLockResponse(const SetDeviceLockResponse& from);
  SetDeviceLockResponse(SetDeviceLockResponse&& from) noexcept
    : SetDeviceLockResponse() {
    *this = ::std::move(from);
  }

  inline SetDeviceLockResponse& operator=(const SetDeviceLockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetDeviceLockResponse& operator=(SetDeviceLockResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetDeviceLockResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetDeviceLockResponse* internal_default_instance() {
    return reinterpret_cast<const SetDeviceLockResponse*>(
               &_SetDeviceLockResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(SetDeviceLockResponse& a, SetDeviceLockResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetDeviceLockResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetDeviceLockResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetDeviceLockResponse* New() const final {
    return CreateMaybeMessage<SetDeviceLockResponse>(nullptr);
  }

  SetDeviceLockResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetDeviceLockResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetDeviceLockResponse& from);
  void MergeFrom(const SetDeviceLockResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetDeviceLockResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.SetDeviceLockResponse";
  }
  protected:
  explicit SetDeviceLockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.avb.SetDeviceLockResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class SetBootLockRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.SetBootLockRequest) */ {
 public:
  inline SetBootLockRequest() : SetBootLockRequest(nullptr) {}
  virtual ~SetBootLockRequest();
  explicit constexpr SetBootLockRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetBootLockRequest(const SetBootLockRequest& from);
  SetBootLockRequest(SetBootLockRequest&& from) noexcept
    : SetBootLockRequest() {
    *this = ::std::move(from);
  }

  inline SetBootLockRequest& operator=(const SetBootLockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetBootLockRequest& operator=(SetBootLockRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetBootLockRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetBootLockRequest* internal_default_instance() {
    return reinterpret_cast<const SetBootLockRequest*>(
               &_SetBootLockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(SetBootLockRequest& a, SetBootLockRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetBootLockRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetBootLockRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetBootLockRequest* New() const final {
    return CreateMaybeMessage<SetBootLockRequest>(nullptr);
  }

  SetBootLockRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetBootLockRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetBootLockRequest& from);
  void MergeFrom(const SetBootLockRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetBootLockRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.SetBootLockRequest";
  }
  protected:
  explicit SetBootLockRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLockedFieldNumber = 1,
  };
  // uint32 locked = 1;
  void clear_locked();
  ::PROTOBUF_NAMESPACE_ID::uint32 locked() const;
  void set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_locked() const;
  void _internal_set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.SetBootLockRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 locked_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class SetBootLockResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.SetBootLockResponse) */ {
 public:
  inline SetBootLockResponse() : SetBootLockResponse(nullptr) {}
  virtual ~SetBootLockResponse();
  explicit constexpr SetBootLockResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetBootLockResponse(const SetBootLockResponse& from);
  SetBootLockResponse(SetBootLockResponse&& from) noexcept
    : SetBootLockResponse() {
    *this = ::std::move(from);
  }

  inline SetBootLockResponse& operator=(const SetBootLockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetBootLockResponse& operator=(SetBootLockResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetBootLockResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetBootLockResponse* internal_default_instance() {
    return reinterpret_cast<const SetBootLockResponse*>(
               &_SetBootLockResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(SetBootLockResponse& a, SetBootLockResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetBootLockResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetBootLockResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetBootLockResponse* New() const final {
    return CreateMaybeMessage<SetBootLockResponse>(nullptr);
  }

  SetBootLockResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetBootLockResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetBootLockResponse& from);
  void MergeFrom(const SetBootLockResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetBootLockResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.SetBootLockResponse";
  }
  protected:
  explicit SetBootLockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.avb.SetBootLockResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class SetOwnerLockRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.SetOwnerLockRequest) */ {
 public:
  inline SetOwnerLockRequest() : SetOwnerLockRequest(nullptr) {}
  virtual ~SetOwnerLockRequest();
  explicit constexpr SetOwnerLockRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetOwnerLockRequest(const SetOwnerLockRequest& from);
  SetOwnerLockRequest(SetOwnerLockRequest&& from) noexcept
    : SetOwnerLockRequest() {
    *this = ::std::move(from);
  }

  inline SetOwnerLockRequest& operator=(const SetOwnerLockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetOwnerLockRequest& operator=(SetOwnerLockRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetOwnerLockRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetOwnerLockRequest* internal_default_instance() {
    return reinterpret_cast<const SetOwnerLockRequest*>(
               &_SetOwnerLockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(SetOwnerLockRequest& a, SetOwnerLockRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetOwnerLockRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetOwnerLockRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetOwnerLockRequest* New() const final {
    return CreateMaybeMessage<SetOwnerLockRequest>(nullptr);
  }

  SetOwnerLockRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetOwnerLockRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetOwnerLockRequest& from);
  void MergeFrom(const SetOwnerLockRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetOwnerLockRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.SetOwnerLockRequest";
  }
  protected:
  explicit SetOwnerLockRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 2,
    kLockedFieldNumber = 1,
  };
  // bytes key = 2;
  void clear_key();
  const std::string& key() const;
  void set_key(const std::string& value);
  void set_key(std::string&& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  std::string* mutable_key();
  std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // uint32 locked = 1;
  void clear_locked();
  ::PROTOBUF_NAMESPACE_ID::uint32 locked() const;
  void set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_locked() const;
  void _internal_set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.SetOwnerLockRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  ::PROTOBUF_NAMESPACE_ID::uint32 locked_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class SetOwnerLockResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.SetOwnerLockResponse) */ {
 public:
  inline SetOwnerLockResponse() : SetOwnerLockResponse(nullptr) {}
  virtual ~SetOwnerLockResponse();
  explicit constexpr SetOwnerLockResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetOwnerLockResponse(const SetOwnerLockResponse& from);
  SetOwnerLockResponse(SetOwnerLockResponse&& from) noexcept
    : SetOwnerLockResponse() {
    *this = ::std::move(from);
  }

  inline SetOwnerLockResponse& operator=(const SetOwnerLockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetOwnerLockResponse& operator=(SetOwnerLockResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetOwnerLockResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetOwnerLockResponse* internal_default_instance() {
    return reinterpret_cast<const SetOwnerLockResponse*>(
               &_SetOwnerLockResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(SetOwnerLockResponse& a, SetOwnerLockResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetOwnerLockResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetOwnerLockResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetOwnerLockResponse* New() const final {
    return CreateMaybeMessage<SetOwnerLockResponse>(nullptr);
  }

  SetOwnerLockResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetOwnerLockResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetOwnerLockResponse& from);
  void MergeFrom(const SetOwnerLockResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetOwnerLockResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.SetOwnerLockResponse";
  }
  protected:
  explicit SetOwnerLockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.avb.SetOwnerLockResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class GetOwnerKeyRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.GetOwnerKeyRequest) */ {
 public:
  inline GetOwnerKeyRequest() : GetOwnerKeyRequest(nullptr) {}
  virtual ~GetOwnerKeyRequest();
  explicit constexpr GetOwnerKeyRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetOwnerKeyRequest(const GetOwnerKeyRequest& from);
  GetOwnerKeyRequest(GetOwnerKeyRequest&& from) noexcept
    : GetOwnerKeyRequest() {
    *this = ::std::move(from);
  }

  inline GetOwnerKeyRequest& operator=(const GetOwnerKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOwnerKeyRequest& operator=(GetOwnerKeyRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetOwnerKeyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOwnerKeyRequest* internal_default_instance() {
    return reinterpret_cast<const GetOwnerKeyRequest*>(
               &_GetOwnerKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(GetOwnerKeyRequest& a, GetOwnerKeyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetOwnerKeyRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOwnerKeyRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetOwnerKeyRequest* New() const final {
    return CreateMaybeMessage<GetOwnerKeyRequest>(nullptr);
  }

  GetOwnerKeyRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetOwnerKeyRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetOwnerKeyRequest& from);
  void MergeFrom(const GetOwnerKeyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetOwnerKeyRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.GetOwnerKeyRequest";
  }
  protected:
  explicit GetOwnerKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOffsetFieldNumber = 1,
    kSizeFieldNumber = 2,
  };
  // uint32 offset = 1;
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_offset() const;
  void _internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 size = 2;
  void clear_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 size() const;
  void set_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_size() const;
  void _internal_set_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.GetOwnerKeyRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class GetOwnerKeyResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.GetOwnerKeyResponse) */ {
 public:
  inline GetOwnerKeyResponse() : GetOwnerKeyResponse(nullptr) {}
  virtual ~GetOwnerKeyResponse();
  explicit constexpr GetOwnerKeyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetOwnerKeyResponse(const GetOwnerKeyResponse& from);
  GetOwnerKeyResponse(GetOwnerKeyResponse&& from) noexcept
    : GetOwnerKeyResponse() {
    *this = ::std::move(from);
  }

  inline GetOwnerKeyResponse& operator=(const GetOwnerKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOwnerKeyResponse& operator=(GetOwnerKeyResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetOwnerKeyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOwnerKeyResponse* internal_default_instance() {
    return reinterpret_cast<const GetOwnerKeyResponse*>(
               &_GetOwnerKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(GetOwnerKeyResponse& a, GetOwnerKeyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetOwnerKeyResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOwnerKeyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetOwnerKeyResponse* New() const final {
    return CreateMaybeMessage<GetOwnerKeyResponse>(nullptr);
  }

  GetOwnerKeyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetOwnerKeyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetOwnerKeyResponse& from);
  void MergeFrom(const GetOwnerKeyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetOwnerKeyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.GetOwnerKeyResponse";
  }
  protected:
  explicit GetOwnerKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChunkFieldNumber = 1,
  };
  // bytes chunk = 1;
  void clear_chunk();
  const std::string& chunk() const;
  void set_chunk(const std::string& value);
  void set_chunk(std::string&& value);
  void set_chunk(const char* value);
  void set_chunk(const void* value, size_t size);
  std::string* mutable_chunk();
  std::string* release_chunk();
  void set_allocated_chunk(std::string* chunk);
  private:
  const std::string& _internal_chunk() const;
  void _internal_set_chunk(const std::string& value);
  std::string* _internal_mutable_chunk();
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.GetOwnerKeyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr chunk_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class SetProductionRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.SetProductionRequest) */ {
 public:
  inline SetProductionRequest() : SetProductionRequest(nullptr) {}
  virtual ~SetProductionRequest();
  explicit constexpr SetProductionRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetProductionRequest(const SetProductionRequest& from);
  SetProductionRequest(SetProductionRequest&& from) noexcept
    : SetProductionRequest() {
    *this = ::std::move(from);
  }

  inline SetProductionRequest& operator=(const SetProductionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetProductionRequest& operator=(SetProductionRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetProductionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetProductionRequest* internal_default_instance() {
    return reinterpret_cast<const SetProductionRequest*>(
               &_SetProductionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(SetProductionRequest& a, SetProductionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetProductionRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetProductionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetProductionRequest* New() const final {
    return CreateMaybeMessage<SetProductionRequest>(nullptr);
  }

  SetProductionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetProductionRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetProductionRequest& from);
  void MergeFrom(const SetProductionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetProductionRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.SetProductionRequest";
  }
  protected:
  explicit SetProductionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeviceDataFieldNumber = 2,
    kProductionFieldNumber = 1,
  };
  // bytes device_data = 2;
  void clear_device_data();
  const std::string& device_data() const;
  void set_device_data(const std::string& value);
  void set_device_data(std::string&& value);
  void set_device_data(const char* value);
  void set_device_data(const void* value, size_t size);
  std::string* mutable_device_data();
  std::string* release_device_data();
  void set_allocated_device_data(std::string* device_data);
  private:
  const std::string& _internal_device_data() const;
  void _internal_set_device_data(const std::string& value);
  std::string* _internal_mutable_device_data();
  public:

  // bool production = 1;
  void clear_production();
  bool production() const;
  void set_production(bool value);
  private:
  bool _internal_production() const;
  void _internal_set_production(bool value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.SetProductionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr device_data_;
  bool production_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class SetProductionResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.SetProductionResponse) */ {
 public:
  inline SetProductionResponse() : SetProductionResponse(nullptr) {}
  virtual ~SetProductionResponse();
  explicit constexpr SetProductionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetProductionResponse(const SetProductionResponse& from);
  SetProductionResponse(SetProductionResponse&& from) noexcept
    : SetProductionResponse() {
    *this = ::std::move(from);
  }

  inline SetProductionResponse& operator=(const SetProductionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetProductionResponse& operator=(SetProductionResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetProductionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetProductionResponse* internal_default_instance() {
    return reinterpret_cast<const SetProductionResponse*>(
               &_SetProductionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(SetProductionResponse& a, SetProductionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetProductionResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetProductionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetProductionResponse* New() const final {
    return CreateMaybeMessage<SetProductionResponse>(nullptr);
  }

  SetProductionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetProductionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetProductionResponse& from);
  void MergeFrom(const SetProductionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetProductionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.SetProductionResponse";
  }
  protected:
  explicit SetProductionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.avb.SetProductionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class CarrierLockTestRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.CarrierLockTestRequest) */ {
 public:
  inline CarrierLockTestRequest() : CarrierLockTestRequest(nullptr) {}
  virtual ~CarrierLockTestRequest();
  explicit constexpr CarrierLockTestRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CarrierLockTestRequest(const CarrierLockTestRequest& from);
  CarrierLockTestRequest(CarrierLockTestRequest&& from) noexcept
    : CarrierLockTestRequest() {
    *this = ::std::move(from);
  }

  inline CarrierLockTestRequest& operator=(const CarrierLockTestRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CarrierLockTestRequest& operator=(CarrierLockTestRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CarrierLockTestRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CarrierLockTestRequest* internal_default_instance() {
    return reinterpret_cast<const CarrierLockTestRequest*>(
               &_CarrierLockTestRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CarrierLockTestRequest& a, CarrierLockTestRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CarrierLockTestRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CarrierLockTestRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CarrierLockTestRequest* New() const final {
    return CreateMaybeMessage<CarrierLockTestRequest>(nullptr);
  }

  CarrierLockTestRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CarrierLockTestRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CarrierLockTestRequest& from);
  void MergeFrom(const CarrierLockTestRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CarrierLockTestRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.CarrierLockTestRequest";
  }
  protected:
  explicit CarrierLockTestRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeviceDataFieldNumber = 3,
    kTokenFieldNumber = 4,
    kLastNonceFieldNumber = 1,
    kVersionFieldNumber = 2,
  };
  // bytes device_data = 3;
  void clear_device_data();
  const std::string& device_data() const;
  void set_device_data(const std::string& value);
  void set_device_data(std::string&& value);
  void set_device_data(const char* value);
  void set_device_data(const void* value, size_t size);
  std::string* mutable_device_data();
  std::string* release_device_data();
  void set_allocated_device_data(std::string* device_data);
  private:
  const std::string& _internal_device_data() const;
  void _internal_set_device_data(const std::string& value);
  std::string* _internal_mutable_device_data();
  public:

  // .nugget.app.avb.CarrierUnlock token = 4;
  bool has_token() const;
  private:
  bool _internal_has_token() const;
  public:
  void clear_token();
  const ::nugget::app::avb::CarrierUnlock& token() const;
  ::nugget::app::avb::CarrierUnlock* release_token();
  ::nugget::app::avb::CarrierUnlock* mutable_token();
  void set_allocated_token(::nugget::app::avb::CarrierUnlock* token);
  private:
  const ::nugget::app::avb::CarrierUnlock& _internal_token() const;
  ::nugget::app::avb::CarrierUnlock* _internal_mutable_token();
  public:
  void unsafe_arena_set_allocated_token(
      ::nugget::app::avb::CarrierUnlock* token);
  ::nugget::app::avb::CarrierUnlock* unsafe_arena_release_token();

  // uint64 last_nonce = 1;
  void clear_last_nonce();
  ::PROTOBUF_NAMESPACE_ID::uint64 last_nonce() const;
  void set_last_nonce(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_last_nonce() const;
  void _internal_set_last_nonce(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 version = 2;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.CarrierLockTestRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr device_data_;
  ::nugget::app::avb::CarrierUnlock* token_;
  ::PROTOBUF_NAMESPACE_ID::uint64 last_nonce_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class CarrierLockTestResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.CarrierLockTestResponse) */ {
 public:
  inline CarrierLockTestResponse() : CarrierLockTestResponse(nullptr) {}
  virtual ~CarrierLockTestResponse();
  explicit constexpr CarrierLockTestResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CarrierLockTestResponse(const CarrierLockTestResponse& from);
  CarrierLockTestResponse(CarrierLockTestResponse&& from) noexcept
    : CarrierLockTestResponse() {
    *this = ::std::move(from);
  }

  inline CarrierLockTestResponse& operator=(const CarrierLockTestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CarrierLockTestResponse& operator=(CarrierLockTestResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CarrierLockTestResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CarrierLockTestResponse* internal_default_instance() {
    return reinterpret_cast<const CarrierLockTestResponse*>(
               &_CarrierLockTestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CarrierLockTestResponse& a, CarrierLockTestResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CarrierLockTestResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CarrierLockTestResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CarrierLockTestResponse* New() const final {
    return CreateMaybeMessage<CarrierLockTestResponse>(nullptr);
  }

  CarrierLockTestResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CarrierLockTestResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CarrierLockTestResponse& from);
  void MergeFrom(const CarrierLockTestResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CarrierLockTestResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.CarrierLockTestResponse";
  }
  protected:
  explicit CarrierLockTestResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.avb.CarrierLockTestResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class ResetToken PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.ResetToken) */ {
 public:
  inline ResetToken() : ResetToken(nullptr) {}
  virtual ~ResetToken();
  explicit constexpr ResetToken(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResetToken(const ResetToken& from);
  ResetToken(ResetToken&& from) noexcept
    : ResetToken() {
    *this = ::std::move(from);
  }

  inline ResetToken& operator=(const ResetToken& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResetToken& operator=(ResetToken&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ResetToken& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResetToken* internal_default_instance() {
    return reinterpret_cast<const ResetToken*>(
               &_ResetToken_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(ResetToken& a, ResetToken& b) {
    a.Swap(&b);
  }
  inline void Swap(ResetToken* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResetToken* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResetToken* New() const final {
    return CreateMaybeMessage<ResetToken>(nullptr);
  }

  ResetToken* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResetToken>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResetToken& from);
  void MergeFrom(const ResetToken& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResetToken* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.ResetToken";
  }
  protected:
  explicit ResetToken(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef ResetToken_Selectors Selectors;
  static constexpr Selectors INVALID =
    ResetToken_Selectors_INVALID;
  static constexpr Selectors CURRENT =
    ResetToken_Selectors_CURRENT;
  static inline bool Selectors_IsValid(int value) {
    return ResetToken_Selectors_IsValid(value);
  }
  static constexpr Selectors Selectors_MIN =
    ResetToken_Selectors_Selectors_MIN;
  static constexpr Selectors Selectors_MAX =
    ResetToken_Selectors_Selectors_MAX;
  static constexpr int Selectors_ARRAYSIZE =
    ResetToken_Selectors_Selectors_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Selectors_descriptor() {
    return ResetToken_Selectors_descriptor();
  }
  template<typename T>
  static inline const std::string& Selectors_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Selectors>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Selectors_Name.");
    return ResetToken_Selectors_Name(enum_t_value);
  }
  static inline bool Selectors_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Selectors* value) {
    return ResetToken_Selectors_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kSignatureFieldNumber = 2,
    kSelectorFieldNumber = 1,
  };
  // bytes signature = 2;
  void clear_signature();
  const std::string& signature() const;
  void set_signature(const std::string& value);
  void set_signature(std::string&& value);
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  std::string* mutable_signature();
  std::string* release_signature();
  void set_allocated_signature(std::string* signature);
  private:
  const std::string& _internal_signature() const;
  void _internal_set_signature(const std::string& value);
  std::string* _internal_mutable_signature();
  public:

  // uint32 selector = 1;
  void clear_selector();
  ::PROTOBUF_NAMESPACE_ID::uint32 selector() const;
  void set_selector(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_selector() const;
  void _internal_set_selector(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.ResetToken)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signature_;
  ::PROTOBUF_NAMESPACE_ID::uint32 selector_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class ResetRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.ResetRequest) */ {
 public:
  inline ResetRequest() : ResetRequest(nullptr) {}
  virtual ~ResetRequest();
  explicit constexpr ResetRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResetRequest(const ResetRequest& from);
  ResetRequest(ResetRequest&& from) noexcept
    : ResetRequest() {
    *this = ::std::move(from);
  }

  inline ResetRequest& operator=(const ResetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResetRequest& operator=(ResetRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ResetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResetRequest* internal_default_instance() {
    return reinterpret_cast<const ResetRequest*>(
               &_ResetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(ResetRequest& a, ResetRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ResetRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResetRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResetRequest* New() const final {
    return CreateMaybeMessage<ResetRequest>(nullptr);
  }

  ResetRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResetRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResetRequest& from);
  void MergeFrom(const ResetRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResetRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.ResetRequest";
  }
  protected:
  explicit ResetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef ResetRequest_ResetKind ResetKind;
  static constexpr ResetKind PRODUCTION =
    ResetRequest_ResetKind_PRODUCTION;
  static constexpr ResetKind LOCKS =
    ResetRequest_ResetKind_LOCKS;
  static inline bool ResetKind_IsValid(int value) {
    return ResetRequest_ResetKind_IsValid(value);
  }
  static constexpr ResetKind ResetKind_MIN =
    ResetRequest_ResetKind_ResetKind_MIN;
  static constexpr ResetKind ResetKind_MAX =
    ResetRequest_ResetKind_ResetKind_MAX;
  static constexpr int ResetKind_ARRAYSIZE =
    ResetRequest_ResetKind_ResetKind_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ResetKind_descriptor() {
    return ResetRequest_ResetKind_descriptor();
  }
  template<typename T>
  static inline const std::string& ResetKind_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ResetKind>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ResetKind_Name.");
    return ResetRequest_ResetKind_Name(enum_t_value);
  }
  static inline bool ResetKind_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      ResetKind* value) {
    return ResetRequest_ResetKind_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kTokenFieldNumber = 2,
    kKindFieldNumber = 1,
  };
  // .nugget.app.avb.ResetToken token = 2;
  bool has_token() const;
  private:
  bool _internal_has_token() const;
  public:
  void clear_token();
  const ::nugget::app::avb::ResetToken& token() const;
  ::nugget::app::avb::ResetToken* release_token();
  ::nugget::app::avb::ResetToken* mutable_token();
  void set_allocated_token(::nugget::app::avb::ResetToken* token);
  private:
  const ::nugget::app::avb::ResetToken& _internal_token() const;
  ::nugget::app::avb::ResetToken* _internal_mutable_token();
  public:
  void unsafe_arena_set_allocated_token(
      ::nugget::app::avb::ResetToken* token);
  ::nugget::app::avb::ResetToken* unsafe_arena_release_token();

  // .nugget.app.avb.ResetRequest.ResetKind kind = 1;
  void clear_kind();
  ::nugget::app::avb::ResetRequest_ResetKind kind() const;
  void set_kind(::nugget::app::avb::ResetRequest_ResetKind value);
  private:
  ::nugget::app::avb::ResetRequest_ResetKind _internal_kind() const;
  void _internal_set_kind(::nugget::app::avb::ResetRequest_ResetKind value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.ResetRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::nugget::app::avb::ResetToken* token_;
  int kind_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class ResetResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.ResetResponse) */ {
 public:
  inline ResetResponse() : ResetResponse(nullptr) {}
  virtual ~ResetResponse();
  explicit constexpr ResetResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResetResponse(const ResetResponse& from);
  ResetResponse(ResetResponse&& from) noexcept
    : ResetResponse() {
    *this = ::std::move(from);
  }

  inline ResetResponse& operator=(const ResetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResetResponse& operator=(ResetResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ResetResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResetResponse* internal_default_instance() {
    return reinterpret_cast<const ResetResponse*>(
               &_ResetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(ResetResponse& a, ResetResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ResetResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResetResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResetResponse* New() const final {
    return CreateMaybeMessage<ResetResponse>(nullptr);
  }

  ResetResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResetResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResetResponse& from);
  void MergeFrom(const ResetResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResetResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.ResetResponse";
  }
  protected:
  explicit ResetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.avb.ResetResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class GetResetChallengeRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.GetResetChallengeRequest) */ {
 public:
  inline GetResetChallengeRequest() : GetResetChallengeRequest(nullptr) {}
  virtual ~GetResetChallengeRequest();
  explicit constexpr GetResetChallengeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetResetChallengeRequest(const GetResetChallengeRequest& from);
  GetResetChallengeRequest(GetResetChallengeRequest&& from) noexcept
    : GetResetChallengeRequest() {
    *this = ::std::move(from);
  }

  inline GetResetChallengeRequest& operator=(const GetResetChallengeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetResetChallengeRequest& operator=(GetResetChallengeRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetResetChallengeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetResetChallengeRequest* internal_default_instance() {
    return reinterpret_cast<const GetResetChallengeRequest*>(
               &_GetResetChallengeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(GetResetChallengeRequest& a, GetResetChallengeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetResetChallengeRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetResetChallengeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetResetChallengeRequest* New() const final {
    return CreateMaybeMessage<GetResetChallengeRequest>(nullptr);
  }

  GetResetChallengeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetResetChallengeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetResetChallengeRequest& from);
  void MergeFrom(const GetResetChallengeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetResetChallengeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.GetResetChallengeRequest";
  }
  protected:
  explicit GetResetChallengeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.avb.GetResetChallengeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class GetResetChallengeResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.GetResetChallengeResponse) */ {
 public:
  inline GetResetChallengeResponse() : GetResetChallengeResponse(nullptr) {}
  virtual ~GetResetChallengeResponse();
  explicit constexpr GetResetChallengeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetResetChallengeResponse(const GetResetChallengeResponse& from);
  GetResetChallengeResponse(GetResetChallengeResponse&& from) noexcept
    : GetResetChallengeResponse() {
    *this = ::std::move(from);
  }

  inline GetResetChallengeResponse& operator=(const GetResetChallengeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetResetChallengeResponse& operator=(GetResetChallengeResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetResetChallengeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetResetChallengeResponse* internal_default_instance() {
    return reinterpret_cast<const GetResetChallengeResponse*>(
               &_GetResetChallengeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(GetResetChallengeResponse& a, GetResetChallengeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetResetChallengeResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetResetChallengeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetResetChallengeResponse* New() const final {
    return CreateMaybeMessage<GetResetChallengeResponse>(nullptr);
  }

  GetResetChallengeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetResetChallengeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetResetChallengeResponse& from);
  void MergeFrom(const GetResetChallengeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetResetChallengeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.GetResetChallengeResponse";
  }
  protected:
  explicit GetResetChallengeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeviceDataFieldNumber = 3,
    kNonceFieldNumber = 2,
    kSelectorFieldNumber = 1,
  };
  // bytes device_data = 3;
  void clear_device_data();
  const std::string& device_data() const;
  void set_device_data(const std::string& value);
  void set_device_data(std::string&& value);
  void set_device_data(const char* value);
  void set_device_data(const void* value, size_t size);
  std::string* mutable_device_data();
  std::string* release_device_data();
  void set_allocated_device_data(std::string* device_data);
  private:
  const std::string& _internal_device_data() const;
  void _internal_set_device_data(const std::string& value);
  std::string* _internal_mutable_device_data();
  public:

  // uint64 nonce = 2;
  void clear_nonce();
  ::PROTOBUF_NAMESPACE_ID::uint64 nonce() const;
  void set_nonce(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_nonce() const;
  void _internal_set_nonce(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 selector = 1;
  void clear_selector();
  ::PROTOBUF_NAMESPACE_ID::uint32 selector() const;
  void set_selector(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_selector() const;
  void _internal_set_selector(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.GetResetChallengeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr device_data_;
  ::PROTOBUF_NAMESPACE_ID::uint64 nonce_;
  ::PROTOBUF_NAMESPACE_ID::uint32 selector_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class ProductionResetTestRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.ProductionResetTestRequest) */ {
 public:
  inline ProductionResetTestRequest() : ProductionResetTestRequest(nullptr) {}
  virtual ~ProductionResetTestRequest();
  explicit constexpr ProductionResetTestRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProductionResetTestRequest(const ProductionResetTestRequest& from);
  ProductionResetTestRequest(ProductionResetTestRequest&& from) noexcept
    : ProductionResetTestRequest() {
    *this = ::std::move(from);
  }

  inline ProductionResetTestRequest& operator=(const ProductionResetTestRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProductionResetTestRequest& operator=(ProductionResetTestRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProductionResetTestRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProductionResetTestRequest* internal_default_instance() {
    return reinterpret_cast<const ProductionResetTestRequest*>(
               &_ProductionResetTestRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(ProductionResetTestRequest& a, ProductionResetTestRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ProductionResetTestRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProductionResetTestRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProductionResetTestRequest* New() const final {
    return CreateMaybeMessage<ProductionResetTestRequest>(nullptr);
  }

  ProductionResetTestRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProductionResetTestRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProductionResetTestRequest& from);
  void MergeFrom(const ProductionResetTestRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProductionResetTestRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.ProductionResetTestRequest";
  }
  protected:
  explicit ProductionResetTestRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeviceDataFieldNumber = 3,
    kSignatureFieldNumber = 4,
    kNonceFieldNumber = 2,
    kSelectorFieldNumber = 1,
  };
  // bytes device_data = 3;
  void clear_device_data();
  const std::string& device_data() const;
  void set_device_data(const std::string& value);
  void set_device_data(std::string&& value);
  void set_device_data(const char* value);
  void set_device_data(const void* value, size_t size);
  std::string* mutable_device_data();
  std::string* release_device_data();
  void set_allocated_device_data(std::string* device_data);
  private:
  const std::string& _internal_device_data() const;
  void _internal_set_device_data(const std::string& value);
  std::string* _internal_mutable_device_data();
  public:

  // bytes signature = 4;
  void clear_signature();
  const std::string& signature() const;
  void set_signature(const std::string& value);
  void set_signature(std::string&& value);
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  std::string* mutable_signature();
  std::string* release_signature();
  void set_allocated_signature(std::string* signature);
  private:
  const std::string& _internal_signature() const;
  void _internal_set_signature(const std::string& value);
  std::string* _internal_mutable_signature();
  public:

  // uint64 nonce = 2;
  void clear_nonce();
  ::PROTOBUF_NAMESPACE_ID::uint64 nonce() const;
  void set_nonce(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_nonce() const;
  void _internal_set_nonce(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 selector = 1;
  void clear_selector();
  ::PROTOBUF_NAMESPACE_ID::uint32 selector() const;
  void set_selector(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_selector() const;
  void _internal_set_selector(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:nugget.app.avb.ProductionResetTestRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr device_data_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signature_;
  ::PROTOBUF_NAMESPACE_ID::uint64 nonce_;
  ::PROTOBUF_NAMESPACE_ID::uint32 selector_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class ProductionResetTestResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.ProductionResetTestResponse) */ {
 public:
  inline ProductionResetTestResponse() : ProductionResetTestResponse(nullptr) {}
  virtual ~ProductionResetTestResponse();
  explicit constexpr ProductionResetTestResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProductionResetTestResponse(const ProductionResetTestResponse& from);
  ProductionResetTestResponse(ProductionResetTestResponse&& from) noexcept
    : ProductionResetTestResponse() {
    *this = ::std::move(from);
  }

  inline ProductionResetTestResponse& operator=(const ProductionResetTestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProductionResetTestResponse& operator=(ProductionResetTestResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProductionResetTestResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProductionResetTestResponse* internal_default_instance() {
    return reinterpret_cast<const ProductionResetTestResponse*>(
               &_ProductionResetTestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(ProductionResetTestResponse& a, ProductionResetTestResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ProductionResetTestResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProductionResetTestResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProductionResetTestResponse* New() const final {
    return CreateMaybeMessage<ProductionResetTestResponse>(nullptr);
  }

  ProductionResetTestResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProductionResetTestResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProductionResetTestResponse& from);
  void MergeFrom(const ProductionResetTestResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProductionResetTestResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.ProductionResetTestResponse";
  }
  protected:
  explicit ProductionResetTestResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.avb.ProductionResetTestResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class BootloaderDoneRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.BootloaderDoneRequest) */ {
 public:
  inline BootloaderDoneRequest() : BootloaderDoneRequest(nullptr) {}
  virtual ~BootloaderDoneRequest();
  explicit constexpr BootloaderDoneRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BootloaderDoneRequest(const BootloaderDoneRequest& from);
  BootloaderDoneRequest(BootloaderDoneRequest&& from) noexcept
    : BootloaderDoneRequest() {
    *this = ::std::move(from);
  }

  inline BootloaderDoneRequest& operator=(const BootloaderDoneRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BootloaderDoneRequest& operator=(BootloaderDoneRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BootloaderDoneRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const BootloaderDoneRequest* internal_default_instance() {
    return reinterpret_cast<const BootloaderDoneRequest*>(
               &_BootloaderDoneRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(BootloaderDoneRequest& a, BootloaderDoneRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(BootloaderDoneRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BootloaderDoneRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BootloaderDoneRequest* New() const final {
    return CreateMaybeMessage<BootloaderDoneRequest>(nullptr);
  }

  BootloaderDoneRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BootloaderDoneRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BootloaderDoneRequest& from);
  void MergeFrom(const BootloaderDoneRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BootloaderDoneRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.BootloaderDoneRequest";
  }
  protected:
  explicit BootloaderDoneRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.avb.BootloaderDoneRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// -------------------------------------------------------------------

class BootloaderDoneResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nugget.app.avb.BootloaderDoneResponse) */ {
 public:
  inline BootloaderDoneResponse() : BootloaderDoneResponse(nullptr) {}
  virtual ~BootloaderDoneResponse();
  explicit constexpr BootloaderDoneResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BootloaderDoneResponse(const BootloaderDoneResponse& from);
  BootloaderDoneResponse(BootloaderDoneResponse&& from) noexcept
    : BootloaderDoneResponse() {
    *this = ::std::move(from);
  }

  inline BootloaderDoneResponse& operator=(const BootloaderDoneResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BootloaderDoneResponse& operator=(BootloaderDoneResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BootloaderDoneResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const BootloaderDoneResponse* internal_default_instance() {
    return reinterpret_cast<const BootloaderDoneResponse*>(
               &_BootloaderDoneResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(BootloaderDoneResponse& a, BootloaderDoneResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(BootloaderDoneResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BootloaderDoneResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BootloaderDoneResponse* New() const final {
    return CreateMaybeMessage<BootloaderDoneResponse>(nullptr);
  }

  BootloaderDoneResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BootloaderDoneResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BootloaderDoneResponse& from);
  void MergeFrom(const BootloaderDoneResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BootloaderDoneResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nugget.app.avb.BootloaderDoneResponse";
  }
  protected:
  explicit BootloaderDoneResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_nugget_2fapp_2favb_2favb_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:nugget.app.avb.BootloaderDoneResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nugget_2fapp_2favb_2favb_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetStateRequest

// bool keysclear_reset = 1;
inline void GetStateRequest::clear_keysclear_reset() {
  keysclear_reset_ = false;
}
inline bool GetStateRequest::_internal_keysclear_reset() const {
  return keysclear_reset_;
}
inline bool GetStateRequest::keysclear_reset() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.GetStateRequest.keysclear_reset)
  return _internal_keysclear_reset();
}
inline void GetStateRequest::_internal_set_keysclear_reset(bool value) {
  
  keysclear_reset_ = value;
}
inline void GetStateRequest::set_keysclear_reset(bool value) {
  _internal_set_keysclear_reset(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.GetStateRequest.keysclear_reset)
}

// -------------------------------------------------------------------

// GetStateResponse

// uint64 version = 1;
inline void GetStateResponse::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetStateResponse::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetStateResponse::version() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.GetStateResponse.version)
  return _internal_version();
}
inline void GetStateResponse::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  version_ = value;
}
inline void GetStateResponse::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.GetStateResponse.version)
}

// bool bootloader = 2;
inline void GetStateResponse::clear_bootloader() {
  bootloader_ = false;
}
inline bool GetStateResponse::_internal_bootloader() const {
  return bootloader_;
}
inline bool GetStateResponse::bootloader() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.GetStateResponse.bootloader)
  return _internal_bootloader();
}
inline void GetStateResponse::_internal_set_bootloader(bool value) {
  
  bootloader_ = value;
}
inline void GetStateResponse::set_bootloader(bool value) {
  _internal_set_bootloader(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.GetStateResponse.bootloader)
}

// bool production = 3;
inline void GetStateResponse::clear_production() {
  production_ = false;
}
inline bool GetStateResponse::_internal_production() const {
  return production_;
}
inline bool GetStateResponse::production() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.GetStateResponse.production)
  return _internal_production();
}
inline void GetStateResponse::_internal_set_production(bool value) {
  
  production_ = value;
}
inline void GetStateResponse::set_production(bool value) {
  _internal_set_production(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.GetStateResponse.production)
}

// uint32 number_of_locks = 4;
inline void GetStateResponse::clear_number_of_locks() {
  number_of_locks_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetStateResponse::_internal_number_of_locks() const {
  return number_of_locks_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetStateResponse::number_of_locks() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.GetStateResponse.number_of_locks)
  return _internal_number_of_locks();
}
inline void GetStateResponse::_internal_set_number_of_locks(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  number_of_locks_ = value;
}
inline void GetStateResponse::set_number_of_locks(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_number_of_locks(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.GetStateResponse.number_of_locks)
}

// bytes locks = 5;
inline void GetStateResponse::clear_locks() {
  locks_.ClearToEmpty();
}
inline const std::string& GetStateResponse::locks() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.GetStateResponse.locks)
  return _internal_locks();
}
inline void GetStateResponse::set_locks(const std::string& value) {
  _internal_set_locks(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.GetStateResponse.locks)
}
inline std::string* GetStateResponse::mutable_locks() {
  // @@protoc_insertion_point(field_mutable:nugget.app.avb.GetStateResponse.locks)
  return _internal_mutable_locks();
}
inline const std::string& GetStateResponse::_internal_locks() const {
  return locks_.Get();
}
inline void GetStateResponse::_internal_set_locks(const std::string& value) {
  
  locks_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetStateResponse::set_locks(std::string&& value) {
  
  locks_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.avb.GetStateResponse.locks)
}
inline void GetStateResponse::set_locks(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  locks_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.avb.GetStateResponse.locks)
}
inline void GetStateResponse::set_locks(const void* value,
    size_t size) {
  
  locks_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.avb.GetStateResponse.locks)
}
inline std::string* GetStateResponse::_internal_mutable_locks() {
  
  return locks_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetStateResponse::release_locks() {
  // @@protoc_insertion_point(field_release:nugget.app.avb.GetStateResponse.locks)
  return locks_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetStateResponse::set_allocated_locks(std::string* locks) {
  if (locks != nullptr) {
    
  } else {
    
  }
  locks_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), locks,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.avb.GetStateResponse.locks)
}

// bool keysclear_required = 6;
inline void GetStateResponse::clear_keysclear_required() {
  keysclear_required_ = false;
}
inline bool GetStateResponse::_internal_keysclear_required() const {
  return keysclear_required_;
}
inline bool GetStateResponse::keysclear_required() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.GetStateResponse.keysclear_required)
  return _internal_keysclear_required();
}
inline void GetStateResponse::_internal_set_keysclear_required(bool value) {
  
  keysclear_required_ = value;
}
inline void GetStateResponse::set_keysclear_required(bool value) {
  _internal_set_keysclear_required(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.GetStateResponse.keysclear_required)
}

// -------------------------------------------------------------------

// LoadRequest

// uint32 slot = 1;
inline void LoadRequest::clear_slot() {
  slot_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LoadRequest::_internal_slot() const {
  return slot_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LoadRequest::slot() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.LoadRequest.slot)
  return _internal_slot();
}
inline void LoadRequest::_internal_set_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  slot_ = value;
}
inline void LoadRequest::set_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_slot(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.LoadRequest.slot)
}

// -------------------------------------------------------------------

// LoadResponse

// uint64 version = 1;
inline void LoadResponse::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LoadResponse::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LoadResponse::version() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.LoadResponse.version)
  return _internal_version();
}
inline void LoadResponse::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  version_ = value;
}
inline void LoadResponse::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.LoadResponse.version)
}

// -------------------------------------------------------------------

// StoreRequest

// uint32 slot = 1;
inline void StoreRequest::clear_slot() {
  slot_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StoreRequest::_internal_slot() const {
  return slot_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StoreRequest::slot() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.StoreRequest.slot)
  return _internal_slot();
}
inline void StoreRequest::_internal_set_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  slot_ = value;
}
inline void StoreRequest::set_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_slot(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.StoreRequest.slot)
}

// uint64 version = 2;
inline void StoreRequest::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StoreRequest::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StoreRequest::version() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.StoreRequest.version)
  return _internal_version();
}
inline void StoreRequest::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  version_ = value;
}
inline void StoreRequest::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.StoreRequest.version)
}

// -------------------------------------------------------------------

// StoreResponse

// -------------------------------------------------------------------

// GetLockRequest

// .nugget.app.avb.LockIndex lock = 1;
inline void GetLockRequest::clear_lock() {
  lock_ = 0;
}
inline ::nugget::app::avb::LockIndex GetLockRequest::_internal_lock() const {
  return static_cast< ::nugget::app::avb::LockIndex >(lock_);
}
inline ::nugget::app::avb::LockIndex GetLockRequest::lock() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.GetLockRequest.lock)
  return _internal_lock();
}
inline void GetLockRequest::_internal_set_lock(::nugget::app::avb::LockIndex value) {
  
  lock_ = value;
}
inline void GetLockRequest::set_lock(::nugget::app::avb::LockIndex value) {
  _internal_set_lock(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.GetLockRequest.lock)
}

// -------------------------------------------------------------------

// GetLockResponse

// uint32 locked = 1;
inline void GetLockResponse::clear_locked() {
  locked_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetLockResponse::_internal_locked() const {
  return locked_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetLockResponse::locked() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.GetLockResponse.locked)
  return _internal_locked();
}
inline void GetLockResponse::_internal_set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  locked_ = value;
}
inline void GetLockResponse::set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_locked(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.GetLockResponse.locked)
}

// -------------------------------------------------------------------

// CarrierUnlock

// uint64 version = 1;
inline void CarrierUnlock::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CarrierUnlock::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CarrierUnlock::version() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.CarrierUnlock.version)
  return _internal_version();
}
inline void CarrierUnlock::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  version_ = value;
}
inline void CarrierUnlock::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.CarrierUnlock.version)
}

// uint64 nonce = 2;
inline void CarrierUnlock::clear_nonce() {
  nonce_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CarrierUnlock::_internal_nonce() const {
  return nonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CarrierUnlock::nonce() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.CarrierUnlock.nonce)
  return _internal_nonce();
}
inline void CarrierUnlock::_internal_set_nonce(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  nonce_ = value;
}
inline void CarrierUnlock::set_nonce(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_nonce(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.CarrierUnlock.nonce)
}

// bytes signature = 3;
inline void CarrierUnlock::clear_signature() {
  signature_.ClearToEmpty();
}
inline const std::string& CarrierUnlock::signature() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.CarrierUnlock.signature)
  return _internal_signature();
}
inline void CarrierUnlock::set_signature(const std::string& value) {
  _internal_set_signature(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.CarrierUnlock.signature)
}
inline std::string* CarrierUnlock::mutable_signature() {
  // @@protoc_insertion_point(field_mutable:nugget.app.avb.CarrierUnlock.signature)
  return _internal_mutable_signature();
}
inline const std::string& CarrierUnlock::_internal_signature() const {
  return signature_.Get();
}
inline void CarrierUnlock::_internal_set_signature(const std::string& value) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CarrierUnlock::set_signature(std::string&& value) {
  
  signature_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.avb.CarrierUnlock.signature)
}
inline void CarrierUnlock::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.avb.CarrierUnlock.signature)
}
inline void CarrierUnlock::set_signature(const void* value,
    size_t size) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.avb.CarrierUnlock.signature)
}
inline std::string* CarrierUnlock::_internal_mutable_signature() {
  
  return signature_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CarrierUnlock::release_signature() {
  // @@protoc_insertion_point(field_release:nugget.app.avb.CarrierUnlock.signature)
  return signature_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CarrierUnlock::set_allocated_signature(std::string* signature) {
  if (signature != nullptr) {
    
  } else {
    
  }
  signature_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), signature,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.avb.CarrierUnlock.signature)
}

// -------------------------------------------------------------------

// CarrierLockRequest

// uint32 locked = 1;
inline void CarrierLockRequest::clear_locked() {
  locked_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CarrierLockRequest::_internal_locked() const {
  return locked_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CarrierLockRequest::locked() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.CarrierLockRequest.locked)
  return _internal_locked();
}
inline void CarrierLockRequest::_internal_set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  locked_ = value;
}
inline void CarrierLockRequest::set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_locked(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.CarrierLockRequest.locked)
}

// bytes device_data = 2;
inline void CarrierLockRequest::clear_device_data() {
  device_data_.ClearToEmpty();
}
inline const std::string& CarrierLockRequest::device_data() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.CarrierLockRequest.device_data)
  return _internal_device_data();
}
inline void CarrierLockRequest::set_device_data(const std::string& value) {
  _internal_set_device_data(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.CarrierLockRequest.device_data)
}
inline std::string* CarrierLockRequest::mutable_device_data() {
  // @@protoc_insertion_point(field_mutable:nugget.app.avb.CarrierLockRequest.device_data)
  return _internal_mutable_device_data();
}
inline const std::string& CarrierLockRequest::_internal_device_data() const {
  return device_data_.Get();
}
inline void CarrierLockRequest::_internal_set_device_data(const std::string& value) {
  
  device_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CarrierLockRequest::set_device_data(std::string&& value) {
  
  device_data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.avb.CarrierLockRequest.device_data)
}
inline void CarrierLockRequest::set_device_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  device_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.avb.CarrierLockRequest.device_data)
}
inline void CarrierLockRequest::set_device_data(const void* value,
    size_t size) {
  
  device_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.avb.CarrierLockRequest.device_data)
}
inline std::string* CarrierLockRequest::_internal_mutable_device_data() {
  
  return device_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CarrierLockRequest::release_device_data() {
  // @@protoc_insertion_point(field_release:nugget.app.avb.CarrierLockRequest.device_data)
  return device_data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CarrierLockRequest::set_allocated_device_data(std::string* device_data) {
  if (device_data != nullptr) {
    
  } else {
    
  }
  device_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), device_data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.avb.CarrierLockRequest.device_data)
}

// -------------------------------------------------------------------

// CarrierLockResponse

// -------------------------------------------------------------------

// CarrierUnlockRequest

// .nugget.app.avb.CarrierUnlock token = 1;
inline bool CarrierUnlockRequest::_internal_has_token() const {
  return this != internal_default_instance() && token_ != nullptr;
}
inline bool CarrierUnlockRequest::has_token() const {
  return _internal_has_token();
}
inline void CarrierUnlockRequest::clear_token() {
  if (GetArena() == nullptr && token_ != nullptr) {
    delete token_;
  }
  token_ = nullptr;
}
inline const ::nugget::app::avb::CarrierUnlock& CarrierUnlockRequest::_internal_token() const {
  const ::nugget::app::avb::CarrierUnlock* p = token_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::avb::CarrierUnlock&>(
      ::nugget::app::avb::_CarrierUnlock_default_instance_);
}
inline const ::nugget::app::avb::CarrierUnlock& CarrierUnlockRequest::token() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.CarrierUnlockRequest.token)
  return _internal_token();
}
inline void CarrierUnlockRequest::unsafe_arena_set_allocated_token(
    ::nugget::app::avb::CarrierUnlock* token) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(token_);
  }
  token_ = token;
  if (token) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.avb.CarrierUnlockRequest.token)
}
inline ::nugget::app::avb::CarrierUnlock* CarrierUnlockRequest::release_token() {
  
  ::nugget::app::avb::CarrierUnlock* temp = token_;
  token_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::avb::CarrierUnlock* CarrierUnlockRequest::unsafe_arena_release_token() {
  // @@protoc_insertion_point(field_release:nugget.app.avb.CarrierUnlockRequest.token)
  
  ::nugget::app::avb::CarrierUnlock* temp = token_;
  token_ = nullptr;
  return temp;
}
inline ::nugget::app::avb::CarrierUnlock* CarrierUnlockRequest::_internal_mutable_token() {
  
  if (token_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::avb::CarrierUnlock>(GetArena());
    token_ = p;
  }
  return token_;
}
inline ::nugget::app::avb::CarrierUnlock* CarrierUnlockRequest::mutable_token() {
  // @@protoc_insertion_point(field_mutable:nugget.app.avb.CarrierUnlockRequest.token)
  return _internal_mutable_token();
}
inline void CarrierUnlockRequest::set_allocated_token(::nugget::app::avb::CarrierUnlock* token) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete token_;
  }
  if (token) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(token);
    if (message_arena != submessage_arena) {
      token = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, token, submessage_arena);
    }
    
  } else {
    
  }
  token_ = token;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.avb.CarrierUnlockRequest.token)
}

// -------------------------------------------------------------------

// CarrierUnlockResponse

// -------------------------------------------------------------------

// SetDeviceLockRequest

// uint32 locked = 1;
inline void SetDeviceLockRequest::clear_locked() {
  locked_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetDeviceLockRequest::_internal_locked() const {
  return locked_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetDeviceLockRequest::locked() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.SetDeviceLockRequest.locked)
  return _internal_locked();
}
inline void SetDeviceLockRequest::_internal_set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  locked_ = value;
}
inline void SetDeviceLockRequest::set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_locked(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.SetDeviceLockRequest.locked)
}

// -------------------------------------------------------------------

// SetDeviceLockResponse

// -------------------------------------------------------------------

// SetBootLockRequest

// uint32 locked = 1;
inline void SetBootLockRequest::clear_locked() {
  locked_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetBootLockRequest::_internal_locked() const {
  return locked_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetBootLockRequest::locked() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.SetBootLockRequest.locked)
  return _internal_locked();
}
inline void SetBootLockRequest::_internal_set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  locked_ = value;
}
inline void SetBootLockRequest::set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_locked(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.SetBootLockRequest.locked)
}

// -------------------------------------------------------------------

// SetBootLockResponse

// -------------------------------------------------------------------

// SetOwnerLockRequest

// uint32 locked = 1;
inline void SetOwnerLockRequest::clear_locked() {
  locked_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetOwnerLockRequest::_internal_locked() const {
  return locked_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetOwnerLockRequest::locked() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.SetOwnerLockRequest.locked)
  return _internal_locked();
}
inline void SetOwnerLockRequest::_internal_set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  locked_ = value;
}
inline void SetOwnerLockRequest::set_locked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_locked(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.SetOwnerLockRequest.locked)
}

// bytes key = 2;
inline void SetOwnerLockRequest::clear_key() {
  key_.ClearToEmpty();
}
inline const std::string& SetOwnerLockRequest::key() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.SetOwnerLockRequest.key)
  return _internal_key();
}
inline void SetOwnerLockRequest::set_key(const std::string& value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.SetOwnerLockRequest.key)
}
inline std::string* SetOwnerLockRequest::mutable_key() {
  // @@protoc_insertion_point(field_mutable:nugget.app.avb.SetOwnerLockRequest.key)
  return _internal_mutable_key();
}
inline const std::string& SetOwnerLockRequest::_internal_key() const {
  return key_.Get();
}
inline void SetOwnerLockRequest::_internal_set_key(const std::string& value) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SetOwnerLockRequest::set_key(std::string&& value) {
  
  key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.avb.SetOwnerLockRequest.key)
}
inline void SetOwnerLockRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.avb.SetOwnerLockRequest.key)
}
inline void SetOwnerLockRequest::set_key(const void* value,
    size_t size) {
  
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.avb.SetOwnerLockRequest.key)
}
inline std::string* SetOwnerLockRequest::_internal_mutable_key() {
  
  return key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SetOwnerLockRequest::release_key() {
  // @@protoc_insertion_point(field_release:nugget.app.avb.SetOwnerLockRequest.key)
  return key_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SetOwnerLockRequest::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.avb.SetOwnerLockRequest.key)
}

// -------------------------------------------------------------------

// SetOwnerLockResponse

// -------------------------------------------------------------------

// GetOwnerKeyRequest

// uint32 offset = 1;
inline void GetOwnerKeyRequest::clear_offset() {
  offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetOwnerKeyRequest::_internal_offset() const {
  return offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetOwnerKeyRequest::offset() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.GetOwnerKeyRequest.offset)
  return _internal_offset();
}
inline void GetOwnerKeyRequest::_internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  offset_ = value;
}
inline void GetOwnerKeyRequest::set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.GetOwnerKeyRequest.offset)
}

// uint32 size = 2;
inline void GetOwnerKeyRequest::clear_size() {
  size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetOwnerKeyRequest::_internal_size() const {
  return size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetOwnerKeyRequest::size() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.GetOwnerKeyRequest.size)
  return _internal_size();
}
inline void GetOwnerKeyRequest::_internal_set_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  size_ = value;
}
inline void GetOwnerKeyRequest::set_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.GetOwnerKeyRequest.size)
}

// -------------------------------------------------------------------

// GetOwnerKeyResponse

// bytes chunk = 1;
inline void GetOwnerKeyResponse::clear_chunk() {
  chunk_.ClearToEmpty();
}
inline const std::string& GetOwnerKeyResponse::chunk() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.GetOwnerKeyResponse.chunk)
  return _internal_chunk();
}
inline void GetOwnerKeyResponse::set_chunk(const std::string& value) {
  _internal_set_chunk(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.GetOwnerKeyResponse.chunk)
}
inline std::string* GetOwnerKeyResponse::mutable_chunk() {
  // @@protoc_insertion_point(field_mutable:nugget.app.avb.GetOwnerKeyResponse.chunk)
  return _internal_mutable_chunk();
}
inline const std::string& GetOwnerKeyResponse::_internal_chunk() const {
  return chunk_.Get();
}
inline void GetOwnerKeyResponse::_internal_set_chunk(const std::string& value) {
  
  chunk_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetOwnerKeyResponse::set_chunk(std::string&& value) {
  
  chunk_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.avb.GetOwnerKeyResponse.chunk)
}
inline void GetOwnerKeyResponse::set_chunk(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  chunk_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.avb.GetOwnerKeyResponse.chunk)
}
inline void GetOwnerKeyResponse::set_chunk(const void* value,
    size_t size) {
  
  chunk_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.avb.GetOwnerKeyResponse.chunk)
}
inline std::string* GetOwnerKeyResponse::_internal_mutable_chunk() {
  
  return chunk_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetOwnerKeyResponse::release_chunk() {
  // @@protoc_insertion_point(field_release:nugget.app.avb.GetOwnerKeyResponse.chunk)
  return chunk_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetOwnerKeyResponse::set_allocated_chunk(std::string* chunk) {
  if (chunk != nullptr) {
    
  } else {
    
  }
  chunk_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), chunk,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.avb.GetOwnerKeyResponse.chunk)
}

// -------------------------------------------------------------------

// SetProductionRequest

// bool production = 1;
inline void SetProductionRequest::clear_production() {
  production_ = false;
}
inline bool SetProductionRequest::_internal_production() const {
  return production_;
}
inline bool SetProductionRequest::production() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.SetProductionRequest.production)
  return _internal_production();
}
inline void SetProductionRequest::_internal_set_production(bool value) {
  
  production_ = value;
}
inline void SetProductionRequest::set_production(bool value) {
  _internal_set_production(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.SetProductionRequest.production)
}

// bytes device_data = 2;
inline void SetProductionRequest::clear_device_data() {
  device_data_.ClearToEmpty();
}
inline const std::string& SetProductionRequest::device_data() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.SetProductionRequest.device_data)
  return _internal_device_data();
}
inline void SetProductionRequest::set_device_data(const std::string& value) {
  _internal_set_device_data(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.SetProductionRequest.device_data)
}
inline std::string* SetProductionRequest::mutable_device_data() {
  // @@protoc_insertion_point(field_mutable:nugget.app.avb.SetProductionRequest.device_data)
  return _internal_mutable_device_data();
}
inline const std::string& SetProductionRequest::_internal_device_data() const {
  return device_data_.Get();
}
inline void SetProductionRequest::_internal_set_device_data(const std::string& value) {
  
  device_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SetProductionRequest::set_device_data(std::string&& value) {
  
  device_data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.avb.SetProductionRequest.device_data)
}
inline void SetProductionRequest::set_device_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  device_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.avb.SetProductionRequest.device_data)
}
inline void SetProductionRequest::set_device_data(const void* value,
    size_t size) {
  
  device_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.avb.SetProductionRequest.device_data)
}
inline std::string* SetProductionRequest::_internal_mutable_device_data() {
  
  return device_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SetProductionRequest::release_device_data() {
  // @@protoc_insertion_point(field_release:nugget.app.avb.SetProductionRequest.device_data)
  return device_data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SetProductionRequest::set_allocated_device_data(std::string* device_data) {
  if (device_data != nullptr) {
    
  } else {
    
  }
  device_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), device_data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.avb.SetProductionRequest.device_data)
}

// -------------------------------------------------------------------

// SetProductionResponse

// -------------------------------------------------------------------

// CarrierLockTestRequest

// uint64 last_nonce = 1;
inline void CarrierLockTestRequest::clear_last_nonce() {
  last_nonce_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CarrierLockTestRequest::_internal_last_nonce() const {
  return last_nonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CarrierLockTestRequest::last_nonce() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.CarrierLockTestRequest.last_nonce)
  return _internal_last_nonce();
}
inline void CarrierLockTestRequest::_internal_set_last_nonce(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  last_nonce_ = value;
}
inline void CarrierLockTestRequest::set_last_nonce(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_last_nonce(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.CarrierLockTestRequest.last_nonce)
}

// uint64 version = 2;
inline void CarrierLockTestRequest::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CarrierLockTestRequest::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CarrierLockTestRequest::version() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.CarrierLockTestRequest.version)
  return _internal_version();
}
inline void CarrierLockTestRequest::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  version_ = value;
}
inline void CarrierLockTestRequest::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.CarrierLockTestRequest.version)
}

// bytes device_data = 3;
inline void CarrierLockTestRequest::clear_device_data() {
  device_data_.ClearToEmpty();
}
inline const std::string& CarrierLockTestRequest::device_data() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.CarrierLockTestRequest.device_data)
  return _internal_device_data();
}
inline void CarrierLockTestRequest::set_device_data(const std::string& value) {
  _internal_set_device_data(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.CarrierLockTestRequest.device_data)
}
inline std::string* CarrierLockTestRequest::mutable_device_data() {
  // @@protoc_insertion_point(field_mutable:nugget.app.avb.CarrierLockTestRequest.device_data)
  return _internal_mutable_device_data();
}
inline const std::string& CarrierLockTestRequest::_internal_device_data() const {
  return device_data_.Get();
}
inline void CarrierLockTestRequest::_internal_set_device_data(const std::string& value) {
  
  device_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CarrierLockTestRequest::set_device_data(std::string&& value) {
  
  device_data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.avb.CarrierLockTestRequest.device_data)
}
inline void CarrierLockTestRequest::set_device_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  device_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.avb.CarrierLockTestRequest.device_data)
}
inline void CarrierLockTestRequest::set_device_data(const void* value,
    size_t size) {
  
  device_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.avb.CarrierLockTestRequest.device_data)
}
inline std::string* CarrierLockTestRequest::_internal_mutable_device_data() {
  
  return device_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CarrierLockTestRequest::release_device_data() {
  // @@protoc_insertion_point(field_release:nugget.app.avb.CarrierLockTestRequest.device_data)
  return device_data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CarrierLockTestRequest::set_allocated_device_data(std::string* device_data) {
  if (device_data != nullptr) {
    
  } else {
    
  }
  device_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), device_data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.avb.CarrierLockTestRequest.device_data)
}

// .nugget.app.avb.CarrierUnlock token = 4;
inline bool CarrierLockTestRequest::_internal_has_token() const {
  return this != internal_default_instance() && token_ != nullptr;
}
inline bool CarrierLockTestRequest::has_token() const {
  return _internal_has_token();
}
inline void CarrierLockTestRequest::clear_token() {
  if (GetArena() == nullptr && token_ != nullptr) {
    delete token_;
  }
  token_ = nullptr;
}
inline const ::nugget::app::avb::CarrierUnlock& CarrierLockTestRequest::_internal_token() const {
  const ::nugget::app::avb::CarrierUnlock* p = token_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::avb::CarrierUnlock&>(
      ::nugget::app::avb::_CarrierUnlock_default_instance_);
}
inline const ::nugget::app::avb::CarrierUnlock& CarrierLockTestRequest::token() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.CarrierLockTestRequest.token)
  return _internal_token();
}
inline void CarrierLockTestRequest::unsafe_arena_set_allocated_token(
    ::nugget::app::avb::CarrierUnlock* token) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(token_);
  }
  token_ = token;
  if (token) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.avb.CarrierLockTestRequest.token)
}
inline ::nugget::app::avb::CarrierUnlock* CarrierLockTestRequest::release_token() {
  
  ::nugget::app::avb::CarrierUnlock* temp = token_;
  token_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::avb::CarrierUnlock* CarrierLockTestRequest::unsafe_arena_release_token() {
  // @@protoc_insertion_point(field_release:nugget.app.avb.CarrierLockTestRequest.token)
  
  ::nugget::app::avb::CarrierUnlock* temp = token_;
  token_ = nullptr;
  return temp;
}
inline ::nugget::app::avb::CarrierUnlock* CarrierLockTestRequest::_internal_mutable_token() {
  
  if (token_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::avb::CarrierUnlock>(GetArena());
    token_ = p;
  }
  return token_;
}
inline ::nugget::app::avb::CarrierUnlock* CarrierLockTestRequest::mutable_token() {
  // @@protoc_insertion_point(field_mutable:nugget.app.avb.CarrierLockTestRequest.token)
  return _internal_mutable_token();
}
inline void CarrierLockTestRequest::set_allocated_token(::nugget::app::avb::CarrierUnlock* token) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete token_;
  }
  if (token) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(token);
    if (message_arena != submessage_arena) {
      token = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, token, submessage_arena);
    }
    
  } else {
    
  }
  token_ = token;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.avb.CarrierLockTestRequest.token)
}

// -------------------------------------------------------------------

// CarrierLockTestResponse

// -------------------------------------------------------------------

// ResetToken

// uint32 selector = 1;
inline void ResetToken::clear_selector() {
  selector_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ResetToken::_internal_selector() const {
  return selector_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ResetToken::selector() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.ResetToken.selector)
  return _internal_selector();
}
inline void ResetToken::_internal_set_selector(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  selector_ = value;
}
inline void ResetToken::set_selector(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_selector(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.ResetToken.selector)
}

// bytes signature = 2;
inline void ResetToken::clear_signature() {
  signature_.ClearToEmpty();
}
inline const std::string& ResetToken::signature() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.ResetToken.signature)
  return _internal_signature();
}
inline void ResetToken::set_signature(const std::string& value) {
  _internal_set_signature(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.ResetToken.signature)
}
inline std::string* ResetToken::mutable_signature() {
  // @@protoc_insertion_point(field_mutable:nugget.app.avb.ResetToken.signature)
  return _internal_mutable_signature();
}
inline const std::string& ResetToken::_internal_signature() const {
  return signature_.Get();
}
inline void ResetToken::_internal_set_signature(const std::string& value) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ResetToken::set_signature(std::string&& value) {
  
  signature_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.avb.ResetToken.signature)
}
inline void ResetToken::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.avb.ResetToken.signature)
}
inline void ResetToken::set_signature(const void* value,
    size_t size) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.avb.ResetToken.signature)
}
inline std::string* ResetToken::_internal_mutable_signature() {
  
  return signature_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ResetToken::release_signature() {
  // @@protoc_insertion_point(field_release:nugget.app.avb.ResetToken.signature)
  return signature_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ResetToken::set_allocated_signature(std::string* signature) {
  if (signature != nullptr) {
    
  } else {
    
  }
  signature_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), signature,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.avb.ResetToken.signature)
}

// -------------------------------------------------------------------

// ResetRequest

// .nugget.app.avb.ResetRequest.ResetKind kind = 1;
inline void ResetRequest::clear_kind() {
  kind_ = 0;
}
inline ::nugget::app::avb::ResetRequest_ResetKind ResetRequest::_internal_kind() const {
  return static_cast< ::nugget::app::avb::ResetRequest_ResetKind >(kind_);
}
inline ::nugget::app::avb::ResetRequest_ResetKind ResetRequest::kind() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.ResetRequest.kind)
  return _internal_kind();
}
inline void ResetRequest::_internal_set_kind(::nugget::app::avb::ResetRequest_ResetKind value) {
  
  kind_ = value;
}
inline void ResetRequest::set_kind(::nugget::app::avb::ResetRequest_ResetKind value) {
  _internal_set_kind(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.ResetRequest.kind)
}

// .nugget.app.avb.ResetToken token = 2;
inline bool ResetRequest::_internal_has_token() const {
  return this != internal_default_instance() && token_ != nullptr;
}
inline bool ResetRequest::has_token() const {
  return _internal_has_token();
}
inline void ResetRequest::clear_token() {
  if (GetArena() == nullptr && token_ != nullptr) {
    delete token_;
  }
  token_ = nullptr;
}
inline const ::nugget::app::avb::ResetToken& ResetRequest::_internal_token() const {
  const ::nugget::app::avb::ResetToken* p = token_;
  return p != nullptr ? *p : reinterpret_cast<const ::nugget::app::avb::ResetToken&>(
      ::nugget::app::avb::_ResetToken_default_instance_);
}
inline const ::nugget::app::avb::ResetToken& ResetRequest::token() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.ResetRequest.token)
  return _internal_token();
}
inline void ResetRequest::unsafe_arena_set_allocated_token(
    ::nugget::app::avb::ResetToken* token) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(token_);
  }
  token_ = token;
  if (token) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nugget.app.avb.ResetRequest.token)
}
inline ::nugget::app::avb::ResetToken* ResetRequest::release_token() {
  
  ::nugget::app::avb::ResetToken* temp = token_;
  token_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::nugget::app::avb::ResetToken* ResetRequest::unsafe_arena_release_token() {
  // @@protoc_insertion_point(field_release:nugget.app.avb.ResetRequest.token)
  
  ::nugget::app::avb::ResetToken* temp = token_;
  token_ = nullptr;
  return temp;
}
inline ::nugget::app::avb::ResetToken* ResetRequest::_internal_mutable_token() {
  
  if (token_ == nullptr) {
    auto* p = CreateMaybeMessage<::nugget::app::avb::ResetToken>(GetArena());
    token_ = p;
  }
  return token_;
}
inline ::nugget::app::avb::ResetToken* ResetRequest::mutable_token() {
  // @@protoc_insertion_point(field_mutable:nugget.app.avb.ResetRequest.token)
  return _internal_mutable_token();
}
inline void ResetRequest::set_allocated_token(::nugget::app::avb::ResetToken* token) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete token_;
  }
  if (token) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(token);
    if (message_arena != submessage_arena) {
      token = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, token, submessage_arena);
    }
    
  } else {
    
  }
  token_ = token;
  // @@protoc_insertion_point(field_set_allocated:nugget.app.avb.ResetRequest.token)
}

// -------------------------------------------------------------------

// ResetResponse

// -------------------------------------------------------------------

// GetResetChallengeRequest

// -------------------------------------------------------------------

// GetResetChallengeResponse

// uint32 selector = 1;
inline void GetResetChallengeResponse::clear_selector() {
  selector_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetResetChallengeResponse::_internal_selector() const {
  return selector_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetResetChallengeResponse::selector() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.GetResetChallengeResponse.selector)
  return _internal_selector();
}
inline void GetResetChallengeResponse::_internal_set_selector(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  selector_ = value;
}
inline void GetResetChallengeResponse::set_selector(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_selector(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.GetResetChallengeResponse.selector)
}

// uint64 nonce = 2;
inline void GetResetChallengeResponse::clear_nonce() {
  nonce_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetResetChallengeResponse::_internal_nonce() const {
  return nonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetResetChallengeResponse::nonce() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.GetResetChallengeResponse.nonce)
  return _internal_nonce();
}
inline void GetResetChallengeResponse::_internal_set_nonce(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  nonce_ = value;
}
inline void GetResetChallengeResponse::set_nonce(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_nonce(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.GetResetChallengeResponse.nonce)
}

// bytes device_data = 3;
inline void GetResetChallengeResponse::clear_device_data() {
  device_data_.ClearToEmpty();
}
inline const std::string& GetResetChallengeResponse::device_data() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.GetResetChallengeResponse.device_data)
  return _internal_device_data();
}
inline void GetResetChallengeResponse::set_device_data(const std::string& value) {
  _internal_set_device_data(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.GetResetChallengeResponse.device_data)
}
inline std::string* GetResetChallengeResponse::mutable_device_data() {
  // @@protoc_insertion_point(field_mutable:nugget.app.avb.GetResetChallengeResponse.device_data)
  return _internal_mutable_device_data();
}
inline const std::string& GetResetChallengeResponse::_internal_device_data() const {
  return device_data_.Get();
}
inline void GetResetChallengeResponse::_internal_set_device_data(const std::string& value) {
  
  device_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetResetChallengeResponse::set_device_data(std::string&& value) {
  
  device_data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.avb.GetResetChallengeResponse.device_data)
}
inline void GetResetChallengeResponse::set_device_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  device_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.avb.GetResetChallengeResponse.device_data)
}
inline void GetResetChallengeResponse::set_device_data(const void* value,
    size_t size) {
  
  device_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.avb.GetResetChallengeResponse.device_data)
}
inline std::string* GetResetChallengeResponse::_internal_mutable_device_data() {
  
  return device_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetResetChallengeResponse::release_device_data() {
  // @@protoc_insertion_point(field_release:nugget.app.avb.GetResetChallengeResponse.device_data)
  return device_data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetResetChallengeResponse::set_allocated_device_data(std::string* device_data) {
  if (device_data != nullptr) {
    
  } else {
    
  }
  device_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), device_data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.avb.GetResetChallengeResponse.device_data)
}

// -------------------------------------------------------------------

// ProductionResetTestRequest

// uint32 selector = 1;
inline void ProductionResetTestRequest::clear_selector() {
  selector_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProductionResetTestRequest::_internal_selector() const {
  return selector_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProductionResetTestRequest::selector() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.ProductionResetTestRequest.selector)
  return _internal_selector();
}
inline void ProductionResetTestRequest::_internal_set_selector(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  selector_ = value;
}
inline void ProductionResetTestRequest::set_selector(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_selector(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.ProductionResetTestRequest.selector)
}

// uint64 nonce = 2;
inline void ProductionResetTestRequest::clear_nonce() {
  nonce_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProductionResetTestRequest::_internal_nonce() const {
  return nonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProductionResetTestRequest::nonce() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.ProductionResetTestRequest.nonce)
  return _internal_nonce();
}
inline void ProductionResetTestRequest::_internal_set_nonce(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  nonce_ = value;
}
inline void ProductionResetTestRequest::set_nonce(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_nonce(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.ProductionResetTestRequest.nonce)
}

// bytes device_data = 3;
inline void ProductionResetTestRequest::clear_device_data() {
  device_data_.ClearToEmpty();
}
inline const std::string& ProductionResetTestRequest::device_data() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.ProductionResetTestRequest.device_data)
  return _internal_device_data();
}
inline void ProductionResetTestRequest::set_device_data(const std::string& value) {
  _internal_set_device_data(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.ProductionResetTestRequest.device_data)
}
inline std::string* ProductionResetTestRequest::mutable_device_data() {
  // @@protoc_insertion_point(field_mutable:nugget.app.avb.ProductionResetTestRequest.device_data)
  return _internal_mutable_device_data();
}
inline const std::string& ProductionResetTestRequest::_internal_device_data() const {
  return device_data_.Get();
}
inline void ProductionResetTestRequest::_internal_set_device_data(const std::string& value) {
  
  device_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProductionResetTestRequest::set_device_data(std::string&& value) {
  
  device_data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.avb.ProductionResetTestRequest.device_data)
}
inline void ProductionResetTestRequest::set_device_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  device_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.avb.ProductionResetTestRequest.device_data)
}
inline void ProductionResetTestRequest::set_device_data(const void* value,
    size_t size) {
  
  device_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.avb.ProductionResetTestRequest.device_data)
}
inline std::string* ProductionResetTestRequest::_internal_mutable_device_data() {
  
  return device_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProductionResetTestRequest::release_device_data() {
  // @@protoc_insertion_point(field_release:nugget.app.avb.ProductionResetTestRequest.device_data)
  return device_data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProductionResetTestRequest::set_allocated_device_data(std::string* device_data) {
  if (device_data != nullptr) {
    
  } else {
    
  }
  device_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), device_data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.avb.ProductionResetTestRequest.device_data)
}

// bytes signature = 4;
inline void ProductionResetTestRequest::clear_signature() {
  signature_.ClearToEmpty();
}
inline const std::string& ProductionResetTestRequest::signature() const {
  // @@protoc_insertion_point(field_get:nugget.app.avb.ProductionResetTestRequest.signature)
  return _internal_signature();
}
inline void ProductionResetTestRequest::set_signature(const std::string& value) {
  _internal_set_signature(value);
  // @@protoc_insertion_point(field_set:nugget.app.avb.ProductionResetTestRequest.signature)
}
inline std::string* ProductionResetTestRequest::mutable_signature() {
  // @@protoc_insertion_point(field_mutable:nugget.app.avb.ProductionResetTestRequest.signature)
  return _internal_mutable_signature();
}
inline const std::string& ProductionResetTestRequest::_internal_signature() const {
  return signature_.Get();
}
inline void ProductionResetTestRequest::_internal_set_signature(const std::string& value) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProductionResetTestRequest::set_signature(std::string&& value) {
  
  signature_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:nugget.app.avb.ProductionResetTestRequest.signature)
}
inline void ProductionResetTestRequest::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:nugget.app.avb.ProductionResetTestRequest.signature)
}
inline void ProductionResetTestRequest::set_signature(const void* value,
    size_t size) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:nugget.app.avb.ProductionResetTestRequest.signature)
}
inline std::string* ProductionResetTestRequest::_internal_mutable_signature() {
  
  return signature_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProductionResetTestRequest::release_signature() {
  // @@protoc_insertion_point(field_release:nugget.app.avb.ProductionResetTestRequest.signature)
  return signature_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProductionResetTestRequest::set_allocated_signature(std::string* signature) {
  if (signature != nullptr) {
    
  } else {
    
  }
  signature_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), signature,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:nugget.app.avb.ProductionResetTestRequest.signature)
}

// -------------------------------------------------------------------

// ProductionResetTestResponse

// -------------------------------------------------------------------

// BootloaderDoneRequest

// -------------------------------------------------------------------

// BootloaderDoneResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace avb
}  // namespace app
}  // namespace nugget

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::nugget::app::avb::ResetToken_Selectors> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nugget::app::avb::ResetToken_Selectors>() {
  return ::nugget::app::avb::ResetToken_Selectors_descriptor();
}
template <> struct is_proto_enum< ::nugget::app::avb::ResetRequest_ResetKind> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nugget::app::avb::ResetRequest_ResetKind>() {
  return ::nugget::app::avb::ResetRequest_ResetKind_descriptor();
}
template <> struct is_proto_enum< ::nugget::app::avb::LockIndex> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nugget::app::avb::LockIndex>() {
  return ::nugget::app::avb::LockIndex_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_nugget_2fapp_2favb_2favb_2eproto
